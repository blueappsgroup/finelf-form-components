{"version":3,"sources":["../../src/utils.ts"],"names":["FormContext","React","getFormValuesFromCache","id","JSON","window","setFormValuesToCache","allValues","formId","resetFormValueCache","handleSendDataToApi","agreements","rest","filteredValues","fieldsForSkip","acc","mappedAgreements","Object","key","fetch","apiUrl","method","headers","Accept","body","formName","data","getFieldsValuesFromUrl","paramsList","itemValue"],"mappings":"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","sourcesContent":["import React, { Context } from 'react'\nimport { FormValuesType } from './types'\n\nexport const FormContext: Context<{\n  id?: string\n  stepsLength?: number\n  currentStep?: number\n  stepsTitleList?: string[]\n  nextStep?: Function\n  prevStep?: Function\n  apiUrl?: string\n  fieldsForSkip?: string[]\n  addFieldForSkip?: (key: string) => void\n  errorFromApi?: boolean\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  initialValues?: any\n  handleSubmit?: Function\n  setInitialValues?: Function\n  formStatus?: string\n  setFormStatus?: Function\n}> = React.createContext({})\n\nexport const getFormValuesFromCache = (\n  id?: string\n): { [key: string]: string | boolean } =>\n  (id && JSON.parse(window.sessionStorage.getItem(`form-${id}`) as string)) ||\n  {}\n\nexport const setFormValuesToCache = (\n  values: { [key: string]: string | boolean | undefined },\n  formId?: string\n): void => {\n  const allValues = getFormValuesFromCache(formId)\n  formId &&\n    window.sessionStorage.setItem(\n      `form-${formId}`,\n      JSON.stringify({ ...allValues, ...values })\n    )\n}\n\nexport const resetFormValueCache = (id: string): void =>\n  window.sessionStorage.setItem(`form-${id}`, '{}')\n\nexport const handleSendDataToApi: (\n  values: FormValuesType,\n  apiUrl: string,\n  formId: string,\n  fieldsForSkip: string[],\n  dataWithUserAgent?: boolean\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => Promise<any> = (\n  values,\n  apiUrl,\n  formId,\n  fieldsForSkip,\n  dataWithUserAgent\n) => {\n  const { agreements, ...rest } = values\n  const filteredValues = Object.keys(rest).reduce((acc, key) => {\n    if (!fieldsForSkip.includes(key) && rest[key]) {\n      acc[key] = typeof rest[key] === 'string' ? rest[key].trim() : rest[key]\n    }\n    return acc\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }, {} as { [key: string]: any })\n  const mappedAgreements =\n    agreements &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Object.keys(agreements).reduce<any>((acc, key) => {\n      if (key !== 'selectAll' && agreements[key]) {\n        acc.push(key)\n      }\n      return acc\n    }, [])\n\n  if (dataWithUserAgent) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    filteredValues.user_agent = window.navigator.userAgent\n  }\n\n  return fetch(`${apiUrl}/forms/${formId}/data`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      formName: formId,\n      data: filteredValues,\n      agreements: mappedAgreements,\n    }),\n  })\n}\n\nexport const getFieldsValuesFromUrl = (\n  paramsList: string[]\n): { [key: string]: string | null } =>\n  paramsList.reduce((acc, item) => {\n    const itemValue = new URLSearchParams(window.location.search).get(item)\n    if (itemValue !== null) {\n      acc[item] = itemValue\n    }\n    return acc\n  }, {} as { [key: string]: string | null })\n"],"file":"utils.js"}