{"version":3,"sources":["../../../../src/components/FormInput/base.tsx"],"names":["StyledRow","styled","div","Row","device","tablet","StyledError","span","props","inputErrorColor","StyledInput","input","inputBgColor","inputBorderColor","inputTextColor","inputPlaceHolderColor","BaseField","form","errors","field","name","touched","placeholder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAOA,QAAMA,SAAS,GAAGC,2BAAOC,GAAI;;;;;CAA7B;AAOO,QAAMC,GAAG,WAAHA,GAAG,GAAGF,2BAAOC,GAAI;;;;WAInBE,cAAOC,MAAO;;QAEjBL,SAAU;;;;;QAKVA,SAAU;;;;;CAXX;AAkBP,QAAMM,WAAW,GAAGL,2BAAOM,IAAK;WACpBC,KAAD,IAAWA,KAAK,CAALA,KAAAA,CAAYC,eAAgB;;;;CADlD;AAOA,QAAMC,WAAW,GAAGT,2BAAOU,KAAW;gBACrBH,KAAD,IAAWA,KAAK,CAALA,KAAAA,CAAYI,YAAa;sBAC7BJ,KAAD,IAAWA,KAAK,CAALA,KAAAA,CAAYK,gBAAiB;;;;;;;;;;;;;kBAa3CL,KAAD,IACdA,KAAK,CAALA,KAAAA,GAAcA,KAAK,CAALA,KAAAA,CAAdA,eAAAA,GAA4CA,KAAK,CAALA,KAAAA,CAAYK,gBAAiB;WACjEL,KAAD,IACPA,KAAK,CAALA,KAAAA,GAAcA,KAAK,CAALA,KAAAA,CAAdA,eAAAA,GAA4CA,KAAK,CAALA,KAAAA,CAAYM,cAAe;;;aAG7DN,KAAD,IAAWA,KAAK,CAALA,KAAAA,CAAYO,qBAAsB;;;;;;CArB1D;;AA6BA,QAAMC,SAAkD,GAAG,IAAA,IAAA;AAAA,QAAC;AAAA,MAAA,KAAA;AAE1DC,MAAAA,IAAI,EAAE;AAAA,QAAA,OAAA;AAAWC,QAAAA;AAAX;AAFoD,QAAD,IAAA;AAAA,QAGtDV,KAHsD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA;;AAAA,WAAA,aAKzD,gBAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EACGA,KAAK,CAALA,KAAAA,IAAAA,aAAe,gBAAA,aAAA,CAAA,OAAA,EAAA;AAAO,MAAA,OAAO,EAAEW,KAAK,CAACC;AAAtB,KAAA,EAA6BZ,KAAK,CADpD,KACkB,CADlB,EAAA,aAEE,gBAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AAGE,MAAA,IAAI,EAHN,MAAA;AAIE,MAAA,KAAK,EAAGW,KAAK,CAALA,KAAAA,IAAeA,KAAK,CAArB,KAACA,IAJV,EAAA;AAKE,MAAA,KAAK,EAAEE,OAAO,CAACF,KAAK,CAAbE,IAAO,CAAPA,IAAuBH,MAAM,CAACC,KAAK,CAL5C,IAKsC,CALtC;AAME,MAAA,WAAW,EACTX,KAAK,CAALA,WAAAA,IACC,GAAEA,KAAK,CAACc,WAAY,GAAGd,KAAK,CAALA,QAAAA,IAAD,GAACA,IAA0B,EAAG;AARzD,KAAA,CAAA,CAFF,EAaGA,KAAK,CAALA,SAAAA,IAAmBa,OAAO,CAACF,KAAK,CAAhCX,IAA0B,CAA1BA,IAA0CU,MAAM,CAACC,KAAK,CAAtDX,IAAgD,CAAhDA,IAAAA,aACC,gBAAA,aAAA,CAAA,WAAA,EAAA,IAAA,EAAcU,MAAM,CAACC,KAAK,CAnB2B,IAmBjC,CAApB,CAdJ,CALyD;AAA3D,GAAA;;oBAwBA,S","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { FieldWrapProps } from './types'\nimport { device } from '../../consts/sizes'\n\nconst StyledRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  position: relative;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    & ${StyledRow}:first-of-type {\n      flex-grow: 1;\n      margin-right: 5px;\n    }\n\n    & ${StyledRow}:last-child {\n      flex-grow: 1;\n      margin-left: 5px;\n    }\n  }\n`\n\nconst StyledError = styled.span`\n  color: ${(props) => props.theme.inputErrorColor};\n  position: absolute;\n  font-size: 10px;\n  bottom: -14px;\n`\n\nconst StyledInput = styled.input<any>`\n  background: ${(props) => props.theme.inputBgColor};\n  border: 1px solid ${(props) => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: 0px 7px 64px rgba(194, 186, 186, 0.07);\n  border-radius: 6px;\n  width: 100%;\n  height: 63px;\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 0px 20px;\n  border-color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  &::placeholder {\n    color: ${(props) => props.theme.inputPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst BaseField: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <StyledRow>\n    {props.label && <label htmlFor={field.name}>{props.label}</label>}\n    <StyledInput\n      {...field}\n      {...props}\n      type=\"text\"\n      value={(field.value && field.value) || ''}\n      error={touched[field.name] && errors[field.name]}\n      placeholder={\n        props.placeholder &&\n        `${props.placeholder}${(props.required && '*') || ''}`\n      }\n    />\n    {props.showError && touched[field.name] && errors[field.name] && (\n      <StyledError>{errors[field.name]}</StyledError>\n    )}\n  </StyledRow>\n)\n\nexport default BaseField\n"],"file":"base.js"}