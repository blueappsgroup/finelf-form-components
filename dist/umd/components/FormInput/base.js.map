{"version":3,"sources":["../../../../src/components/FormInput/base.tsx"],"names":["StyledRow","styled","div","props","styledRowMarginBottom","styledRowFlexWrap","labelFontSize","styledRowLabelPadding","styledRowLabelFontColor","StyledRowRangeField","Row","device","tablet","StyledError","span","inputErrorColor","inputErrorTextAlign","inputErrorFontSize","inputErrorBottom","StyledInput","input","inputBgColor","inputBorderColor","inputBoxShadow","inputBorderRadius","inputHeight","inputFontStyle","inputFontWeight","inputFontSize","inputLineHeight","inputTextAlign","inputPadding","inputTextColor","inputPlaceHolderColor","SliderRow","SliderInput","sliderInputHeight","sliderInputTextAlign","StyledSelect","select","styledSelectBgColor","styledSelectBorderWidth","styledSelectBorderStyle","styledSelectBorderColor","styledSelectBoxShadow","styledSelectBorderRadius","styledSelectHeight","styledSelectFontStyle","styledSelectFontWeight","styledSelectFontSize","styledSelectLineHeight","styledSelectVerticalPadding","styledSelectHorizontalPadding","styledSelectTextColor","styledSelectPlaceHolderColor","StyledSpan","styledSpanFontSize","styledSpanFontWeight","styledSpanFontColor","StyledInputSuffix","styledInputSuffixBgColor","styledInputSuffixBorderRadius","styledInputSuffixFontWeight","styledInputSuffixFontSize","styledInputSuffixTextColor","StyledSliderInputSuffix","StyledInputPrefix","styledInputPrefixPadding","SliderWrapper","sliderHeight","sliderBorderRadius","sliderBgColor","sliderFillBgColor","sliderHandleWidth","sliderHandleHeight","sliderHandleBgColor","sliderHandleBoxShadow","sliderHandleBorderWidth","sliderHandleBorderStyle","sliderHandleBorderColor","sliderHandleBorderRadius","sliderHandleAfterWidth","sliderHandleAfterHeight","sliderHandleAfterBorderRadius","InputWrapper","BaseField","form","values","id","useContext","handleOnBlur","e","setFormValuesToCache","field","name","label","touched","errors","placeholder","borderBottomLeftRadius","borderTopLeftRadius","BaseSelectField","options","option","BaseRangeField","setFieldValue","useState","parseInt","handleOnChangeSlider","value","setValue","handleOnChangeCompleteSlider","handleOnChange","Math","useLayoutEffect"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, {\n  ChangeEvent,\n  ReactElement,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport Slider from 'react-rangeslider'\nimport styled from 'styled-components'\n\nimport { device } from '../../consts/sizes'\nimport {\n  FieldWrapProps,\n  RangeFieldWrapProps,\n  SelectFieldOptions,\n  SelectFieldWrapProps,\n} from '../../types'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype StyledProps = {\n  theme: {\n    submitButtonBgColor: string\n    inputHeight: string\n    inputErrorColor: string\n    inputErrorTextAlign: string\n    inputErrorFontSize: string\n    inputErrorBottom: string\n    inputBgColor: string\n    inputPlaceHolderColor: string\n    inputBorderColor: string\n    inputBorderWidth: string\n    inputBorderStyle: string\n    inputBorderRadius: string\n    inputTextColor: string\n    inputFontSize: string\n    inputFontWeight: string\n    inputFontStyle: string\n    inputBoxShadow: string\n    inputLineHeight: string\n    inputTextAlign: string\n    inputPadding: string\n    labelFontSize: string\n    styledRowFlexWrap: string\n    styledRowLabelPadding: string\n    styledRowLabelFontColor: string\n    styledSelectHeight: string\n    styledSelectErrorColor: string\n    styledSelectErrorTextAlign: string\n    styledSelectBgColor: string\n    styledSelectPlaceHolderColor: string\n    styledSelectBorderColor: string\n    styledSelectBorderWidth: string\n    styledSelectBorderStyle: string\n    styledSelectBorderRadius: string\n    styledSelectTextColor: string\n    styledSelectFontSize: string\n    styledSelectFontWeight: string\n    styledSelectFontStyle: string\n    styledSelectBoxShadow: string\n    styledSelectLineHeight: string\n    styledSelectPadding: string\n    styledSelectVerticalPadding: string\n    styledSelectHorizontalPadding: string\n    styledSpanFontSize: string\n    styledSpanFontColor: string\n    styledSpanFontWeight: string\n    styledRowMarginBottom: string\n    sliderHeight: string\n    sliderInputHeight: string\n    sliderInputTextAlign: string\n    sliderBorderRadius: string\n    sliderBgColor: string\n    sliderFillBgColor: string\n    sliderHandleBgColor: string\n    sliderHandleBorderColor: string\n    sliderHandleBoxShadow: string\n    sliderHandleBorderWidth: string\n    sliderHandleBorderStyle: string\n    sliderHandleBorderRadius: string\n    sliderHandleWidth: string\n    sliderHandleHeight: string\n    sliderHandleAfterWidth: string\n    sliderHandleAfterHeight: string\n    sliderHandleAfterBorderRadius: string\n    styledInputSuffixBgColor: string\n    styledInputSuffixTextColor: string\n    styledInputSuffixFontSize: string\n    styledInputSuffixFontWeight: string\n    styledInputSuffixBorderRadius: string\n    styledInputPrefixPadding: string\n  }\n  error?: string | boolean\n}\n\n/* eslint-disable */\nconst StyledRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${(props: StyledProps): string => props.theme.styledRowMarginBottom};\n  position: relative;\n  flex-wrap: ${(props: StyledProps): string => props.theme.styledRowFlexWrap};\n  label {\n    font-size: ${(props: StyledProps): string => props.theme.labelFontSize};\n    padding: ${(props: StyledProps): string => props.theme.styledRowLabelPadding};\n    color: ${(props: StyledProps): string => props.theme.styledRowLabelFontColor};\n  }\n`\n\nconst StyledRowRangeField = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${(props: StyledProps): string => props.theme.styledRowMarginBottom};\n  position: relative;\n  flex-wrap: ${(props: StyledProps): string => props.theme.styledRowFlexWrap};\n  justify-content: space-between;\n  label {\n    font-size: ${(props: StyledProps): string => props.theme.labelFontSize};\n    padding: ${(props: StyledProps): string => props.theme.styledRowLabelPadding};\n    color: ${(props: StyledProps): string => props.theme.styledRowLabelFontColor};\n  }\n`\n/* eslint-enable */\n\nexport const Row = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    justify-content: space-between;\n    & ${StyledRow}:first-of-type {\n      flex-grow: 1;\n      margin-right: 5px;\n    }\n\n    & ${StyledRow}:last-child {\n      flex-grow: 1;\n      margin-left: 5px;\n    }\n  }\n`\n\nconst StyledError = styled.span`\n  color: ${(props: StyledProps): string => props.theme.inputErrorColor};\n  text-align: ${(props: StyledProps): string =>\n    props.theme.inputErrorTextAlign};\n  position: absolute;\n  width: 100%;\n  font-size: ${(props: StyledProps): string => props.theme.inputErrorFontSize};\n  bottom: ${(props: StyledProps): string => props.theme.inputErrorBottom};\n`\n\nconst StyledInput = styled.input<any>`\n  background: ${(props: StyledProps): string => props.theme.inputBgColor};\n  border: 1px solid\n    ${(props: StyledProps): string => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: ${(props: StyledProps): string => props.theme.inputBoxShadow};\n  border-radius: ${(props: StyledProps): string =>\n    props.theme.inputBorderRadius};\n  width: 100%;\n  height: ${(props: StyledProps): string => props.theme.inputHeight};\n  display: flex;\n  align-items: center;\n  font-style: ${(props: StyledProps): string => props.theme.inputFontStyle};\n  font-weight: ${(props: StyledProps): string => props.theme.inputFontWeight};\n  font-size: ${(props: StyledProps): string => props.theme.inputFontSize};\n  line-height: ${(props: StyledProps): string => props.theme.inputLineHeight};\n  text-align: ${(props: StyledProps): string => props.theme.inputTextAlign};\n  padding: ${(props: StyledProps): string => props.theme.inputPadding};\n  border-color: ${(props: StyledProps): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  &::placeholder {\n    color: ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n    font-size: ${(props: StyledProps): string => props.theme.inputFontSize};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const SliderRow = styled.div`\n  display: flex;\n  padding: 25px 0;\n  flex-direction: row;\n`\n\nconst SliderInput = styled.input<any>`\n  background: ${(props: StyledProps): string => props.theme.inputBgColor};\n  border: 1px solid\n    ${(props: StyledProps): string => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: ${(props: StyledProps): string => props.theme.inputBoxShadow};\n  border-radius: ${(props: StyledProps): string =>\n    props.theme.inputBorderRadius};\n  width: 100px;\n  height: ${(props: StyledProps): string => props.theme.sliderInputHeight};\n  display: flex;\n  align-items: center;\n  font-style: ${(props: StyledProps): string => props.theme.inputFontStyle};\n  font-weight: ${(props: StyledProps): string => props.theme.inputFontWeight};\n  font-size: ${(props: StyledProps): string => props.theme.inputFontSize};\n  line-height: ${(props: StyledProps): string => props.theme.inputLineHeight};\n  text-align: ${(props: StyledProps): string =>\n    props.theme.sliderInputTextAlign};\n  padding: ${(props: StyledProps): string => props.theme.inputPadding};\n  border-color: ${(props: StyledProps): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  ${(props: any) =>\n    props.hasPrefix &&\n    'border-left: none; border-top-left-radius: 0px; border-bottom-left-radius: 0px;'}\n  ${(props: any) =>\n    props.hasSufix &&\n    'border-right: none; border-top-right-radius: 0px; border-bottom-right-radius: 0px;'}\n\n  &::placeholder {\n    color: ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\n/* eslint-disable */\nconst StyledSelect = styled.select<any>`\n  background: ${(props: StyledProps): string => props.theme.styledSelectBgColor};\n  border: ${(props: StyledProps): string => props.theme.styledSelectBorderWidth} ${(props: StyledProps): string => props.theme.styledSelectBorderStyle}\n    ${(props: StyledProps): string => props.theme.styledSelectBorderColor};\n  box-sizing: border-box;\n  box-shadow: ${(props: StyledProps): string => props.theme.styledSelectBoxShadow};\n  border-radius: ${(props: StyledProps): string => props.theme.styledSelectBorderRadius};\n  width: 100%;\n  height: ${(props: StyledProps): string => props.theme.styledSelectHeight};\n  display: flex;\n  align-items: center;\n  font-style: ${(props: StyledProps): string => props.theme.styledSelectFontStyle};\n  font-weight: ${(props: StyledProps): string => props.theme.styledSelectFontWeight};\n  font-size: ${(props: StyledProps): string => props.theme.styledSelectFontSize};\n  line-height: ${(props: StyledProps): string => props.theme.styledSelectLineHeight};\n  padding: ${(props: StyledProps): string => props.theme.styledSelectVerticalPadding} ${(props: StyledProps): string => props.theme.styledSelectHorizontalPadding};\n  border-color: ${(props: StyledProps): string =>\n  props.error ? props.theme.styledSelectErrorColor : props.theme.styledSelectBorderColor};\n  color: ${(props: any): string =>\n  props.error ? props.theme.styledSelectErrorColor : props.theme.styledSelectTextColor};\n\n  option:disabled {\n    color: ${(props: StyledProps): string => props.theme.styledSelectPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst StyledSpan = styled.span`\n  font-size: ${(props: StyledProps): string => props.theme.styledSpanFontSize};\n  font-weight: ${(props: StyledProps): string => props.theme.styledSpanFontWeight};\n  color: ${(props: StyledProps): string => props.theme.styledSpanFontColor};\n`\n\nconst StyledInputSuffix = styled.span`\n  display: flex;\n  align-items: center;\n  height: ${(props: StyledProps): string => props.theme.inputHeight};\n  width: ${(props: StyledProps): string => props.theme.inputHeight};\n  box-sizing: border-box;\n  background-color: ${(props: StyledProps): string => props.theme.styledInputSuffixBgColor};\n  border-radius: ${(props: StyledProps): string => props.theme.styledInputSuffixBorderRadius};\n  font-weight: ${(props: StyledProps): string => props.theme.styledInputSuffixFontWeight};\n  font-size: ${(props: StyledProps): string => props.theme.styledInputSuffixFontSize};\n  color: ${(props: StyledProps): string => props.theme.styledInputSuffixTextColor};\n  justify-content: center;\n`\n\nconst StyledSliderInputSuffix = styled.span`\n  display: flex;\n  align-items: center;\n  height: ${(props: StyledProps): string => props.theme.sliderInputHeight};\n  width: ${(props: StyledProps): string => props.theme.sliderInputHeight};\n  box-sizing: border-box;\n  background-color: ${(props: StyledProps): string => props.theme.styledInputSuffixBgColor};\n  border-radius: ${(props: StyledProps): string => props.theme.styledInputSuffixBorderRadius};\n  font-weight: ${(props: StyledProps): string => props.theme.styledInputSuffixFontWeight};\n  font-size: ${(props: StyledProps): string => props.theme.styledInputSuffixFontSize};\n  color: ${(props: StyledProps): string => props.theme.styledInputSuffixTextColor};\n  justify-content: center;\n`\n\nconst StyledInputPrefix = styled.span<any>`\n  position: relative;\n  left: 0px;\n  height: ${(props: StyledProps): string => props.theme.inputHeight};\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  height: ${(props: StyledProps): string => props.theme.inputHeight};\n  border: 1px solid ${(props: StyledProps): string => props.theme.inputBorderColor};\n  border-top-left-radius: ${(props: StyledProps): string => props.theme.inputBorderRadius};\n  border-bottom-left-radius: ${(props: StyledProps): string => props.theme.inputBorderRadius};\n  padding: ${(props: StyledProps): string => props.theme.styledInputPrefixPadding};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n  font-weight: ${(props: StyledProps): string => props.theme.inputFontWeight};  \n  border-top-color: ${(props: StyledProps): string => props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  border-bottom-color: ${(props: StyledProps): string => props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  border-left-color: ${(props: StyledProps): string => props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n`\n\nconst SliderWrapper = styled.div`\n padding-bottom: 25px;\n .rangeslider {\n  position: relative;\n  width: 100%;\n  height: ${(props: StyledProps): string => props.theme.sliderHeight};\n  border-radius: ${(props: StyledProps): string => props.theme.sliderBorderRadius};\n  background-color: ${(props: StyledProps): string => props.theme.sliderBgColor};\n  .rangeslider__fill {\n   height: 100%;\n   background-color: ${(props: StyledProps): string => props.theme.sliderFillBgColor};\n   border-radius: ${(props: StyledProps): string => props.theme.sliderBorderRadius};\n  }\n  .rangeslider__handle {\n   top: 0;\n   bottom: 0;\n   margin: auto;\n   width: ${(props: StyledProps): string => props.theme.sliderHandleWidth};\n   height: ${(props: StyledProps): string => props.theme.sliderHandleHeight};\n   background-color: ${(props: StyledProps): string => props.theme.sliderHandleBgColor};\n   position: absolute;\n   cursor: pointer;\n   box-shadow: ${(props: StyledProps): string => props.theme.sliderHandleBoxShadow};\n   border: ${(props: StyledProps): string => props.theme.sliderHandleBorderWidth} ${(props: StyledProps): string => props.theme.sliderHandleBorderStyle} ${(props: StyledProps): string => props.theme.sliderHandleBorderColor};\n   border-radius: ${(props: StyledProps): string => props.theme.sliderHandleBorderRadius};\n   &::after {\n    width: ${(props: StyledProps): string => props.theme.sliderHandleAfterWidth};\n    height: ${(props: StyledProps): string => props.theme.sliderHandleAfterHeight};\n    background-color: ${(props: StyledProps): string => props.theme.sliderFillBgColor};\n    border-radius: ${(props: StyledProps): string => props.theme.sliderHandleAfterBorderRadius};\n    position: absolute;\n    content: '';\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n   }\n  }\n }\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width:100%;\n  flex-direction: row;\n`\n\n/* eslint-enable */\n\nconst BaseField: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFormValuesToCache(values, id)\n    field.onBlur && field.onBlur(e)\n  }\n\n  return (\n    <StyledRow>\n      {props.label && (\n        <label htmlFor={field.name}>{`${props.label}${\n          (props.required && '*') || ''\n        }`}</label>\n      )}\n      <InputWrapper>\n        {props.prefix && (\n          <StyledInputPrefix error={touched[field.name] && errors[field.name]}>\n            {props.prefix}\n          </StyledInputPrefix>\n        )}\n        <StyledInput\n          {...field}\n          {...props}\n          required={props.required}\n          hasPrefix={!!props.prefix}\n          hasSufix={!!props.suffix}\n          onBlur={handleOnBlur}\n          type={props.type}\n          value={(field.value && field.value) || ''}\n          error={touched[field.name] && errors[field.name]}\n          placeholder={\n            props.placeholder &&\n            `${props.placeholder}${(props.required && '*') || ''}`\n          }\n          style={\n            props.prefix && {\n              borderBottomLeftRadius: '0px',\n              borderTopLeftRadius: '0px',\n            }\n          }\n        />\n        {props.suffix && <StyledInputSuffix>{props.suffix}</StyledInputSuffix>}\n      </InputWrapper>\n      {props.showError && touched[field.name] && errors[field.name] && (\n        <StyledError>{errors[field.name]}</StyledError>\n      )}\n    </StyledRow>\n  )\n}\n\nexport default BaseField\n\nexport const BaseSelectField: (props: SelectFieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFormValuesToCache(values, id)\n    field.onBlur && field.onBlur(e)\n  }\n\n  const options = (options: SelectFieldOptions): Array<JSX.Element> => {\n    return [\n      <option key=\"select\" value=\"select\" disabled>\n        {`wybierz ${(props.required && '*') || ''}`}\n      </option>,\n    ].concat(\n      Object.keys(options).map((option) => {\n        return (\n          <option key={option} value={option}>\n            {options[option]}\n          </option>\n        )\n      })\n    )\n  }\n\n  return (\n    <StyledRow>\n      {props.label && (\n        <label htmlFor={field.name}>{`${props.label}${\n          (props.required && '*') || ''\n        }`}</label>\n      )}\n      <StyledSelect\n        {...field}\n        {...props}\n        onBlur={handleOnBlur}\n        type=\"text\"\n        value={(field.value && field.value) || 'select'}\n        error={touched[field.name] && errors[field.name]}\n        placeholder={\n          props.placeholder &&\n          `${props.placeholder}${(props.required && '*') || ''}`\n        }\n      >\n        {props.options && options(props.options)}\n      </StyledSelect>\n      {props.showError && touched[field.name] && errors[field.name] && (\n        <StyledError>{errors[field.name]}</StyledError>\n      )}\n    </StyledRow>\n  )\n}\n\nexport const BaseRangeField: (props: RangeFieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values, setFieldValue },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const [value, setValue] = useState(parseInt(field.value) || props.value || 0)\n  const handleOnChangeSlider = (value: number): void => {\n    setValue(value)\n  }\n  const handleOnChangeCompleteSlider = (): void => {\n    setFormValuesToCache(\n      {\n        ...values,\n        [field.name]: value,\n      },\n      id\n    )\n  }\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const value = parseInt(e.target.value) || 0\n    setValue(value)\n    field.onChange && field.onChange(e)\n  }\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    let value = parseInt(e.target.value) || 0\n\n    if (props.min && props.min > value) {\n      value = props.min\n    }\n\n    if (props.max && props.max < value) {\n      value = props.max\n    }\n\n    value = props.step ? Math.ceil(value / props.step) * props.step : value\n\n    setValue(value)\n    setFormValuesToCache(\n      {\n        ...values,\n        [field.name]: value,\n      },\n      id\n    )\n    field.onBlur && field.onBlur(e)\n  }\n\n  useLayoutEffect(() => {\n    setFieldValue(field.name, value)\n  }, [field.name, value, setFieldValue])\n\n  return (\n    <div>\n      <StyledRowRangeField>\n        {props.label && <label htmlFor={field.name}>{props.label}</label>}\n        <SliderRow>\n          <SliderInput\n            {...field}\n            {...props}\n            onChange={handleOnChange}\n            onBlur={handleOnBlur}\n            type={props.type}\n            value={value}\n            error={touched[field.name] && errors[field.name]}\n            placeholder={\n              props.placeholder &&\n              `${props.placeholder}${(props.required && '*') || ''}`\n            }\n          />\n          {props.suffix && (\n            <StyledSliderInputSuffix>{props.suffix}</StyledSliderInputSuffix>\n          )}\n        </SliderRow>\n      </StyledRowRangeField>\n      <SliderWrapper>\n        <Slider\n          min={props.min}\n          max={props.max}\n          step={props.step}\n          value={value}\n          tooltip={false}\n          onChange={handleOnChangeSlider}\n          onChangeComplete={handleOnChangeCompleteSlider}\n        />\n      </SliderWrapper>\n      {props.showMinMax && (\n        <StyledRowRangeField>\n          <StyledSpan>\n            Min. {props.min} {props.unit}\n          </StyledSpan>\n          <StyledSpan>\n            Max. {props.max} {props.unit}\n          </StyledSpan>\n        </StyledRowRangeField>\n      )}\n    </div>\n  )\n}\n"],"file":"base.js"}