{"version":3,"sources":["../../../../src/components/FormInput/validateHelpers.ts"],"names":["isEmpty","value","isNotValidLength","from","to","isNotValidPhoneNumber","isNotValidEmail","isNotValidNumberBetween1And10Digits","isNotLetter","isNotNumber","haveSpecialChars","isValidPesel","weights","controlNumber","parseInt","sum","control","index","isNotValidZipCode","isValidNIP","nip","trimedNip","isValidBankAccountNumber","accountNumber","modifiedAccountNumber","modifiedAccountNumberChunks","isValidIDCard","idNumber","getLetterValue","letter","letterValues","i","controlSum","isNotValidIDCard","isNotValidOption","options","isAdult","dateString","today","birthDate","age","m"],"mappings":"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","sourcesContent":["export const isEmpty = (value: string): boolean => !value\n\nexport const isNotValidLength = (value: string, from = 2, to = 100): boolean =>\n  value.length < from || value.length > to\n\nexport const isNotValidPhoneNumber = (value: string): boolean =>\n  !/^(45|50|51|53|57|60|66|69|72|73|78|79|88)[0-9]{7}$/.test(value)\n\nexport const isNotValidEmail = (value: string): boolean =>\n  !/[a-zA-Z0-9_.+-]+@[a-zAZ0-9-]+\\.[a-zA-Z0-9-.]+$/.test(value)\n\nexport const isNotValidNumberBetween1And10Digits = (value: string): boolean =>\n  !/^[0-9]{1,10}$/.test(value)\n\nexport const isNotLetter = (value: string): boolean => !/[A-Za-z.]$/.test(value)\n\nexport const isNotNumber = (value: string): boolean => !/[0-9]$/.test(value)\n\nexport const haveSpecialChars = (value: string): boolean =>\n  !/^[A-Za-zżźćńółęąśŻŹĆĄŚĘŁÓŃ0-9 -]*$$/.test(value)\n\nexport const isValidPesel = (value: string): boolean => {\n  if (value.length === 11) {\n    const weights = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3]\n    const controlNumber = parseInt(value.substring(10, 11))\n    let sum = 0\n    let control = 10\n\n    weights.filter(\n      (weight, index) =>\n        (sum += parseInt(value.substring(index, index + 1)) * weight)\n    )\n    sum = sum % 10\n\n    if (sum === 0) {\n      control = 0\n    }\n\n    return control - sum === controlNumber\n  }\n\n  return false\n}\n\nexport const isNotValidZipCode = (value: string): boolean =>\n  !/^[0-9]{2}-[0-9]{3}$/.test(value)\n\nexport const isValidNIP = (nip: string): boolean => {\n  const trimedNip = nip.trim()\n  if (trimedNip.length === 10) {\n    const weights = [6, 5, 7, 2, 3, 4, 5, 6, 7]\n    const controlNumber = parseInt(trimedNip.substring(9, 10))\n    let sum = 0\n\n    weights.forEach(\n      (weight, index) =>\n        (sum += parseInt(trimedNip.substring(index, index + 1)) * weight)\n    )\n\n    return sum % 11 === controlNumber\n  }\n\n  return false\n}\n\nexport const isValidBankAccountNumber = (value: string): boolean => {\n  if (value.length === 26) {\n    const accountNumber = value.slice(2, 27)\n    const modifiedAccountNumber = accountNumber.concat(\n      '2521',\n      value[0],\n      value[1]\n    )\n\n    const modifiedAccountNumberChunks: any[] = [\n      modifiedAccountNumber.slice(0, 10),\n      modifiedAccountNumber.slice(10, 20),\n      modifiedAccountNumber.slice(20, 30),\n    ]\n\n    return (\n      ((((modifiedAccountNumberChunks[0] % 97) +\n        modifiedAccountNumberChunks[1]) %\n        97) +\n        modifiedAccountNumberChunks[2]) %\n        97 ===\n      1\n    )\n  }\n\n  return false\n}\n\nexport const isValidIDCard = (value: string): boolean => {\n  if (value.length === 9) {\n    const idNumber = value.toUpperCase()\n    const getLetterValue = (letter: string): number => {\n      const letterValues = [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        'A',\n        'B',\n        'C',\n        'D',\n        'E',\n        'F',\n        'G',\n        'H',\n        'I',\n        'J',\n        'K',\n        'L',\n        'M',\n        'N',\n        'O',\n        'P',\n        'Q',\n        'R',\n        'S',\n        'T',\n        'U',\n        'V',\n        'W',\n        'X',\n        'Y',\n        'Z',\n      ]\n\n      return letterValues.findIndex((value) => value === letter)\n    }\n\n    for (let i = 0; i < 3; i++) {\n      if (getLetterValue(idNumber[i]) < 10) return false\n    }\n\n    for (let i = 3; i < 9; i++) {\n      if (getLetterValue(idNumber[i]) < 0 || getLetterValue(idNumber[i]) > 9)\n        return false\n    }\n\n    const controlSum =\n      7 * getLetterValue(idNumber[0]) +\n      3 * getLetterValue(idNumber[1]) +\n      1 * getLetterValue(idNumber[2]) +\n      7 * getLetterValue(idNumber[4]) +\n      3 * getLetterValue(idNumber[5]) +\n      1 * getLetterValue(idNumber[6]) +\n      7 * getLetterValue(idNumber[7]) +\n      3 * getLetterValue(idNumber[8])\n\n    return controlSum % 10 === getLetterValue(idNumber[3])\n  }\n\n  return false\n}\n\nexport const isNotValidIDCard = (value: string): boolean =>\n  !/^[A-z]{3}[0-9]{6}$/.test(value)\n\nexport const isNotValidOption = (value: string, options: object): boolean =>\n  !options.hasOwnProperty(value)\n\nexport const isAdult = (dateString: string): boolean => {\n  const today = new Date()\n  const birthDate = new Date(dateString)\n  let age = today.getFullYear() - birthDate.getFullYear()\n  const m = today.getMonth() - birthDate.getMonth()\n\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--\n  }\n\n  return age >= 18\n}\n"],"file":"validateHelpers.js"}