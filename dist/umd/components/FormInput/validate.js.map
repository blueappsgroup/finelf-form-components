{"version":3,"sources":["../../../../src/components/FormInput/validate.ts"],"names":["validateText","required","value","trimedValue","isEmpty","isNotValidLength","isNotLetter","validateEmail","customErrorMsg","isNotValidEmail","validateTelNumber","isNotValidPhoneNumber","validateCheckbox","validatePesel","isNotNumber","isValidPesel","validateHouseNumber","validateCityName","haveSpecialChars","validateZipCode","isNotValidZipCode","validateCompanyTax","isValidNIP","validateBankAccountNumber","isValidBankAccountNumber","validateIDCardNumber","isNotValidIDCard","isValidIDCard","validateOtherLoanAmount","isNotValidNumberBetween1And10Digits","validateAmountOfChildren","validateIncome","validateSelect","isNotValidOption","validateDate","validateBirthDate","isAdult"],"mappings":"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","sourcesContent":["import {\n  isEmpty,\n  isNotValidLength,\n  isNotValidPhoneNumber,\n  isNotValidEmail,\n  isNotValidNumberBetween1And10Digits,\n  isNotLetter,\n  isNotNumber,\n  isValidPesel,\n  haveSpecialChars,\n  isNotValidZipCode,\n  isValidNIP,\n  isValidBankAccountNumber,\n  isValidIDCard,\n  isNotValidIDCard,\n  isNotValidOption,\n  isAdult,\n} from './validateHelpers'\n\nexport const validateText: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(trimedValue)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (isNotLetter(trimedValue)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateEmail: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Niepoprawny adres email',\n  required: boolean\n) => (value: string): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidEmail(trimedValue)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateTelNumber: (\n  required: boolean,\n  customErrorMsg: string | undefined\n) => (value: string) => string | undefined = (\n  required: boolean,\n  customErrorMsg\n) => (value: string): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidPhoneNumber(trimedValue)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateCheckbox: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => (required && !value && 'required') || undefined\n\nexport const validatePesel: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(trimedValue)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n\n  if (!isValidPesel(trimedValue)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n}\n\nexport const validateHouseNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(trimedValue, 1, 10)) {\n    return 'Podany numer mieszkania jest nieprawidłowy'\n  }\n}\n\nexport const validateCityName: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(trimedValue)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (haveSpecialChars(trimedValue)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateZipCode: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(trimedValue, 1, 10)) {\n    return 'Pole musi zawierać między 1 - 10 znaków'\n  }\n\n  if (isNotValidZipCode(trimedValue)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateCompanyTax: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (!isValidNIP(value)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n}\n\nexport const validateBankAccountNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(trimedValue)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n\n  if (isNotValidLength(trimedValue, 26, 26)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n  if (!isValidBankAccountNumber(trimedValue)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n}\n\nexport const validateIDCardNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidIDCard(trimedValue)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (!isValidIDCard(trimedValue)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (isNotNumber(trimedValue)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n}\n\nexport const validateOtherLoanAmount: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Podana kwota jest nieprawidłowa',\n  required: boolean\n) => (value: string): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidNumberBetween1And10Digits(trimedValue)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateAmountOfChildren: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Podana liczba jest nieprawidłowa',\n  required: boolean\n) => (value: string): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidNumberBetween1And10Digits(trimedValue)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateIncome: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Podana kwota jest nieprawidłowa',\n  required: boolean\n) => (value: string): string | undefined => {\n  const trimedValue = value && value.trim()\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(trimedValue)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidNumberBetween1And10Digits(trimedValue)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateSelect: (\n  required: boolean,\n  options: object\n) => (value: string) => string | undefined = (\n  required: boolean,\n  options: object\n) => (value: string): string | undefined => {\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidOption(value, options)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateDate: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n}\n\nexport const validateBirthDate: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (!required && !value) {\n    return\n  }\n\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (!isAdult(value)) {\n    return 'Musisz mieć skończone 18 lat'\n  }\n}\n"],"file":"validate.js"}