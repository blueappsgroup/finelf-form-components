{"version":3,"sources":["../../../../src/components/FormInput/validate.ts"],"names":["validateText","required","value","isEmpty","isNotValidLength","isNotLetter","validateEmail","customErrorMsg","isNotValidEmail","validateTelNumber","isNotValidPhoneNumber","validateCheckbox","validatePesel","isNotNumber","isValidPesel","validateHouseNumber","validateCityName","haveSpecialChars","validateZipCode","isNotValidZipCode","validateCompanyTax","isValidNIP","validateBankAccountNumber","isValidBankAccountNumber","validateIDCardNumber","isNotValidIDCard","isValidIDCard","validateOtherLoanAmount","isNotValidOtherLoanAmount"],"mappings":"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","sourcesContent":["import {\n  isEmpty,\n  isNotValidLength,\n  isNotValidPhoneNumber,\n  isNotValidEmail,\n  isNotLetter,\n  isNotNumber,\n  isValidPesel,\n  haveSpecialChars,\n  isNotValidZipCode,\n  isValidNIP,\n  isValidBankAccountNumber,\n  isValidIDCard,\n  isNotValidIDCard,\n  isNotValidOtherLoanAmount,\n} from './validateHelpers'\n\nexport const validateText: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (isNotLetter(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateEmail: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Niepoprawny adres email',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidEmail(value)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateTelNumber: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Niepoprawny numer telefonu',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidPhoneNumber(value)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateCheckbox: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => (required && !value && 'required') || undefined\n\nexport const validatePesel: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n\n  if (!isValidPesel(value)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n}\n\nexport const validateHouseNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value, 1, 10)) {\n    return 'Podany numer mieszkania jest nieprawidłowy'\n  }\n}\n\nexport const validateCityName: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (haveSpecialChars(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateZipCode: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value, 1, 10)) {\n    return 'Pole musi zawierać między 1 - 10 znaków'\n  }\n\n  if (isNotValidZipCode(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateCompanyTax: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n\n  if (isNotValidLength(value, 10, 10)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n  if (!isValidNIP(value)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n}\n\nexport const validateBankAccountNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n\n  if (isNotValidLength(value, 26, 26)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n  if (!isValidBankAccountNumber(value)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n}\n\nexport const validateIDCardNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidIDCard(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (!isValidIDCard(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n}\n\nexport const validateOtherLoanAmount: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Podana kwota jest nieprawidłowa',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidOtherLoanAmount(value)) {\n    return customErrorMsg\n  }\n}\n"],"file":"validate.js"}