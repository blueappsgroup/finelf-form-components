{"version":3,"sources":["../../../../src/components/RedirectPage/index.tsx"],"names":["PageWrapper","styled","div","props","backgroundImage","Wrapper","StyledHeader","h1","redirectPageHeaderTextColor","RedirectText","h3","redirectPageRedirectTextColor","CounterText","span","redirectPageCounterTextColor","StyledLogo","img","StyledMainImg","RedirectPage","headerText","timeToRedirect","redirectUrl","useState","decraseCounter","useCallback","setTimeout","setCounter","counter","useLayoutEffect","window","logoImg","mainImg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,QAAMA,WAAW,GAAGC,2BAAOC,GAAkC;;;;;IAKxDC,KAAD,IACAA,KAAK,CAALA,eAAAA,IAA0B,yBAAwBA,KAAK,CAACC,eAAgB,IAAI;CANhF;AASA,QAAMC,OAAO,GAAGJ,2BAAOC,GAAI;;;CAA3B;AAKA,QAAMI,YAAY,GAAGL,2BAAOM,EAAG;;;;;WAKnBJ,KAAD,IACPA,KAAK,CAALA,KAAAA,CAAYK,2BAA4B;CAN5C;AASA,QAAMC,YAAY,GAAGR,2BAAOS,EAAG;;;;;WAKnBP,KAAD,IACPA,KAAK,CAALA,KAAAA,CAAYQ,6BAA8B;CAN9C;AASA,QAAMC,WAAW,GAAGX,2BAAOY,IAAK;WACpBV,KAAD,IACPA,KAAK,CAALA,KAAAA,CAAYW,4BAA6B;CAF7C;AAKA,QAAMC,UAAU,GAAGd,2BAAOe,GAAI;;CAA9B;AAIA,QAAMC,aAAa,GAAGhB,2BAAOe,GAAI;;CAAjC;;AAIA,QAAME,YAAwC,GAAG,CAAC;AAChDC,IAAAA,UAAU,GADsC,wEAAA;AAAA,IAAA,eAAA;AAAA,IAAA,OAAA;AAAA,IAAA,OAAA;AAKhDC,IAAAA,cAAc,GALkC,CAAA;AAMhDC,IAAAA;AANgD,GAAD,KAO3C;AACJ,UAAM,CAAA,OAAA,EAAA,UAAA,IAAwBC,qBAA9B,cAA8BA,CAA9B;AACA,UAAMC,cAAc,GAAGC,wBAAY,MAAY;AAC7CC,MAAAA,UAAU,CAACA,UAAU,CAAC,MAAMC,UAAU,CAAEC,OAAD,IAAaA,OAAO,GAAtC,CAAiB,CAAjB,EAArBF,IAAqB,CAAX,CAAVA;AADgC,KAAXD,EAEpB,CAFH,UAEG,CAFoBA,CAAvB;AAIAI,gCAAgB,MAAM;AACpB,UAAID,OAAO,GAAX,CAAA,EAAiB;AACfJ,QAAAA,cAAc;AACd;AACD;;AAEDF,MAAAA,WAAW,IAAIQ,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAfR,WAAeQ,CAAfR;AANa,KAAfO,EAOG,CAAA,OAAA,EAAA,cAAA,EAPHA,WAOG,CAPHA;AASA,WAAA,aACE,gBAAA,aAAA,CAAA,WAAA,EAAA;AAAa,MAAA,eAAe,EAAExB;AAA9B,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EACG0B,OAAO,IAAA,aAAI,gBAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,GAAG,EAAEA;AAAjB,KAAA,CADd,EAAA,aAEE,gBAAA,aAAA,CAAA,YAAA,EAAA,IAAA,EAFF,UAEE,CAFF,EAAA,aAGE,gBAAA,aAAA,CAAA,YAAA,EAAA,IAAA,EAAA,8BAAA,EAAA,aAC8B,gBAAA,aAAA,CAAA,WAAA,EAAA,IAAA,EAAA,OAAA,EAJhC,GAIgC,CAD9B,CAHF,EAMGC,OAAO,IAAA,aAAI,gBAAA,aAAA,CAAA,aAAA,EAAA;AAAe,MAAA,GAAG,EAAEA;AAApB,KAAA,CANd,CADF,CADF;AAtBF,GAAA;;oBAoCA,Y","sourcesContent":["import React, { FC, useCallback, useLayoutEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { RedirectPagePropsTypes } from '../../types'\n\ntype StyledProps = {\n  theme: {\n    redirectPageHeaderTextColor: string\n    redirectPageRedirectTextColor: string\n    redirectPageCounterTextColor: string\n  }\n}\n\nconst PageWrapper = styled.div<{ backgroundImage?: string }>`\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  text-align: center;\n  ${(props): string | undefined =>\n    props.backgroundImage && `background-image: url(${props.backgroundImage});`}\n`\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`\n\nconst StyledHeader = styled.h1`\n  font-size: 45px;\n  font-weight: 900;\n  line-height: 64px;\n  margin: 0px 0px 45px 0px;\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageHeaderTextColor};\n`\n\nconst RedirectText = styled.h3`\n  font-size: 35px;\n  font-weight: 700;\n  line-height: 50px;\n  margin: 0px;\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageRedirectTextColor};\n`\n\nconst CounterText = styled.span`\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageCounterTextColor};\n`\n\nconst StyledLogo = styled.img`\n  margin: 90px auto 45px;\n`\n\nconst StyledMainImg = styled.img`\n  margin: 45px auto 0px;\n`\n\nconst RedirectPage: FC<RedirectPagePropsTypes> = ({\n  headerText = 'Dziękujemy za przesłanie wniosku! \u000bSzukamy dla Ciebie idealnej oferty.',\n  backgroundImage,\n  logoImg,\n  mainImg,\n  timeToRedirect = 5,\n  redirectUrl,\n}) => {\n  const [counter, setCounter] = useState(timeToRedirect)\n  const decraseCounter = useCallback((): void => {\n    setTimeout(setTimeout(() => setCounter((counter) => counter - 1), 1000))\n  }, [setCounter])\n\n  useLayoutEffect(() => {\n    if (counter > 0) {\n      decraseCounter()\n      return\n    }\n\n    redirectUrl && window.location.replace(redirectUrl)\n  }, [counter, decraseCounter, redirectUrl])\n\n  return (\n    <PageWrapper backgroundImage={backgroundImage}>\n      <Wrapper>\n        {logoImg && <StyledLogo src={logoImg} />}\n        <StyledHeader>{headerText}</StyledHeader>\n        <RedirectText>\n          Zostaniesz przekierowany za <CounterText>{counter}s</CounterText>\n        </RedirectText>\n        {mainImg && <StyledMainImg src={mainImg} />}\n      </Wrapper>\n    </PageWrapper>\n  )\n}\n\nexport default RedirectPage\n"],"file":"index.js"}