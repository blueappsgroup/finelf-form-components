{"version":3,"sources":["../../../../src/components/FormStatusText/index.tsx"],"names":["StyledText","styled","span","props","successStatusTextColor","successText","errorText","FormStatusText","errorFromApi","useContext","dirty","isError","status","formStatuses","showStatusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,QAAMA,UAAU,GAAGC,2BAAOC,IAA0C;AACpE,aAAcC,KAAD,IAAiCA,KAAK,CAALA,IAAAA,GAAAA,OAAAA,GAAuB,MAAQ;AAC7E,WAAYA,KAAD,IACPA,KAAK,CAALA,OAAAA,GACIA,KAAK,CAALA,KAAAA,CADJA,oBAAAA,GAEIA,KAAK,CAALA,KAAAA,CAAYC,sBAAuB;AAC3C;AACA;AACA;AACA;AACA;AAVA,CAAA;;AAiBA,QAAMG,cAA+B,GAAG,CAAC;AAAA,IAAA,WAAA;AAAeD,IAAAA;AAAf,GAAD,KAAgC;AACtE,UAAM;AAAEE,MAAAA;AAAF,QAAmBC,uBAAzB,kBAAyBA,CAAzB;AACA,UAAM;AAAA,MAAA,MAAA;AAAUC,MAAAA;AAAV,QAAN,+BAAA;AACA,UAAMC,OAAO,GAAGC,MAAM,KAAKC,mBAAXD,KAAAA,IAAiCJ,YAAY,KAA7D,IAAA;AACA,UAAMM,cAAc,GAAIF,MAAM,KAAKC,mBAAXD,QAAAA,IAAoC,CAArC,KAACA,IAAxB,OAAA;AACA,WAAA,aACE,gBAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,IAAI,EAAhB,cAAA;AAAkC,MAAA,OAAO,EAAED;AAA3C,KAAA,EACGA,OAAO,GAAA,SAAA,GAFZ,WACE,CADF;AALF,GAAA;;;AAJEN,IAAAA,W;AACAC,IAAAA,S;;oBAeF,c","sourcesContent":["import React, { useContext } from 'react'\nimport { useFormikContext } from 'formik'\nimport styled from 'styled-components'\nimport { formStatuses } from '../../consts/form'\nimport { FormContext } from '../../utils'\n\ntype StyledProps = {\n  theme: {\n    successTextColor: string\n    errorStatusTextColor: string\n    successStatusTextColor: string\n  }\n  show: boolean\n  isError: boolean\n}\n\nconst StyledText = styled.span<{ show: boolean; isError: boolean }>`\n  display: ${(props: StyledProps): string => (props.show ? 'block' : 'none')};\n  color: ${(props: StyledProps): string =>\n    props.isError\n      ? props.theme.errorStatusTextColor\n      : props.theme.successStatusTextColor};\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 18px;\n  margin: 10px 0px 20px 0px;\n`\ntype Props = {\n  successText: string\n  errorText: string\n}\n\nconst FormStatusText: React.FC<Props> = ({ successText, errorText }) => {\n  const { errorFromApi } = useContext(FormContext)\n  const { status, dirty } = useFormikContext()\n  const isError = status === formStatuses.error || errorFromApi === true\n  const showStatusText = (status === formStatuses.submited && !dirty) || isError\n  return (\n    <StyledText show={showStatusText} isError={isError}>\n      {isError ? errorText : successText}\n    </StyledText>\n  )\n}\n\nexport default FormStatusText\n"],"file":"index.js"}