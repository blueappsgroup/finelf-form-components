{"version":3,"sources":["../../../../src/components/OptionalGroup/index.tsx"],"names":["name","children","label","groupType","hideChecked","OptionalGroup","setValues","id","useContext","hasManyItems","Array","itemsNames","useMemo","item","itemsForResetValues","acc","groupVisible","values","useEffect","newValues","setFormValuesToCache"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,QAAMK,aAA8B,GAAG,CAAC;AAAA,IAAA,IAAA;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAItCD,IAAAA;AAJsC,GAAD,KAKjC;AACJ;AACA,UAAM;AAAA,MAAA,MAAA;AAAUE,MAAAA;AAAV,QAAN,+BAAA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAASC,uBAAf,kBAAeA,CAAf;AACA,UAAMC,YAAY,GAAGC,KAAK,CAALA,OAAAA,CAArB,QAAqBA,CAArB;AACA,UAAMC,UAAoB,GAAGC,oBAC3B,MACEH,YAAY,GACRR,QAAQ,IACRA,QAAQ,CAARA,GAAAA,CAAcY,IAAD,IAAuCA,IAAI,CAAJA,KAAAA,CAF5C,IAERZ,CAFQ,GAGR,CAACA,QAAQ,CAARA,KAAAA,CAL2B,IAK5B,CALqBW,EAM3B,CAAA,YAAA,EANF,QAME,CAN2BA,CAA7B;AASA,UAAME,mBAAmB,GAAGF,oBAC1B,MACE,UAAU,CAAV,MAAA,CAAkB,CAAA,GAAA,EAAA,IAAA,KAAe;AAC/BG,MAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAAA,SAAAA;AACA,aAF+B,GAE/B,CAF+B,CAG/B;AAHF,KAAA,EAF+B,EAE/B,CAFwBH,EAO1B,CAPF,UAOE,CAP0BA,CAA5B;AASA,UAAMI,YAAY,GACfZ,WAAW,IAAI,CAACa,MAAM,CAAvB,IAAuB,CAAtBb,IAAkC,CAAA,WAAA,IAAgBa,MAAM,CAD3D,IAC2D,CAD3D;AAGAC,0BAAU,MAAM;AACd,UAAI,CAAJ,YAAA,EAAmB;AACjB,cAAMC,SAAS,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,EAAf,mBAAe,CAAf;;AACAb,QAAAA,SAAS,CAAA,SAAA,EAATA,KAAS,CAATA;AACAc,yCAAoB,SAApBA,EAAAA,EAAAA;AAJY,OAAA,CAMd;;AANO,KAATF,EAOG,CAAA,YAAA,EAAA,mBAAA,EAAA,SAAA,EAA+CD,MAAM,CAPxDC,IAOwD,CAArD,CAPHA;AASA,WAAA,aACE,gBAAA,aAAA,CAAA,gBAAA,QAAA,EAAA,IAAA,EAAA,aACE,gBAAA,aAAA,CAAA,eAAA,EAAA;AAAe,MAAA,eAAe,EAA9B,IAAA;AAA+B,MAAA,EAAE,EAAjC,IAAA;AAAyC,MAAA,IAAI,EAA7C,IAAA;AAAqD,MAAA,KAAK,EAAEhB;AAA5D,KAAA,CADF,EAEGc,YAAY,IAAA,aAAI,gBAAA,aAAA,CAAA,gBAAA,QAAA,EAAA,IAAA,EAHrB,QAGqB,CAFnB,CADF;AAxCF,GAAA;;;AAREhB,IAAAA,I;AAEAC,IAAAA,Q;AACAC,IAAAA,K;AACAC,IAAAA,S;AACAC,IAAAA,W;;AAmDFC,EAAAA,aAAa,CAAbA,YAAAA,GAA6B;AAC3BF,IAAAA,SAAS,EAAE;AADgB,GAA7BE;oBAIA,a","sourcesContent":["import React, { useContext, useEffect, useMemo } from 'react'\nimport { useFormikContext } from 'formik'\nimport { CheckboxField } from '../'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype Props = {\n  name: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children: any\n  label: string\n  groupType?: string\n  hideChecked?: boolean\n}\n\nconst OptionalGroup: React.FC<Props> = ({\n  name,\n  label,\n  children,\n  hideChecked,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { values, setValues } = useFormikContext<any>()\n  const { id } = useContext(FormContext)\n  const hasManyItems = Array.isArray(children)\n  const itemsNames: string[] = useMemo(\n    () =>\n      hasManyItems\n        ? children &&\n          children.map((item: { props: { name: string } }) => item.props.name)\n        : [children.props.name],\n    [hasManyItems, children]\n  )\n\n  const itemsForResetValues = useMemo(\n    () =>\n      itemsNames.reduce((acc, item) => {\n        acc[item] = undefined\n        return acc\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, {} as { [key: string]: any }),\n    [itemsNames]\n  )\n  const groupVisible =\n    (hideChecked && !values[name]) || (!hideChecked && values[name])\n\n  useEffect(() => {\n    if (!groupVisible) {\n      const newValues = { ...values, ...itemsForResetValues }\n      setValues(newValues, false)\n      setFormValuesToCache(newValues, id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupVisible, itemsForResetValues, setValues, values[name]])\n\n  return (\n    <>\n      <CheckboxField skipFieldForApi id={name} name={name} label={label} />\n      {groupVisible && <>{children}</>}\n    </>\n  )\n}\n\nOptionalGroup.defaultProps = {\n  groupType: 'optionalGroup',\n}\n\nexport default OptionalGroup\n"],"file":"index.js"}