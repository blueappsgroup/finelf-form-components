{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["StyledForm","styled","props","formBgColor","device","tablet","FormWrapper","id","useState","getFormValuesFromCache","handleSubmit","onSubmit","handleReset","resetFormValueCache","setInitialValues"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,QAAMA,UAAU,GAAGC,gCAAM,YAANA,CAAa;;;;;;gBAMfC,KAAD,IAAmBA,KAAK,CAALA,KAAAA,CAAYC,WAAY;;;;;;;;WAQhDC,cAAOC,MAAO;;;;CAdzB;;AAoBA,QAAMC,WAA0B,GAAG,CAAC;AAAA,IAAA,QAAA;AAAA,IAAA,QAAA;AAAA,IAAA,WAAA;AAIlCC,IAAAA;AAJkC,GAAD,KAK7B;AACJ,UAAM,CAAA,aAAA,EAAA,gBAAA,IAAoCC,qBAASC,mCAAnD,EAAmDA,CAATD,CAA1C;;AACA,UAAME,YAAY,GAAG,CAAA,MAAA,EAAA,KAAA,KAMV;AACT,UAAA,QAAA,EAAc;AACZC,QAAAA,QAAQ,CAAA,MAAA,EAARA,KAAQ,CAARA;AACD;;AACDT,MAAAA,KAAK,CAALA,SAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,CAAAA,UAAAA;AAXF,KAAA;;AAaA,UAAMU,WAAW,GAAG,MAAY;AAC9BC,sCAAAA,EAAAA;AACAC,MAAAA,gBAAgB,CAAhBA,EAAgB,CAAhBA;AAFF,KAAA;;AAKA,WAAA,aACE,gBAAA,aAAA,CAAA,mBAAA,QAAA,EAAA;AAAsB,MAAA,KAAK,EAAE;AAAEP,QAAAA;AAAF;AAA7B,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,+BAAA,EAAA;AAAe,MAAA,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,YAAA,CAAA,EAAA,WAAA;AAApB,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,cAAA,EAAA;AACE,MAAA,kBAAkB,EADpB,IAAA;AAEE,MAAA,aAAa,EAFf,aAAA;AAGE,MAAA,QAAQ,EAHV,YAAA;AAIE,MAAA,OAAO,EAAEK;AAJX,KAAA,EAAA,aAME,gBAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,EAAE,EAAEL;AAAhB,KAAA,EATR,QASQ,CANF,CADF,CADF,CADF;AAzBF,GAAA;;oBAyCA,W","sourcesContent":["import React, { FC, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { device } from '../../consts/sizes'\nimport { theme } from '../../consts/theme'\nimport { FormProps, FormValuesType } from '../../types'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n} from '../../utils'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  padding: 20px 15px;\n  border-radius: 6px;\n  box-shadow: 0px 20px 60px rgba(0, 0, 0, 0.08);\n\n  @media ${device.tablet} {\n    padding: 20px 30px;\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n}) => {\n  const [initialValues, setInitialValues] = useState(getFormValuesFromCache(id))\n  const handleSubmit = (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n  ): void => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n    props.resetForm()\n    props.setStatus('submited')\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    setInitialValues({})\n  }\n\n  return (\n    <FormContext.Provider value={{ id }}>\n      <ThemeProvider theme={{ ...theme, ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          <StyledForm id={id}>{children}</StyledForm>\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}