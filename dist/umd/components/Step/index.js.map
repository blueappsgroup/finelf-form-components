{"version":3,"sources":["../../../../src/components/Step/index.tsx"],"names":["Wrapper","styled","div","props","ButtonsWrapper","device","mobileL","tablet","StepHeaderWrapper","stepIndex","children","onStepComplete","Step","wrapperRef","useRef","currentStep","stepsLength","formStatus","useContext","lastStepIndex","hideSubmitButton","formStatuses","handleStepSubmit","values","handleSubmit","setFormValuesToCache","nextStep","useEffect","window","isValid","stepsTitleList","prevStep"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Formik } from 'formik'\n\nimport Button from '../Button'\nimport StepHeader from './StepHeader'\nimport { FormContext, setFormValuesToCache } from '../../utils'\nimport { device } from '../../consts/sizes'\nimport { StyledForm } from '../Form'\nimport { FormValuesType } from '../../types'\nimport { formStatuses } from '../../consts/form'\n\nconst Wrapper = styled.div<{ visible: boolean }>`\n  display: ${(props): string => (props.visible ? 'block' : 'none')};\n`\n\ntype ButtonWrapperTypes = { isFirstStep: boolean }\n\n// prettier-ignore\nconst ButtonsWrapper = styled.div<ButtonWrapperTypes>`\n  display: flex;\n  flex-direction: column;\n  \n  & button {\n    flex-grow: 1;\n  }\n\n  @media ${device.mobileL} {\n    flex-direction: row;\n\n    & button {\n      &:first-of-type {\n        margin-right: ${(props: ButtonWrapperTypes): string => props.isFirstStep ? '0px' : '15px'};\n      }\n\n      &:last-child {\n        margin-left: ${(props: ButtonWrapperTypes): string => props.isFirstStep ? '0px' : '15px'};\n      }\n    }\n  }\n\n  @media ${device.tablet} {\n    & button {\n      &:first-of-type {\n        margin-right: ${(props: ButtonWrapperTypes): string => props.isFirstStep ? '0px' : '30px'};\n      }\n\n      &:last-child {\n        margin-left: ${(props: ButtonWrapperTypes): string => props.isFirstStep ? '0px' : '30px'};\n      }\n    }\n  }\n`\n\nconst StepHeaderWrapper = styled.div`\n  display: flex;\n`\n\ntype Props = {\n  stepIndex: number\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children: any\n  onStepComplete?: () => void\n}\n\nconst Step: FC<Props> = ({ children, stepIndex, onStepComplete }) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const wrapperRef = useRef<any>(null)\n  const {\n    id,\n    currentStep = 0,\n    stepsLength = 1,\n    stepsTitleList,\n    prevStep,\n    nextStep,\n    initialValues,\n    handleSubmit,\n    formStatus,\n  } = useContext(FormContext)\n\n  const lastStepIndex = stepsLength ? stepsLength - 1 : 0\n  const hideSubmitButton = formStatus === formStatuses.agrrementsError\n  const handleStepSubmit = ({ values }: FormValuesType): void => {\n    if (currentStep === lastStepIndex) {\n      return handleSubmit && handleSubmit()\n    }\n    setFormValuesToCache(values, id)\n    onStepComplete && onStepComplete()\n    nextStep && nextStep()\n  }\n\n  useEffect(() => {\n    if (stepIndex === currentStep) {\n      wrapperRef.current !== null &&\n        window.scrollTo(0, wrapperRef.current.offsetTop)\n    }\n  }, [currentStep, stepIndex, formStatus])\n\n  return (\n    (stepIndex === currentStep && (\n      <Formik\n        validateOnMount\n        enableReinitialize\n        initialValues={initialValues}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onSubmit={handleStepSubmit as any}\n        render={({ isValid }): React.ReactElement => {\n          return (\n            <StyledForm id={stepIndex.toString()}>\n              <Wrapper ref={wrapperRef} visible={stepIndex === currentStep}>\n                <StepHeaderWrapper>\n                  {currentStep !== 0 && (\n                    <StepHeader>\n                      {stepsTitleList && stepsTitleList[currentStep - 1]}\n                    </StepHeader>\n                  )}\n                  {stepIndex === currentStep && (\n                    <StepHeader activeStep>\n                      {stepsTitleList && stepsTitleList[currentStep]}\n                    </StepHeader>\n                  )}\n                  {currentStep === 0 && stepsLength > 1 && (\n                    <StepHeader>\n                      {stepsTitleList && stepsTitleList[currentStep + 1]}\n                    </StepHeader>\n                  )}\n                </StepHeaderWrapper>\n                {stepIndex === currentStep && children}\n                <ButtonsWrapper isFirstStep={currentStep === 0}>\n                  {currentStep !== 0 && (\n                    <Button\n                      type=\"button\"\n                      variant=\"secondary\"\n                      text=\"Cofnij\"\n                      onClick={prevStep}\n                    />\n                  )}\n                  {currentStep !== lastStepIndex && !hideSubmitButton && (\n                    <Button\n                      form={stepIndex.toString()}\n                      disabled={!isValid}\n                      type=\"submit\"\n                      text=\"Dalej\"\n                    />\n                  )}\n                  {currentStep === lastStepIndex && !hideSubmitButton && (\n                    <Button disabled={!isValid} type=\"submit\" text=\"WyÅ›lij\" />\n                  )}\n                </ButtonsWrapper>\n              </Wrapper>\n            </StyledForm>\n          )\n        }}\n      />\n    )) || <></>\n  )\n}\n\nexport default Step\n"],"file":"index.js"}