{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["linksForReplace","name","Agreemnets","apiUrl","useContext","useState","replaceLinkInAgreements","useCallback","agreements","replacedAgreements","item","newContent","Object","key","content","fetchAgreements","response","fetch","id","data","setAgreements","useLayoutEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,QAAME,UAAyC,GAAG,CAAC;AAAA,IAAA,eAAA;AAEjDD,IAAAA,IAAI,GAAG;AAF0C,GAAD,KAG5C;AACJ,UAAM;AAAA,MAAA,EAAA;AAAME,MAAAA;AAAN,QAAiBC,uBAAvB,kBAAuBA,CAAvB;AACA,UAAM,CAAA,UAAA,EAAA,aAAA,IAA8BC,qBAApC,EAAoCA,CAApC;AACA,UAAMC,uBAAuB,GAAGC,wBAC7BC,UAAD,IAAkD;AAChD,YAAMC,kBAAkB,GAAG,UAAU,CAAV,GAAA,CAAgBC,IAAD,IAAU;AAClD,YAAIC,UAAU,GAAGD,IAAI,CAArB,OAAA;;AACA,YAAA,eAAA,EAAqB;AACnBE,UAAAA,MAAM,CAANA,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,CACGC,GAAD,IACGF,UAAU,GAAGA,UAAU,CAAVA,OAAAA,CACX,GAAEE,GADSF,EAAAA,EAEX,GAAEX,eAAe,CAAA,GAAA,CAJxBY,EAEkBD,CAFlBC;AAOD;;AAED,eAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AAAkBE,UAAAA,OAAO,EAAEH;AAA3B,SAAA,CAAA;AAZF,OAA2B,CAA3B;AAeA,aAAA,kBAAA;AAjBuC,KAAXJ,EAmB9B,CAtBE,eAsBF,CAnB8BA,CAAhC,CAHI,CAwBJ;;AACA,UAAMQ,eAAe,GAAGR,wBAAY,YAA0B;AAC5D,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,MAAO,UAASe,EAAhD,aAA4B,CAA5B;AAEA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAA3B,IAAmBA,EAAnB;AAEAI,MAAAA,aAAa,CAAEpB,eAAe,IAAIM,uBAAuB,CAA3C,IAA2C,CAA1CN,IAAfoB,IAAa,CAAbA;AALiC,KAAXb,EAMrB,CAAA,eAAA,EAAA,MAAA,EAAA,uBAAA,EANH,EAMG,CANqBA,CAAxB;AAQAc,gCAAgB,MAAM;AACpB,UAAIb,UAAU,CAAVA,MAAAA,KAAJ,CAAA,EAA6B;AAC3BO,QAAAA,eAAe;AAChB;AAHY,KAAfM,EAIG,CAAA,UAAA,EAJHA,eAIG,CAJHA;AAMA,WAAA,aACE,gBAAA,aAAA,CAAA,yBAAA,EAAA;AAAiB,MAAA,IAAI,EAAEpB;AAAvB,KAAA,EACG,UAAU,CAAV,GAAA,CAAgBS,IAAD,IAAA,aACd,gBAAA,aAAA,CAAA,eAAA,EAAA;AACE,MAAA,GAAG,EAAEA,IAAI,CADX,EAAA;AAEE,MAAA,IAAI,EAAG,GAAEA,IAAI,CAACQ,EAFhB,EAAA;AAGE,MAAA,WAAW,EAAER,IAAI,CAHnB,OAAA;AAIE,MAAA,QAAQ,EAAA;AAJV,KAAA,CADD,CADH,CADF;AA1CF,GAAA;;;AAJEV,IAAAA,e;AACAC,IAAAA,I;;AA2DFC,EAAAA,UAAU,CAAVA,YAAAA,GAA0B;AACxBD,IAAAA,IAAI,EAAE;AADkB,GAA1BC;oBAIA,U","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\n\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\n\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n}\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n}) => {\n  const { id, apiUrl } = useContext(FormContext)\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach(\n            (key) =>\n              (newContent = newContent.replace(\n                `${key}`,\n                `${linksForReplace[key]}`\n              ))\n          )\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n\n    const data = await response.json()\n\n    setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n  }, [linksForReplace, apiUrl, replaceLinkInAgreements, id])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n  }, [agreements, fetchAgreements])\n\n  return (\n    <CheckboxesGroup name={name}>\n      {agreements.map((item) => (\n        <CheckboxField\n          key={item.id}\n          name={`${item.id}`}\n          HTMLcontent={item.content}\n          required\n        />\n      ))}\n    </CheckboxesGroup>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}