{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["linksForReplace","name","groupType","requiredErorText","StyledErrorText","styled","Agreemnets","apiUrl","useContext","useState","replaceLinkInAgreements","useCallback","agreements","replacedAgreements","item","newContent","Object","key","content","fetchAgreements","response","fetch","id","data","setAgreements","console","useLayoutEffect","hasRequired","agreement","setError","Array","required","error"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\nimport { StyledError } from '../FormInput/base'\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n  groupType?: string\n  requiredErorText?: string\n}\n\nconst StyledErrorText = styled(StyledError)`\n  position: static;\n`\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n  requiredErorText = '* Zapoznanie się z treścią regulaminu serwisu oraz polityką prywatności jest wymagane.',\n}) => {\n  const { id, apiUrl } = useContext(FormContext)\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const [error, setError] = useState<boolean>(false)\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach(\n            (key) =>\n              (newContent = newContent.replace(\n                `${key}`,\n                `${linksForReplace[key]}`\n              ))\n          )\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    try {\n      const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n      const data = await response.json()\n      setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n    } catch (e) {\n      console.log(e)\n    }\n  }, [linksForReplace, apiUrl, replaceLinkInAgreements, id])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n\n    if (agreements.length > 0 && !error) {\n      let hasRequired = false\n      agreements.some((agreement) => {\n        if (agreement.required) {\n          hasRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (hasRequired !== error) {\n        setError(hasRequired)\n      }\n    }\n  }, [agreements, error, fetchAgreements])\n\n  return (\n    <>\n      {Array.isArray(agreements) && agreements.length > 0 && (\n        <>\n          <CheckboxesGroup name={name}>\n            {agreements.map((item) => (\n              <CheckboxField\n                key={item.id}\n                name={`${item.id}`}\n                HTMLcontent={item.content}\n                required={item.required}\n              />\n            ))}\n          </CheckboxesGroup>\n          {error && <StyledErrorText>{requiredErorText}</StyledErrorText>}\n        </>\n      )}\n    </>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n  groupType: 'checkboxGroup',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}