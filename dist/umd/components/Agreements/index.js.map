{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["linksForReplace","name","groupType","requiredErorText","hasReadMore","StyledErrorText","styled","Agreemnets","setFormStatus","useContext","setErrors","useState","replaceLinkInAgreements","useCallback","agreements","replacedAgreements","item","newContent","Object","key","regxp","content","fetchAgreements","response","fetch","apiUrl","id","data","hasError","dataForInitialize","acc","initialValues","values","required","setAgreements","setInitialValues","formStatuses","console","useLayoutEffect","hasRequired","agreement","setError","Array","error"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { useFormikContext } from 'formik'\n\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\nimport { StyledError } from '../FormInput/base'\nimport { formStatuses } from '../../consts/form'\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n  groupType?: string\n  requiredErorText?: string\n  hasReadMore?: boolean\n}\n\nconst StyledErrorText = styled(StyledError)`\n  position: static;\n`\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n  requiredErorText = '* Zapoznanie się z treścią regulaminu serwisu oraz polityką prywatności jest wymagane.',\n  hasReadMore,\n}) => {\n  const {\n    id,\n    apiUrl,\n    setInitialValues,\n    initialValues,\n    setFormStatus,\n  } = useContext(FormContext)\n  const { errors, setErrors } = useFormikContext()\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const [error, setError] = useState<boolean>(false)\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach((key) => {\n            const regxp = new RegExp(key, 'g')\n            newContent = newContent.replace(regxp, linksForReplace[key])\n\n            return newContent\n          })\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    try {\n      const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n      const data = await response.json()\n\n      let hasError = false\n      const dataForInitialize = data.reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (acc: any, item: AgreementType) => {\n          acc.values[item.id] = false\n          if (item.required) {\n            acc.required.push('required')\n            if (\n              !hasError &&\n              (!initialValues ||\n                !initialValues[name] ||\n                !initialValues[name][item.id])\n            ) {\n              hasError = true\n            }\n          } else {\n            acc.required.push(null)\n          }\n          return acc\n        },\n        { values: {}, required: [] }\n      )\n      setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n      setInitialValues &&\n        setInitialValues({ [name]: dataForInitialize.values, ...initialValues })\n      if (hasError) {\n        setErrors({ [name]: dataForInitialize.required, ...errors })\n      }\n    } catch (e) {\n      setFormStatus && setFormStatus(formStatuses.agrrementsError)\n      console.log(e)\n    }\n  }, [\n    apiUrl,\n    errors,\n    id,\n    initialValues,\n    linksForReplace,\n    name,\n    replaceLinkInAgreements,\n    setErrors,\n    setFormStatus,\n    setInitialValues,\n  ])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n\n    if (agreements.length > 0 && !error) {\n      let hasRequired = false\n      agreements.some((agreement) => {\n        if (agreement.required) {\n          hasRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (hasRequired !== error) {\n        setError(hasRequired)\n      }\n    }\n  }, [agreements, error, fetchAgreements])\n\n  return (\n    <>\n      {Array.isArray(agreements) && agreements.length > 0 && (\n        <>\n          <CheckboxesGroup name={name}>\n            {agreements.map((item) => (\n              <CheckboxField\n                key={item.id}\n                name={`${item.id}`}\n                HTMLcontent={item.content}\n                required={item.required}\n                hasReadMore={hasReadMore}\n              />\n            ))}\n          </CheckboxesGroup>\n          {error && <StyledErrorText>{requiredErorText}</StyledErrorText>}\n        </>\n      )}\n    </>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n  groupType: 'checkboxGroup',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}