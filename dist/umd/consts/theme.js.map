{"version":3,"sources":["../../../src/consts/theme.tsx"],"names":["colors","mainGrey","ligthGrey","grey","mediumGrey","darkGrey","errorRed","lightRed","mediumRed","white","black","theme","formBgColor","inputHeight","inputTextColor","inputPlaceHolderColor","inputErrorColor","inputErrorTextAlign","inputErrorFontSize","inputErrorBottom","inputBorderColor","inputBorderWidth","inputBorderStyle","inputBorderRadius","inputBgColor","inputBoxShadow","inputFontSize","inputFontWeight","inputFontStyle","inputLineHeight","inputPadding","styledRowFlexWrap","styledRowLabelPadding","styledSelectHeight","styledSelectTextColor","styledSelectPlaceHolderColor","styledSelectErrorColor","styledSelectErrorTextAlign","styledSelectBorderColor","styledSelectBorderWidth","styledSelectBorderStyle","styledSelectBorderRadius","styledSelectBgColor","styledSelectBoxShadow","styledSelectFontSize","styledSelectFontWeight","styledSelectFontStyle","styledSelectLineHeight","styledSelectVerticalPadding","styledSelectHorizontalPadding","styledSpanFontSize","styledSpanFontWeight","styledRowMarginBottom","checkboxLabelArrowColor","checkboxBgColor","checkboxBorderColor","checkboxBorderErrorColor","checkboxLabelTextColor","checkboxMarkColor","headerTextColor","headerBorderColor","subheaderBorderColor","buttonTextColor","buttonBgColor","buttonBorderColor","successTextColor","stepHeaderActiveColor","stepHeaderInActiveColor","stepHeaderActiveBorderColor","stepHeaderInActiveBorderColor","buttonSecondaryTextColor","buttonSecondaryBgColor","buttonSecondaryBorderColor","redirectPageHeaderTextColor","redirectPageRedirectTextColor","redirectPageCounterTextColor","successStatusTextColor","errorStatusTextColor","sliderHeight","sliderBorderRadius","sliderBgColor","sliderFillBgColor","sliderHandleBgColor","sliderHandleBorderColor","sliderHandleBoxShadow","sliderHandleBorderWidth","sliderHandleBorderStyle","sliderHandleBorderRadius","sliderHandleWidth","sliderHandleHeight","sliderHandleAfterWidth","sliderHandleAfterHeight","sliderHandleAfterBorderRadius","styledInputSuffixBgColor","styledInputSuffixTextColor","styledInputSuffixFontSize","styledInputSuffixFontWeight","styledInputSuffixBorderRadius","styledInputSuffixVerticalPadding","styledInputSuffixHorizontalPadding","styledInputPrefixPadding","children","ThemeProvider","customTheme"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport { ThemeProvider as MainThemeProvider } from 'styled-components'\nimport { CustomThemeType } from '../types'\n\nexport const colors = {\n  mainGrey: 'rgba(0, 0, 0, 0.7)',\n  ligthGrey: '#ecebed',\n  grey: '#B9BABD',\n  mediumGrey: '#7C7878',\n  darkGrey: '#0f0f0f',\n  errorRed: '#FF0000',\n  lightRed: '#e2070e',\n  mediumRed: '#f20f0f',\n  white: '#FFF',\n  black: '#000',\n}\n\nexport const theme = {\n  formBgColor: colors.white,\n  inputHeight: '63px',\n  inputTextColor: colors.mainGrey,\n  inputPlaceHolderColor: colors.mainGrey,\n  inputErrorColor: colors.errorRed,\n  inputErrorTextAlign: 'left',\n  inputErrorFontSize: '10px',\n  inputErrorBottom: '-12px',\n  inputBorderColor: colors.ligthGrey,\n  inputBorderWidth: '1px',\n  inputBorderStyle: 'solid',\n  inputBorderRadius: '6px',\n  inputBgColor: colors.white,\n  inputBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  inputFontSize: '14px',\n  inputFontWeight: '500',\n  inputFontStyle: 'normal',\n  inputLineHeight: '24px',\n  inputPadding: '0 20px',\n  styledRowFlexWrap: 'no-wrap',\n  styledRowLabelPadding: '10px',\n  styledSelectHeight: '63px',\n  styledSelectTextColor: colors.mainGrey,\n  styledSelectPlaceHolderColor: colors.mainGrey,\n  styledSelectErrorColor: colors.errorRed,\n  styledSelectErrorTextAlign: 'left',\n  styledSelectBorderColor: colors.ligthGrey,\n  styledSelectBorderWidth: '1px',\n  styledSelectBorderStyle: 'solid',\n  styledSelectBorderRadius: '6px',\n  styledSelectBgColor: colors.white,\n  styledSelectBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  styledSelectFontSize: '14px',\n  styledSelectFontWeight: '500',\n  styledSelectFontStyle: 'normal',\n  styledSelectLineHeight: '24px',\n  styledSelectVerticalPadding: '0px',\n  styledSelectHorizontalPadding: '20px',\n  styledSpanFontSize: '16px',\n  styledSpanFontWeight: 'bold',\n  styledRowMarginBottom: '12px',\n  checkboxLabelArrowColor: colors.mediumGrey,\n  checkboxBgColor: colors.white,\n  checkboxBorderColor: colors.black,\n  checkboxBorderErrorColor: colors.errorRed,\n  checkboxLabelTextColor: colors.darkGrey,\n  checkboxMarkColor: colors.lightRed,\n  headerTextColor: colors.black,\n  headerBorderColor: colors.errorRed,\n  subheaderBorderColor: colors.black,\n  buttonTextColor: colors.white,\n  buttonBgColor: colors.mediumRed,\n  buttonBorderColor: colors.mediumRed,\n  successTextColor: colors.black,\n  stepHeaderActiveColor: colors.mediumRed,\n  stepHeaderInActiveColor: colors.grey,\n  stepHeaderActiveBorderColor: colors.mediumRed,\n  stepHeaderInActiveBorderColor: colors.grey,\n  buttonSecondaryTextColor: colors.mediumRed,\n  buttonSecondaryBgColor: colors.white,\n  buttonSecondaryBorderColor: colors.mediumRed,\n  redirectPageHeaderTextColor: colors.black,\n  redirectPageRedirectTextColor: colors.black,\n  redirectPageCounterTextColor: colors.mediumRed,\n  successStatusTextColor: colors.black,\n  errorStatusTextColor: colors.errorRed,\n  sliderHeight: '12px',\n  sliderBorderRadius: '10px',\n  sliderBgColor: colors.mainGrey,\n  sliderFillBgColor: colors.mediumRed,\n  sliderHandleBgColor: colors.white,\n  sliderHandleBorderColor: colors.mainGrey,\n  sliderHandleBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  sliderHandleBorderWidth: '1px',\n  sliderHandleBorderStyle: 'solid',\n  sliderHandleBorderRadius: '50%',\n  sliderHandleWidth: '24px',\n  sliderHandleHeight: '24px',\n  sliderHandleAfterWidth: '7px',\n  sliderHandleAfterHeight: '7px',\n  sliderHandleAfterBorderRadius: '50%',\n  styledInputSuffixBgColor: colors.mediumRed,\n  styledInputSuffixTextColor: colors.white,\n  styledInputSuffixFontSize: '14px',\n  styledInputSuffixFontWeight: 'bold',\n  styledInputSuffixBorderRadius: '0 5px 5px 0',\n  styledInputSuffixVerticalPadding: '0px',\n  styledInputSuffixHorizontalPadding: '15px',\n  styledInputPrefixPadding: '0 15px',\n}\n\ntype ThemeProviderPops = {\n  children: ReactElement | ReactElement[]\n  customTheme?: CustomThemeType\n}\n\nexport const ThemeProvider: FC<ThemeProviderPops> = ({\n  children,\n  customTheme,\n}) => (\n  <MainThemeProvider theme={{ ...theme, ...customTheme }}>\n    {children}\n  </MainThemeProvider>\n)\n"],"file":"theme.js"}