{"version":3,"sources":["../../../src/consts/theme.tsx"],"names":["colors","mainGrey","ligthGrey","grey","mediumGrey","darkGrey","errorRed","lightRed","mediumRed","white","black","theme","formBgColor","inputTextColor","inputPlaceHolderColor","inputErrorColor","inputBorderColor","inputBgColor","checkboxLabelArrowColor","checkboxBgColor","checkboxBorderColor","checkboxBorderErrorColor","checkboxLabelTextColor","checkboxMarkColor","headerTextColor","headerBorderColor","subheaderBorderColor","buttonTextColor","buttonBgColor","buttonBorderColor","successTextColor","stepHeaderActiveColor","stepHeaderInActiveColor","stepHeaderActiveBorderColor","stepHeaderInActiveBorderColor","buttonSecondaryTextColor","buttonSecondaryBgColor","buttonSecondaryBorderColor","redirectPageHeaderTextColor","redirectPageRedirectTextColor","redirectPageCounterTextColor","rangeFillBgColor","successStatusTextColor","errorStatusTextColor","children","ThemeProvider","customTheme"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport { ThemeProvider as MainThemeProvider } from 'styled-components'\nimport { CustomThemeType } from '../types'\n\nexport const colors = {\n  mainGrey: 'rgba(0, 0, 0, 0.7)',\n  ligthGrey: '#ecebed',\n  grey: '#B9BABD',\n  mediumGrey: '#7C7878',\n  darkGrey: '#0f0f0f',\n  errorRed: '#FF0000',\n  lightRed: '#e2070e',\n  mediumRed: '#f20f0f',\n  white: '#FFF',\n  black: '#000',\n}\n\nexport const theme = {\n  formBgColor: colors.white,\n  inputTextColor: colors.mainGrey,\n  inputPlaceHolderColor: colors.mainGrey,\n  inputErrorColor: colors.errorRed,\n  inputBorderColor: colors.ligthGrey,\n  inputBgColor: colors.white,\n  checkboxLabelArrowColor: colors.mediumGrey,\n  checkboxBgColor: colors.white,\n  checkboxBorderColor: colors.black,\n  checkboxBorderErrorColor: colors.errorRed,\n  checkboxLabelTextColor: colors.darkGrey,\n  checkboxMarkColor: colors.lightRed,\n  headerTextColor: colors.black,\n  headerBorderColor: colors.errorRed,\n  subheaderBorderColor: colors.black,\n  buttonTextColor: colors.white,\n  buttonBgColor: colors.mediumRed,\n  buttonBorderColor: colors.mediumRed,\n  successTextColor: colors.black,\n  stepHeaderActiveColor: colors.mediumRed,\n  stepHeaderInActiveColor: colors.grey,\n  stepHeaderActiveBorderColor: colors.mediumRed,\n  stepHeaderInActiveBorderColor: colors.grey,\n  buttonSecondaryTextColor: colors.mediumRed,\n  buttonSecondaryBgColor: colors.white,\n  buttonSecondaryBorderColor: colors.mediumRed,\n  redirectPageHeaderTextColor: colors.black,\n  redirectPageRedirectTextColor: colors.black,\n  redirectPageCounterTextColor: colors.mediumRed,\n  rangeFillBgColor: colors.mediumRed,\n  successStatusTextColor: colors.black,\n  errorStatusTextColor: colors.errorRed,\n}\n\ntype ThemeProviderPops = {\n  children: ReactElement | ReactElement[]\n  customTheme?: CustomThemeType\n}\n\nexport const ThemeProvider: FC<ThemeProviderPops> = ({\n  children,\n  customTheme,\n}) => (\n  <MainThemeProvider theme={{ ...theme, ...customTheme }}>\n    {children}\n  </MainThemeProvider>\n)\n"],"file":"theme.js"}