{"version":3,"sources":["../../../src/consts/theme.tsx"],"names":["React","ThemeProvider","MainThemeProvider","colors","mainGrey","ligthGrey","grey","mediumGrey","darkGrey","errorRed","lightRed","mediumRed","white","black","theme","formBgColor","inputTextColor","inputPlaceHolderColor","inputErrorColor","inputBorderColor","inputBgColor","checkboxLabelArrowColor","checkboxBgColor","checkboxBorderColor","checkboxBorderErrorColor","checkboxLabelTextColor","checkboxMarkColor","headerTextColor","headerBorderColor","subheaderBorderColor","buttonTextColor","buttonBgColor","buttonBorderColor","successTextColor","stepHeaderActiveColor","stepHeaderInActiveColor","stepHeaderActiveBorderColor","stepHeaderInActiveBorderColor","buttonSecondaryTextColor","buttonSecondaryBgColor","buttonSecondaryBorderColor","redirectPageHeaderTextColor","redirectPageRedirectTextColor","redirectPageCounterTextColor","rangeFillBgColor","successStatusTextColor","errorStatusTextColor","children","customTheme"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport { ThemeProvider as MainThemeProvider } from 'styled-components'\nimport { CustomThemeType } from '../types'\n\nexport const colors = {\n  mainGrey: 'rgba(0, 0, 0, 0.7)',\n  ligthGrey: '#ecebed',\n  grey: '#B9BABD',\n  mediumGrey: '#7C7878',\n  darkGrey: '#0f0f0f',\n  errorRed: '#FF0000',\n  lightRed: '#e2070e',\n  mediumRed: '#f20f0f',\n  white: '#FFF',\n  black: '#000',\n}\n\nexport const theme = {\n  formBgColor: colors.white,\n  inputTextColor: colors.mainGrey,\n  inputPlaceHolderColor: colors.mainGrey,\n  inputErrorColor: colors.errorRed,\n  inputBorderColor: colors.ligthGrey,\n  inputBgColor: colors.white,\n  checkboxLabelArrowColor: colors.mediumGrey,\n  checkboxBgColor: colors.white,\n  checkboxBorderColor: colors.black,\n  checkboxBorderErrorColor: colors.errorRed,\n  checkboxLabelTextColor: colors.darkGrey,\n  checkboxMarkColor: colors.lightRed,\n  headerTextColor: colors.black,\n  headerBorderColor: colors.errorRed,\n  subheaderBorderColor: colors.black,\n  buttonTextColor: colors.white,\n  buttonBgColor: colors.mediumRed,\n  buttonBorderColor: colors.mediumRed,\n  successTextColor: colors.black,\n  stepHeaderActiveColor: colors.mediumRed,\n  stepHeaderInActiveColor: colors.grey,\n  stepHeaderActiveBorderColor: colors.mediumRed,\n  stepHeaderInActiveBorderColor: colors.grey,\n  buttonSecondaryTextColor: colors.mediumRed,\n  buttonSecondaryBgColor: colors.white,\n  buttonSecondaryBorderColor: colors.mediumRed,\n  redirectPageHeaderTextColor: colors.black,\n  redirectPageRedirectTextColor: colors.black,\n  redirectPageCounterTextColor: colors.mediumRed,\n  rangeFillBgColor: colors.mediumRed,\n  successStatusTextColor: colors.black,\n  errorStatusTextColor: colors.errorRed,\n}\n\ntype ThemeProviderPops = {\n  children: ReactElement | ReactElement[]\n  customTheme?: CustomThemeType\n}\n\nexport const ThemeProvider: FC<ThemeProviderPops> = ({\n  children,\n  customTheme,\n}) => (\n  <MainThemeProvider theme={{ ...theme, ...customTheme }}>\n    {children}\n  </MainThemeProvider>\n)\n"],"file":"theme.js"}