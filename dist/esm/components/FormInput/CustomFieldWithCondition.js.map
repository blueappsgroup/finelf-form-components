{"version":3,"sources":["../../../../src/components/FormInput/CustomFieldWithCondition.tsx"],"names":["React","useContext","useEffect","useState","Field","useFormikContext","FormContext","setFormValuesToCache","CustomFieldWithCondition","props","values","errors","setErrors","setValues","setFieldTouched","id","required","setRequired","visible","setVisible","visibleCondition","requiredCondition","isRequired","Object","keys","some","key","includes","name","isVisible","undefined","validate"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useEffect, useState } from 'react'\nimport { Field, useFormikContext } from 'formik'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype Props = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  requiredCondition?: { [key: string]: any }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  visibleCondition?: { [key: string]: any }\n}\nconst CustomFieldWithCondition: FC<Props> = (props) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const {\n    values,\n    errors,\n    setErrors,\n    setValues,\n    setFieldTouched,\n  } = useFormikContext<any>()\n  const { id } = useContext(FormContext)\n  const [required, setRequired] = useState(props.required || false)\n  const [visible, setVisible] = useState<boolean>(\n    (props.visibleCondition && false) || true\n  )\n\n  useEffect(() => {\n    if (!props.required && props.requiredCondition) {\n      let isRequired = false\n\n      Object.keys(props.requiredCondition).some((key) => {\n        if (\n          props.requiredCondition &&\n          props.requiredCondition[key].includes(values[key])\n        ) {\n          isRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (required !== isRequired) {\n        setRequired(isRequired)\n      }\n    }\n  }, [values, props.required, props.requiredCondition, required, props.name])\n\n  useEffect(() => {\n    if (props.visibleCondition) {\n      let isVisible = false\n\n      Object.keys(props.visibleCondition).some((key) => {\n        if (\n          props.visibleCondition &&\n          props.visibleCondition[key].includes(values[key])\n        ) {\n          isVisible = true\n\n          return true\n        }\n\n        return false\n      })\n\n      if (!isVisible && isVisible !== visible) {\n        setValues({ ...values, [props.name]: undefined }, false)\n        setErrors({ ...errors, [props.name]: undefined })\n        setFormValuesToCache({ ...values, [props.name]: undefined }, id)\n        setVisible(isVisible)\n      }\n\n      if (isVisible && isVisible !== visible) {\n        setVisible(isVisible)\n      }\n    }\n  }, [\n    values,\n    setValues,\n    props.visibleCondition,\n    props.name,\n    visible,\n    errors,\n    setErrors,\n    id,\n    required,\n    setFieldTouched,\n  ])\n\n  return (\n    <Field\n      {...props}\n      required={required && visible}\n      validate={props.validate(required && visible)}\n      visible={visible}\n    />\n  )\n}\n\nexport default CustomFieldWithCondition\n"],"file":"CustomFieldWithCondition.js"}