{"version":3,"sources":["../../../../src/components/FormInput/CheckBox.tsx"],"names":["React","useState","useLayoutEffect","useRef","useContext","useEffect","styled","FormContext","setFormValuesToCache","StyledRow","div","props","collapsed","theme","checkboxBorderWidth","checkboxLinkColor","StyledArrow","span","hasCollapse","checkboxLabelArrowColor","CheckboxContainer","Icon","svg","checkboxMarkColor","HiddenCheckbox","input","attrs","type","StyledCheckbox","checked","checkboxCheckedBgColor","checkboxBgColor","error","checkboxBorderErrorColor","checkboxBorderColor","required","StyledText","checkboxLabelFontSize","checkboxLabelTextColor","Checkbox","Wrapper","label","CheckboxBase","field","form","touched","errors","values","targetRef","setCollapsed","setHasCollapse","id","addFieldForSkip","handleOnMouseOut","handleOnChange","e","onChange","onCollapseClick","current","offsetHeight","skipFieldForApi","name","value","HTMLcontent","__html","childrenBody"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\nimport React, {\n  ReactElement,\n  useState,\n  useLayoutEffect,\n  useRef,\n  useContext,\n  ChangeEvent,\n  useEffect,\n} from 'react'\nimport { FormikErrors } from 'formik'\nimport styled from 'styled-components'\n\nimport { FieldWrapProps } from '../../types'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype StyledProps = {\n  collapsed?: boolean\n  hasCollapse?: boolean\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error?: FormikErrors<any>\n  checked?: boolean\n  theme: { [k: string]: string }\n  required?: boolean\n}\n\nconst StyledRow = styled.div<StyledProps>`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 12px;\n  position: relative;\n  height: ${(props: StyledProps): string =>\n    props.collapsed\n      ? 'auto'\n      : 'calc(18px + 2*' + props.theme.checkboxBorderWidth + ')'};\n  overflow: ${(props: StyledProps): string =>\n    props.collapsed ? 'none' : 'hidden'};\n\n  a {\n    color: ${(props: StyledProps): string => props.theme.checkboxLinkColor};\n  }\n`\n\nconst StyledArrow = styled.span<StyledProps>`\n  display: ${(props: StyledProps): string =>\n    props.hasCollapse ? 'flex' : 'none'};\n  position: absolute;\n  right: 5px;\n  top: calc(\n    5px + 2 * ${(props: StyledProps): string => props.theme.checkboxBorderWidth}\n  );\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: ${(props: StyledProps): string =>\n    props.collapsed ? '0px 6px 9px 6px' : '9px 6px 0 6px'};\n  border-color: ${(props: StyledProps): string =>\n    props.collapsed\n      ? `transparent transparent ${props.theme.checkboxLabelArrowColor} transparent`\n      : `${props.theme.checkboxLabelArrowColor} transparent transparent transparent`};\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${(props: StyledProps): string => props.theme.checkboxMarkColor};\n  stroke-width: 2px;\n`\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div<StyledProps>`\n  display: inline-block;\n  position: relative;\n  width: 18px;\n  height: 18px;\n  background: ${(props): string =>\n    props.checked\n      ? props.theme.checkboxCheckedBgColor\n      : props.theme.checkboxBgColor};\n  border-radius: 3px;\n  border: ${(props): string => props.theme.checkboxBorderWidth} solid;\n  border-color: ${(props: StyledProps): string =>\n    props.error\n      ? props.theme.checkboxBorderErrorColor\n      : props.theme.checkboxBorderColor};\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${(props: StyledProps): string =>\n      props.checked ? 'visible' : 'hidden'};\n  }\n\n  &::after {\n    display: ${(props: StyledProps): string =>\n      props.required ? 'block' : 'none'};\n    position: absolute;\n    content: '*';\n    top: 0px;\n    right: -13px;\n    font-size: 15px;\n    color: ${(props: StyledProps): string =>\n      props.theme.checkboxBorderErrorColor};\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst StyledText = styled.span<any>`\n  display: inline;\n  font-style: normal;\n  font-weight: 500;\n  font-size: ${(props: StyledProps): string =>\n    props.theme.checkboxLabelFontSize};\n  line-height: calc(\n    16px + 2 *\n      ${(props: StyledProps): string => props.theme.checkboxBorderWidth}\n  );\n  color: ${(props: StyledProps): string => props.theme.checkboxLabelTextColor};\n  padding-left: 15px;\n  padding-right: 25px;\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Checkbox = ({ checked, error, ...props }: any): ReactElement => (\n  <CheckboxContainer>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked} error={error} required={props.required}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Wrapper = styled.label<any>`\n  display: flex;\n  line-height: 18px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nexport const CheckboxBase: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const targetRef = useRef<HTMLDivElement>(null)\n  const [collapsed, setCollapsed] = useState(false)\n  const [hasCollapse, setHasCollapse] = useState(false)\n  const { id, addFieldForSkip } = useContext(FormContext)\n  const handleOnMouseOut = (): void => {\n    setFormValuesToCache(values, id)\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    props.onChange && props.onChange(e)\n    field.onChange && field.onChange(e)\n    setFormValuesToCache(values, id)\n  }\n\n  const onCollapseClick = (): void => setCollapsed(!collapsed)\n\n  useLayoutEffect(() => {\n    if (targetRef.current && targetRef.current.offsetHeight > 22) {\n      setHasCollapse(true)\n    }\n  }, [targetRef])\n\n  useEffect(() => {\n    props.skipFieldForApi && addFieldForSkip && addFieldForSkip(field.name)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledRow hasCollapse={hasCollapse} collapsed={collapsed}>\n      <Wrapper ref={targetRef} onMouseOut={handleOnMouseOut}>\n        <Checkbox\n          {...field}\n          {...props}\n          onChange={handleOnChange}\n          checked={field.value}\n          value={field.value || false}\n          error={\n            (touched[field.name] && errors[field.name]) as  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              | FormikErrors<any>\n              | undefined\n          }\n        />\n        {props.label && <StyledText>{props.label}</StyledText>}\n        {props.HTMLcontent && (\n          <StyledText dangerouslySetInnerHTML={{ __html: props.HTMLcontent }} />\n        )}\n        {props.childrenBody && <StyledText>{props.childrenBody}</StyledText>}\n      </Wrapper>\n      <StyledArrow\n        hasCollapse={hasCollapse}\n        collapsed={collapsed}\n        onClick={onCollapseClick}\n      />\n    </StyledRow>\n  )\n}\n\nexport default CheckboxBase\n"],"file":"CheckBox.js"}