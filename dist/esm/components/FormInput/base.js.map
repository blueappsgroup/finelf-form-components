{"version":3,"sources":["../../../../src/components/FormInput/base.tsx"],"names":["React","styled","device","StyledRow","div","Row","tablet","StyledError","span","props","theme","inputErrorColor","StyledInput","input","inputBgColor","inputBorderColor","error","inputTextColor","inputPlaceHolderColor","BaseField","field","form","touched","errors","label","name","value","placeholder","required","showError"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;CAA7B;AAOA,OAAO,MAAMC,GAAG,GAAGJ,MAAM,CAACG,GAAI;;;;WAInBF,MAAM,CAACI,MAAO;;QAEjBH,SAAU;;;;;QAKVA,SAAU;;;;;CAXX;AAkBP,MAAMI,WAAW,GAAGN,MAAM,CAACO,IAAK;WACpBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,eAAgB;;;;CADlD;AAOA,MAAMC,WAAW,GAAGX,MAAM,CAACY,KAAW;gBACrBJ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,YAAa;sBAC7BL,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYK,gBAAiB;;;;;;;;;;;;;kBAa3CN,KAAD,IACdA,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACC,KAAN,CAAYC,eAA1B,GAA4CF,KAAK,CAACC,KAAN,CAAYK,gBAAiB;WACjEN,KAAD,IACPA,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACC,KAAN,CAAYC,eAA1B,GAA4CF,KAAK,CAACC,KAAN,CAAYO,cAAe;;;aAG7DR,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYQ,qBAAsB;;;;;;CArB1D;;AA6BA,MAAMC,SAAkD,GAAG;AAAA,MAAC;AAC1DC,IAAAA,KAD0D;AAE1DC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAFoD,GAAD;AAAA,MAGtDd,KAHsD;;AAAA,sBAKzD,oBAAC,SAAD,QACGA,KAAK,CAACe,KAAN,iBAAe;AAAO,IAAA,OAAO,EAAEJ,KAAK,CAACK;AAAtB,KAA6BhB,KAAK,CAACe,KAAnC,CADlB,eAEE,oBAAC,WAAD,eACMJ,KADN,EAEMX,KAFN;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAGW,KAAK,CAACM,KAAN,IAAeN,KAAK,CAACM,KAAtB,IAAgC,EAJzC;AAKE,IAAA,KAAK,EAAEJ,OAAO,CAACF,KAAK,CAACK,IAAP,CAAP,IAAuBF,MAAM,CAACH,KAAK,CAACK,IAAP,CALtC;AAME,IAAA,WAAW,EACThB,KAAK,CAACkB,WAAN,IACC,GAAElB,KAAK,CAACkB,WAAY,GAAGlB,KAAK,CAACmB,QAAN,IAAkB,GAAnB,IAA2B,EAAG;AARzD,KAFF,EAaGnB,KAAK,CAACoB,SAAN,IAAmBP,OAAO,CAACF,KAAK,CAACK,IAAP,CAA1B,IAA0CF,MAAM,CAACH,KAAK,CAACK,IAAP,CAAhD,iBACC,oBAAC,WAAD,QAAcF,MAAM,CAACH,KAAK,CAACK,IAAP,CAApB,CAdJ,CALyD;AAAA,CAA3D;;AAwBA,eAAeN,SAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { FieldWrapProps } from './types'\nimport { device } from '../../consts/sizes'\n\nconst StyledRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  position: relative;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    & ${StyledRow}:first-of-type {\n      flex-grow: 1;\n      margin-right: 5px;\n    }\n\n    & ${StyledRow}:last-child {\n      flex-grow: 1;\n      margin-left: 5px;\n    }\n  }\n`\n\nconst StyledError = styled.span`\n  color: ${(props) => props.theme.inputErrorColor};\n  position: absolute;\n  font-size: 10px;\n  bottom: -14px;\n`\n\nconst StyledInput = styled.input<any>`\n  background: ${(props) => props.theme.inputBgColor};\n  border: 1px solid ${(props) => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: 0px 7px 64px rgba(194, 186, 186, 0.07);\n  border-radius: 6px;\n  width: 100%;\n  height: 63px;\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 0px 20px;\n  border-color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  &::placeholder {\n    color: ${(props) => props.theme.inputPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst BaseField: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors },\n  ...props\n}) => (\n  <StyledRow>\n    {props.label && <label htmlFor={field.name}>{props.label}</label>}\n    <StyledInput\n      {...field}\n      {...props}\n      type=\"text\"\n      value={(field.value && field.value) || ''}\n      error={touched[field.name] && errors[field.name]}\n      placeholder={\n        props.placeholder &&\n        `${props.placeholder}${(props.required && '*') || ''}`\n      }\n    />\n    {props.showError && touched[field.name] && errors[field.name] && (\n      <StyledError>{errors[field.name]}</StyledError>\n    )}\n  </StyledRow>\n)\n\nexport default BaseField\n"],"file":"base.js"}