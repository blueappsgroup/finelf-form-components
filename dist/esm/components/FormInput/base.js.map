{"version":3,"sources":["../../../../src/components/FormInput/base.tsx"],"names":["React","useContext","useState","Slider","styled","device","FormContext","setFormValuesToCache","StyledRow","div","Row","tablet","StyledError","span","props","theme","inputErrorColor","StyledInput","input","inputBgColor","inputBorderColor","error","inputTextColor","inputPlaceHolderColor","StyledSelect","select","StyledSpan","StyledInputSuffix","rangeFillBgColor","SliderWrapper","BaseField","field","form","touched","errors","values","id","handleOnBlur","e","onBlur","label","name","type","value","placeholder","required","suffix","showError","BaseSelectField","options","concat","Object","keys","map","option","BaseRangeField","setValue","parseInt","handleOnChangeSlider","handleOnChangeCompleteSlider","handleOnChange","target","onChange","min","max","step","Math","ceil","justifyContent","unit"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ChangeEvent, ReactElement, useContext, useState } from 'react'\nimport Slider from 'react-rangeslider'\nimport styled from 'styled-components'\nimport { device } from '../../consts/sizes'\nimport {\n  FieldWrapProps,\n  RangeFieldWrapProps,\n  SelectFieldOptions,\n  SelectFieldWrapProps,\n} from '../../types'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype StyledProps = {\n  theme: {\n    inputErrorColor: string\n    inputBgColor: string\n    inputPlaceHolderColor: string\n    inputBorderColor: string\n    inputTextColor: string\n    submitButtonBgColor: string\n    rangeFillBgColor: string\n  }\n  error?: string | boolean\n}\n\nconst StyledRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  position: relative;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    & ${StyledRow}:first-of-type {\n      flex-grow: 1;\n      margin-right: 5px;\n    }\n\n    & ${StyledRow}:last-child {\n      flex-grow: 1;\n      margin-left: 5px;\n    }\n  }\n`\n\nconst StyledError = styled.span`\n  color: ${(props: StyledProps): string => props.theme.inputErrorColor};\n  position: absolute;\n  font-size: 10px;\n  bottom: -12px;\n`\n\nconst StyledInput = styled.input<any>`\n  background: ${(props: StyledProps): string => props.theme.inputBgColor};\n  border: 1px solid\n    ${(props: StyledProps): string => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: 0px 7px 64px rgba(194, 186, 186, 0.07);\n  border-radius: 6px;\n  width: 100%;\n  height: 63px;\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 0px 20px;\n  border-color: ${(props: StyledProps): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  &::placeholder {\n    color: ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst StyledSelect = styled.select<any>`\n  background: ${(props: StyledProps): string => props.theme.inputBgColor};\n  border: 1px solid\n    ${(props: StyledProps): string => props.theme.inputBorderColor};\n  box-sizing: border-box;\n  box-shadow: 0px 7px 64px rgba(194, 186, 186, 0.07);\n  border-radius: 6px;\n  width: 100%;\n  height: 63px;\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 0px 20px;\n  border-color: ${(props: StyledProps): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputBorderColor};\n  color: ${(props: any): string =>\n    props.error ? props.theme.inputErrorColor : props.theme.inputTextColor};\n\n  &::placeholder {\n    color: ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst StyledSpan = styled.span`\n  font-weight: bold;\n`\n\nconst StyledInputSuffix = styled.span`\n  position: absolute;\n  right: 0;\n  display: inline-flex;\n  align-items: center;\n  height: 63px;\n  background-color: ${(props: StyledProps): string =>\n    props.theme.rangeFillBgColor};\n  border-radius: 5px;\n  padding: 0 15px;\n  font-weight: bold;\n  font-size: 14px;\n  color: ${(props: StyledProps): string => props.theme.inputBgColor};\n`\n\n/* eslint-disable */\nconst SliderWrapper = styled.div`\n .rangeslider {\n  position: relative;\n  width: 100%;\n  height: 12px;\n  border-radius: 10px;\n  background-color: ${(props: StyledProps): string =>\n  props.theme.inputPlaceHolderColor};\n  .rangeslider__fill {\n   height: 100%;\n   background-color: ${(props: StyledProps): string =>\n  props.theme.rangeFillBgColor};\n   border-radius: 10px;\n  }\n  .rangeslider__handle {\n   top: -6px;\n   width: 24px;\n   height: 24px;\n   background-color: ${(props: StyledProps): string =>\n  props.theme.inputBgColor};\n   position: absolute;\n   cursor: pointer;\n   box-shadow: 0px 3px 6px ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n   border: 1px solid ${(props: StyledProps): string => props.theme.inputPlaceHolderColor};\n   border-radius: 50%;\n   &::after {\n    width: 7px;\n    height: 7px;\n    background-color: ${(props: StyledProps): string =>\n  props.theme.rangeFillBgColor};\n    position: absolute;\n    content: '';\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n   }\n  }\n }\n`\n/* eslint-enable */\n\nconst BaseField: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFormValuesToCache(values, id)\n    field.onBlur && field.onBlur(e)\n  }\n\n  return (\n    <StyledRow>\n      {props.label && <label htmlFor={field.name}>{props.label}</label>}\n      <StyledInput\n        {...field}\n        {...props}\n        onBlur={handleOnBlur}\n        type={props.type}\n        value={(field.value && field.value) || ''}\n        error={touched[field.name] && errors[field.name]}\n        placeholder={\n          props.placeholder &&\n          `${props.placeholder}${(props.required && '*') || ''}`\n        }\n      />\n      {props.suffix && <StyledInputSuffix>{props.suffix}</StyledInputSuffix>}\n      {props.showError && touched[field.name] && errors[field.name] && (\n        <StyledError>{errors[field.name]}</StyledError>\n      )}\n    </StyledRow>\n  )\n}\n\nexport default BaseField\n\nexport const BaseSelectField: (props: SelectFieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFormValuesToCache(values, id)\n    field.onBlur && field.onBlur(e)\n  }\n\n  const options = (options: SelectFieldOptions): Array<JSX.Element> => {\n    return [\n      <option key=\"select\" value=\"select\" disabled>\n        wybierz\n      </option>,\n    ].concat(\n      Object.keys(options).map((option) => {\n        return (\n          <option key={option} value={option}>\n            {options[option]}\n          </option>\n        )\n      })\n    )\n  }\n\n  return (\n    <StyledRow>\n      {props.label && <label htmlFor={field.name}>{props.label}</label>}\n      <StyledSelect\n        {...field}\n        {...props}\n        onBlur={handleOnBlur}\n        type=\"text\"\n        value={(field.value && field.value) || 'select'}\n        error={touched[field.name] && errors[field.name]}\n        placeholder={\n          props.placeholder &&\n          `${props.placeholder}${(props.required && '*') || ''}`\n        }\n      >\n        {props.options && options(props.options)}\n      </StyledSelect>\n      {props.showError && touched[field.name] && errors[field.name] && (\n        <StyledError>{errors[field.name]}</StyledError>\n      )}\n    </StyledRow>\n  )\n}\n\nexport const BaseRangeField: (props: RangeFieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const { id } = useContext(FormContext)\n  const [value, setValue] = useState(parseInt(field.value) || props.value || 0)\n  const handleOnChangeSlider = (value: number): void => {\n    setValue(value)\n  }\n  const handleOnChangeCompleteSlider = (): void => {\n    setFormValuesToCache(\n      {\n        ...values,\n        [field.name]: value,\n      },\n      id\n    )\n  }\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const value = parseInt(e.target.value) || 0\n    setValue(value)\n    field.onChange && field.onChange(e)\n  }\n  const handleOnBlur = (e: ChangeEvent<HTMLInputElement>): void => {\n    let value = parseInt(e.target.value) || 0\n\n    if (props.min && props.min > value) {\n      value = props.min\n    }\n\n    if (props.max && props.max < value) {\n      value = props.max\n    }\n\n    value = props.step ? Math.ceil(value / props.step) * props.step : value\n\n    setValue(value)\n    setFormValuesToCache(\n      {\n        ...values,\n        [field.name]: value,\n      },\n      id\n    )\n    field.onBlur && field.onBlur(e)\n  }\n\n  return (\n    <div>\n      <StyledRow>\n        {props.label && <label htmlFor={field.name}>{props.label}</label>}\n        <StyledInput\n          {...field}\n          {...props}\n          onChange={handleOnChange}\n          onBlur={handleOnBlur}\n          type={props.type}\n          value={value}\n          error={touched[field.name] && errors[field.name]}\n          placeholder={\n            props.placeholder &&\n            `${props.placeholder}${(props.required && '*') || ''}`\n          }\n        />\n        {props.suffix && <StyledInputSuffix>{props.suffix}</StyledInputSuffix>}\n      </StyledRow>\n      <SliderWrapper>\n        <Slider\n          min={props.min}\n          max={props.max}\n          step={props.step}\n          value={value}\n          tooltip={false}\n          onChange={handleOnChangeSlider}\n          onChangeComplete={handleOnChangeCompleteSlider}\n        />\n      </SliderWrapper>\n      <StyledRow style={{ justifyContent: 'space-between' }}>\n        <StyledSpan>\n          Min. {props.min} {props.unit}\n        </StyledSpan>\n        <StyledSpan>\n          Max. {props.max} {props.unit}\n        </StyledSpan>\n      </StyledRow>\n    </div>\n  )\n}\n"],"file":"base.js"}