{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["React","useCallback","useContext","useLayoutEffect","useState","styled","useFormikContext","CheckboxesGroup","CheckboxField","FormContext","StyledError","formStatuses","StyledErrorText","Agreemnets","linksForReplace","name","requiredErorText","hasReadMore","id","apiUrl","setInitialValues","initialValues","setFormStatus","errors","setErrors","agreements","setAgreements","error","setError","replaceLinkInAgreements","replacedAgreements","map","item","newContent","content","Object","keys","forEach","key","regxp","RegExp","replace","fetchAgreements","response","fetch","data","json","hasError","dataForInitialize","reduce","acc","values","required","push","e","agrrementsError","console","log","length","hasRequired","some","agreement","Array","isArray","groupType","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { useFormikContext } from 'formik'\n\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\nimport { StyledError } from '../FormInput/base'\nimport { formStatuses } from '../../consts/form'\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n  groupType?: string\n  requiredErorText?: string\n  hasReadMore?: boolean\n}\n\nconst StyledErrorText = styled(StyledError)`\n  position: static;\n`\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n  requiredErorText = '* Zapoznanie się z treścią regulaminu serwisu oraz polityką prywatności jest wymagane.',\n  hasReadMore,\n}) => {\n  const {\n    id,\n    apiUrl,\n    setInitialValues,\n    initialValues,\n    setFormStatus,\n  } = useContext(FormContext)\n  const { errors, setErrors } = useFormikContext()\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const [error, setError] = useState<boolean>(false)\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach((key) => {\n            const regxp = new RegExp(key, 'g')\n            newContent = newContent.replace(regxp, linksForReplace[key])\n\n            return newContent\n          })\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    try {\n      const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n      const data = await response.json()\n\n      let hasError = false\n      const dataForInitialize = data.reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (acc: any, item: AgreementType) => {\n          acc.values[item.id] = false\n          if (item.required) {\n            acc.required.push('required')\n            if (\n              !hasError &&\n              (!initialValues ||\n                !initialValues[name] ||\n                !initialValues[name][item.id])\n            ) {\n              hasError = true\n            }\n          } else {\n            acc.required.push(null)\n          }\n          return acc\n        },\n        { values: {}, required: [] }\n      )\n      setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n      setInitialValues &&\n        setInitialValues({ [name]: dataForInitialize.values, ...initialValues })\n      if (hasError) {\n        setErrors({ [name]: dataForInitialize.required, ...errors })\n      }\n    } catch (e) {\n      setFormStatus && setFormStatus(formStatuses.agrrementsError)\n      console.log(e)\n    }\n  }, [\n    apiUrl,\n    errors,\n    id,\n    initialValues,\n    linksForReplace,\n    name,\n    replaceLinkInAgreements,\n    setErrors,\n    setFormStatus,\n    setInitialValues,\n  ])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n\n    if (agreements.length > 0 && !error) {\n      let hasRequired = false\n      agreements.some((agreement) => {\n        if (agreement.required) {\n          hasRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (hasRequired !== error) {\n        setError(hasRequired)\n      }\n    }\n  }, [agreements, error, fetchAgreements])\n\n  return (\n    <>\n      {Array.isArray(agreements) && agreements.length > 0 && (\n        <>\n          <CheckboxesGroup name={name}>\n            {agreements.map((item) => (\n              <CheckboxField\n                key={item.id}\n                name={`${item.id}`}\n                HTMLcontent={item.content}\n                required={item.required}\n                hasReadMore={hasReadMore}\n              />\n            ))}\n          </CheckboxesGroup>\n          {error && <StyledErrorText>{requiredErorText}</StyledErrorText>}\n        </>\n      )}\n    </>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n  groupType: 'checkboxGroup',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}