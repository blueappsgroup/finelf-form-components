{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["React","useState","Formik","Form","styled","ThemeProvider","device","RedirectPage","FormContext","getFormValuesFromCache","resetFormValueCache","sendDataToAwsSQS","formStatuses","StyledForm","props","theme","formBgColor","tablet","FormWrapper","children","onSubmit","customTheme","id","stepsLength","stepsTitles","hasRedirect","redirectUrl","timeToRedirect","redirectHeaderText","logoImg","redirectMainImg","redirectBgImg","queueUrl","sendDataToSQS","initialValues","setInitialValues","currentStep","setCurrentStep","handleSubmit","values","resetForm","setStatus","submited","e","console","log","error","handleReset","prevStep","nextStep","stepsTitleList","status"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SACEC,WADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,gBAJF,QAKO,aALP;AAMA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,MAAMC,UAAU,GAAGT,MAAM,CAACD,IAAD,CAAO;;;;;;gBAMfW,KAAD,IAAmBA,KAAK,CAACC,KAAN,CAAYC,WAAY;;;;;;;;WAQhDV,MAAM,CAACW,MAAO;;;;CAdzB;;AAoBA,MAAMC,WAA0B,GAAG,CAAC;AAClCC,EAAAA,QADkC;AAElCC,EAAAA,QAFkC;AAGlCC,EAAAA,WAHkC;AAIlCC,EAAAA,EAJkC;AAKlCC,EAAAA,WALkC;AAMlCC,EAAAA,WANkC;AAOlCC,EAAAA,WAPkC;AAQlCC,EAAAA,WARkC;AASlCC,EAAAA,cATkC;AAUlCC,EAAAA,kBAVkC;AAWlCC,EAAAA,OAXkC;AAYlCC,EAAAA,eAZkC;AAalCC,EAAAA,aAbkC;AAclCC,EAAAA,QAdkC;AAelCC,EAAAA;AAfkC,CAAD,KAgB7B;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClC,QAAQ,CAACQ,sBAAsB,CAACa,EAAD,CAAvB,CAAlD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMqC,YAAY,GAAG,OACnBC,MADmB,EAEnBzB,KAFmB,KAOF;AACjB,QAAIM,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACmB,MAAD,EAASzB,KAAT,CAAR;AACD;;AAED,QAAI;AACF,UAAImB,aAAJ,EAAmB;AACjB,cAAMtB,gBAAgB,CAAC4B,MAAD,EAASP,QAAT,CAAtB;AACD;;AAEDlB,MAAAA,KAAK,CAAC0B,SAAN;AACA1B,MAAAA,KAAK,CAAC2B,SAAN,CAAgB7B,YAAY,CAAC8B,QAA7B;AACD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA7B,MAAAA,KAAK,CAAC2B,SAAN,CAAgB7B,YAAY,CAACkC,KAA7B;AACD;AACF,GAvBD;;AAwBA,QAAMC,WAAW,GAAG,MAAY;AAC9BrC,IAAAA,mBAAmB,CAACY,EAAD,CAAnB;AACAa,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,QAAMa,QAAkB,GAAG,MAAMX,cAAc,CAACD,WAAW,GAAG,CAAf,CAA/C;;AAEA,QAAMa,QAAkB,GAAG,MAAMZ,cAAc,CAACD,WAAW,GAAG,CAAf,CAA/C;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,EADK;AAELC,MAAAA,WAFK;AAGLa,MAAAA,WAHK;AAILc,MAAAA,cAAc,EAAE1B,WAJX;AAKLyB,MAAAA,QALK;AAMLD,MAAAA;AANK;AADT,kBAUE,oBAAC,aAAD;AAAe,IAAA,WAAW,oBAAO3B,WAAP;AAA1B,kBACE,oBAAC,MAAD;AACE,IAAA,kBAAkB,MADpB;AAEE,IAAA,aAAa,EAAEa,aAFjB;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAIE,IAAA,OAAO,EAAES;AAJX,KAMIjC,KAAD,IACEW,WAAW,IAAIX,KAAK,CAACqC,MAAN,KAAiBvC,YAAY,CAAC8B,QAA7C,iBACC,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEhB,WADf;AAEE,IAAA,eAAe,EAAEK,aAFnB;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,UAAU,EAAED,kBAJd;AAKE,IAAA,cAAc,EAAED,cALlB;AAME,IAAA,OAAO,EAAEG;AANX,IADF,iBASM,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAER;AAAhB,KAAqBH,QAArB,CAhBV,CADF,CAVF,CADF;AAkCD,CAvFD;;AAyFA,eAAeD,WAAf","sourcesContent":["import React, { FC, ReactElement, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled from 'styled-components'\n\nimport { ThemeProvider } from '../../consts/theme'\nimport { device } from '../../consts/sizes'\nimport { FormProps, FormValuesType } from '../../types'\nimport RedirectPage from '../RedirectPage'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n  sendDataToAwsSQS,\n} from '../../utils'\nimport { formStatuses } from '../../consts/form'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  padding: 20px 15px;\n  border-radius: 6px;\n  box-shadow: 0px 20px 60px rgba(0, 0, 0, 0.08);\n\n  @media ${device.tablet} {\n    padding: 20px 30px;\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n  stepsLength,\n  stepsTitles,\n  hasRedirect,\n  redirectUrl,\n  timeToRedirect,\n  redirectHeaderText,\n  logoImg,\n  redirectMainImg,\n  redirectBgImg,\n  queueUrl,\n  sendDataToSQS,\n}) => {\n  const [initialValues, setInitialValues] = useState(getFormValuesFromCache(id))\n  const [currentStep, setCurrentStep] = useState(0)\n\n  const handleSubmit = async (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n\n    try {\n      if (sendDataToSQS) {\n        await sendDataToAwsSQS(values, queueUrl)\n      }\n\n      props.resetForm()\n      props.setStatus(formStatuses.submited)\n    } catch (e) {\n      console.log(e)\n      props.setStatus(formStatuses.error)\n    }\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    setInitialValues({})\n  }\n\n  const prevStep: Function = () => setCurrentStep(currentStep - 1)\n\n  const nextStep: Function = () => setCurrentStep(currentStep + 1)\n\n  return (\n    <FormContext.Provider\n      value={{\n        id,\n        stepsLength,\n        currentStep,\n        stepsTitleList: stepsTitles,\n        nextStep,\n        prevStep,\n      }}\n    >\n      <ThemeProvider customTheme={{ ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          {(props): ReactElement =>\n            (hasRedirect && props.status === formStatuses.submited && (\n              <RedirectPage\n                redirectUrl={redirectUrl}\n                backgroundImage={redirectBgImg}\n                logoImg={logoImg}\n                headerText={redirectHeaderText}\n                timeToRedirect={timeToRedirect}\n                mainImg={redirectMainImg}\n              />\n            )) || <StyledForm id={id}>{children}</StyledForm>\n          }\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}