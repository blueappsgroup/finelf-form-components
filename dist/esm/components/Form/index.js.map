{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["React","useMemo","useState","Formik","Form","styled","ThemeProvider","device","RedirectPage","TransactionId","FormContext","getFormValuesFromCache","resetFormValueCache","handleSendDataToApi","getFieldsValuesFromUrl","formStatuses","StyledForm","props","theme","formMaxWidth","formBgColor","fontFamily","formPaddingMobile","formBoxShadow","tablet","formPadding","FormWrapper","children","onSubmit","customTheme","id","stepsLength","stepsTitles","hasRedirect","redirectUrl","timeToRedirect","redirectHeaderText","logoImg","redirectMainImg","redirectBgImg","sendDataToApi","apiUrl","transactionName","propertyNamesFromUrl","dataWithUserAgent","trasationIdValue","URLSearchParams","window","location","search","get","intialValuesFromUrl","length","redirectUrlPath","setRedirectUrlPath","initialValues","setInitialValues","trasaction_id","currentStep","setCurrentStep","fieldsForSkip","setFieldsForSkip","errorFromApi","setErrorFromApi","shouldRedirect","addFieldForSkip","key","handleSubmit","values","response","urlFromApi","status","statusFromApi","json","resetForm","setStatus","submited","e","console","log","error","handleReset","prevStep","nextStep","stepsTitleList"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useMemo, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled from 'styled-components'\n\nimport { ThemeProvider } from '../../consts/theme'\nimport { device } from '../../consts/sizes'\nimport { FormProps, FormValuesType } from '../../types'\nimport RedirectPage from '../RedirectPage'\nimport TransactionId from '../TransactionId'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n  handleSendDataToApi,\n  getFieldsValuesFromUrl,\n} from '../../utils'\nimport { formStatuses } from '../../consts/form'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: ${(props): string => props.theme.formMaxWidth};\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: ${(props): string => props.theme.fontFamily};\n  padding: ${(props): string => props.theme.formPaddingMobile};\n  border-radius: 6px;\n  box-shadow: ${(props): string => props.theme.formBoxShadow};\n\n  @media ${device.tablet} {\n    padding: ${(props): string => props.theme.formPadding};\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n  stepsLength,\n  stepsTitles,\n  hasRedirect,\n  redirectUrl,\n  timeToRedirect,\n  redirectHeaderText,\n  logoImg,\n  redirectMainImg,\n  redirectBgImg,\n  sendDataToApi,\n  apiUrl,\n  transactionName,\n  propertyNamesFromUrl,\n  dataWithUserAgent,\n}) => {\n  const trasationIdValue =\n    transactionName &&\n    new URLSearchParams(window.location.search).get(transactionName)\n  const intialValuesFromUrl = useMemo(\n    () =>\n      (propertyNamesFromUrl &&\n        propertyNamesFromUrl.length > 0 &&\n        getFieldsValuesFromUrl(propertyNamesFromUrl)) ||\n      {},\n    [propertyNamesFromUrl]\n  )\n  const [redirectUrlPath, setRedirectUrlPath] = useState(redirectUrl)\n  const [initialValues, setInitialValues] = useState({\n    ...intialValuesFromUrl,\n    ...getFormValuesFromCache(id),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    trasaction_id: trasationIdValue,\n  })\n  const [currentStep, setCurrentStep] = useState(0)\n  const [fieldsForSkip, setFieldsForSkip] = useState<string[]>([])\n  const [errorFromApi, setErrorFromApi] = useState<boolean>(false)\n  const shouldRedirect = !errorFromApi && hasRedirect\n  const addFieldForSkip = (key: string): void =>\n    setFieldsForSkip([...fieldsForSkip, key])\n\n  const handleSubmit = async (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n\n    try {\n      if (sendDataToApi && apiUrl) {\n        const response = await handleSendDataToApi(\n          values,\n          apiUrl,\n          id,\n          fieldsForSkip,\n          dataWithUserAgent\n        )\n        const {\n          redirectUrl: urlFromApi,\n          status: statusFromApi,\n        } = await response.json()\n\n        if (statusFromApi === false) {\n          setErrorFromApi(true)\n          return\n        }\n\n        urlFromApi && setRedirectUrlPath(urlFromApi)\n      }\n\n      props.resetForm()\n      props.setStatus(formStatuses.submited)\n    } catch (e) {\n      console.log(e)\n      props.setStatus(formStatuses.error)\n    }\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setInitialValues({} as any)\n  }\n\n  const prevStep: Function = () => setCurrentStep(currentStep - 1)\n\n  const nextStep: Function = () => setCurrentStep(currentStep + 1)\n\n  return (\n    <FormContext.Provider\n      value={{\n        id,\n        apiUrl,\n        stepsLength,\n        currentStep,\n        stepsTitleList: stepsTitles,\n        nextStep,\n        prevStep,\n        fieldsForSkip,\n        addFieldForSkip,\n        errorFromApi,\n      }}\n    >\n      <ThemeProvider customTheme={{ ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          {(props): ReactElement =>\n            (shouldRedirect && props.status === formStatuses.submited && (\n              <RedirectPage\n                redirectUrl={redirectUrlPath}\n                backgroundImage={redirectBgImg}\n                logoImg={logoImg}\n                headerText={redirectHeaderText}\n                timeToRedirect={timeToRedirect}\n                mainImg={redirectMainImg}\n              />\n            )) || (\n              <StyledForm id={id}>\n                <TransactionId />\n                {children}\n              </StyledForm>\n            )\n          }\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}