{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["React","useState","Formik","Form","styled","ThemeProvider","device","RedirectPage","TransactionId","FormContext","getFormValuesFromCache","resetFormValueCache","handleSendDataToApi","formStatuses","StyledForm","props","theme","formBgColor","tablet","FormWrapper","children","onSubmit","customTheme","id","stepsLength","stepsTitles","hasRedirect","redirectUrl","timeToRedirect","redirectHeaderText","logoImg","redirectMainImg","redirectBgImg","sendDataToApi","apiUrl","transactionName","trasationIdValue","URLSearchParams","window","location","search","get","initialValues","setInitialValues","trasaction_id","currentStep","setCurrentStep","handleSubmit","values","resetForm","setStatus","submited","e","console","log","error","handleReset","prevStep","nextStep","stepsTitleList","status"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled from 'styled-components'\n\nimport { ThemeProvider } from '../../consts/theme'\nimport { device } from '../../consts/sizes'\nimport { FormProps, FormValuesType } from '../../types'\nimport RedirectPage from '../RedirectPage'\nimport TransactionId from '../TransactionId'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n  handleSendDataToApi,\n} from '../../utils'\nimport { formStatuses } from '../../consts/form'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  padding: 20px 15px;\n  border-radius: 6px;\n  box-shadow: 0px 20px 60px rgba(0, 0, 0, 0.08);\n\n  @media ${device.tablet} {\n    padding: 20px 30px;\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n  stepsLength,\n  stepsTitles,\n  hasRedirect,\n  redirectUrl,\n  timeToRedirect,\n  redirectHeaderText,\n  logoImg,\n  redirectMainImg,\n  redirectBgImg,\n  sendDataToApi,\n  apiUrl,\n  transactionName,\n}) => {\n  const trasationIdValue =\n    transactionName &&\n    new URLSearchParams(window.location.search).get(transactionName)\n\n  const [initialValues, setInitialValues] = useState({\n    ...getFormValuesFromCache(id),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    trasaction_id: trasationIdValue,\n  })\n  const [currentStep, setCurrentStep] = useState(0)\n\n  const handleSubmit = async (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n\n    try {\n      if (sendDataToApi && apiUrl) {\n        await handleSendDataToApi(values, apiUrl, id)\n      }\n\n      props.resetForm()\n      props.setStatus(formStatuses.submited)\n    } catch (e) {\n      console.log(e)\n      props.setStatus(formStatuses.error)\n    }\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setInitialValues({} as any)\n  }\n\n  const prevStep: Function = () => setCurrentStep(currentStep - 1)\n\n  const nextStep: Function = () => setCurrentStep(currentStep + 1)\n\n  return (\n    <FormContext.Provider\n      value={{\n        id,\n        apiUrl,\n        stepsLength,\n        currentStep,\n        stepsTitleList: stepsTitles,\n        nextStep,\n        prevStep,\n      }}\n    >\n      <ThemeProvider customTheme={{ ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          {(props): ReactElement =>\n            (hasRedirect && props.status === formStatuses.submited && (\n              <RedirectPage\n                redirectUrl={redirectUrl}\n                backgroundImage={redirectBgImg}\n                logoImg={logoImg}\n                headerText={redirectHeaderText}\n                timeToRedirect={timeToRedirect}\n                mainImg={redirectMainImg}\n              />\n            )) || (\n              <StyledForm id={id}>\n                <TransactionId />\n                {children}\n              </StyledForm>\n            )\n          }\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}