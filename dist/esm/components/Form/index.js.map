{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["React","useState","Formik","Form","styled","ThemeProvider","device","theme","FormContext","getFormValuesFromCache","resetFormValueCache","StyledForm","props","formBgColor","tablet","FormWrapper","children","onSubmit","customTheme","id","initialValues","setInitialValues","handleSubmit","values","resetForm","setStatus","handleReset"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,SACEC,WADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,aAJP;AAMA,MAAMC,UAAU,GAAGP,MAAM,CAACD,IAAD,CAAO;;;;;;gBAMfS,KAAD,IAAmBA,KAAK,CAACL,KAAN,CAAYM,WAAY;;;;;;;;WAQhDP,MAAM,CAACQ,MAAO;;;;CAdzB;;AAoBA,MAAMC,WAA0B,GAAG,CAAC;AAClCC,EAAAA,QADkC;AAElCC,EAAAA,QAFkC;AAGlCC,EAAAA,WAHkC;AAIlCC,EAAAA;AAJkC,CAAD,KAK7B;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAACQ,sBAAsB,CAACU,EAAD,CAAvB,CAAlD;;AACA,QAAMG,YAAY,GAAG,CACnBC,MADmB,EAEnBX,KAFmB,KAMV;AACT,QAAIK,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACM,MAAD,EAASX,KAAT,CAAR;AACD;;AACDA,IAAAA,KAAK,CAACY,SAAN;AACAZ,IAAAA,KAAK,CAACa,SAAN,CAAgB,UAAhB;AACD,GAZD;;AAaA,QAAMC,WAAW,GAAG,MAAY;AAC9BhB,IAAAA,mBAAmB,CAACS,EAAD,CAAnB;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAA7B,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,kCAAOZ,KAAP,GAAiBW,WAAjB;AAApB,kBACE,oBAAC,MAAD;AACE,IAAA,kBAAkB,MADpB;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,OAAO,EAAEI;AAJX,kBAME,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEP;AAAhB,KAAqBH,QAArB,CANF,CADF,CADF,CADF;AAcD,CAvCD;;AAyCA,eAAeD,WAAf","sourcesContent":["import React, { FC, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { device } from '../../consts/sizes'\nimport { theme } from '../../consts/theme'\nimport { FormProps, FormValuesType } from '../../types'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n} from '../../utils'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  padding: 20px 15px;\n  border-radius: 6px;\n  box-shadow: 0px 20px 60px rgba(0, 0, 0, 0.08);\n\n  @media ${device.tablet} {\n    padding: 20px 30px;\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n}) => {\n  const [initialValues, setInitialValues] = useState(getFormValuesFromCache(id))\n  const handleSubmit = (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n  ): void => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n    props.resetForm()\n    props.setStatus('submited')\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    setInitialValues({})\n  }\n\n  return (\n    <FormContext.Provider value={{ id }}>\n      <ThemeProvider theme={{ ...theme, ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          <StyledForm id={id}>{children}</StyledForm>\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}