{"version":3,"sources":["../../../../src/components/CheckboxesGroup/index.tsx"],"names":["React","useMemo","FieldArray","useFormikContext","CheckboxField","CheckboxesGroup","name","children","values","setValues","hasManyCheckboxes","Array","isArray","checkboxesNames","map","item","props","handleOnChange","e","fieldsToUpdate","reduce","acc","target","value","groupType","defaultProps"],"mappings":";;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAA+CC,OAA/C,QAA8D,OAA9D;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,QAA7C;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;;AAQA,MAAMC,eAAyC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACxE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBN,gBAAgB,EAA9C;AACA,QAAMO,iBAAiB,GAAGC,KAAK,CAACC,OAAN,CAAcL,QAAd,CAA1B;AACA,QAAMM,eAAyB,GAAGZ,OAAO,CACvC,MACES,iBAAiB,GACbH,QAAQ,IAAIA,QAAQ,CAACO,GAAT,CAAcC,IAAD,IAAeA,IAAI,CAACC,KAAL,CAAWV,IAAvC,CADC,GAEb,CAACC,QAAQ,CAACS,KAAT,CAAeV,IAAhB,CAJiC,EAKvC,CAACI,iBAAD,EAAoBH,QAApB,CALuC,CAAzC;;AAQA,QAAMU,cAAc,GAAIC,CAAD,IAA4C;AACjE,UAAMC,cAAc,GAAGN,eAAe,CAACO,MAAhB,CAAuB,CAACC,GAAD,EAAMN,IAAN,KAAe;AAC3DM,MAAAA,GAAG,CAACN,IAAD,CAAH,GAAYG,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,MAAnB,GAA4B,KAA5B,GAAoC,IAAhD;AACA,aAAOF,GAAP;AACD,KAHsB,EAGpB,EAHoB,CAAvB;AAKAZ,IAAAA,SAAS,iCAAOD,MAAP;AAAuB,OAACF,IAAD,GAAQa;AAA/B,OAAT;AACD,GAPD;;AASA,sBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEb,IADR;AAEE,IAAA,MAAM,EAAE,mBACN,uDACE,oBAAC,aAAD;AACE,MAAA,EAAE,EAAG,GAAEA,IAAK,YADd;AAEE,MAAA,IAAI,EAAG,GAAEA,IAAK,YAFhB;AAGE,MAAA,KAAK,EAAC,yBAHR;AAIE,MAAA,QAAQ,EAAEW,cAJZ;AAKE,MAAA,eAAe;AALjB,MADF,EAQGV,QAAQ,IAAI,CAACG,iBAAb,iBACC,oBAAC,aAAD,eACMH,QAAQ,CAACS,KADf;AAEE,MAAA,IAAI,EAAG,GAAEV,IAAK,IAAGC,QAAQ,CAACS,KAAT,CAAeV,IAAK;AAFvC,OATJ,EAcGC,QAAQ,IACPG,iBADD,IAECH,QAAQ,CAACO,GAAT,CAAcC,IAAD,iBACX,oBAAC,aAAD,eACMA,IAAI,CAACC,KADX;AAEE,MAAA,GAAG,EAAED,IAAI,CAACC,KAAL,CAAWV,IAFlB;AAGE,MAAA,IAAI,EAAG,GAAEA,IAAK,IAAGS,IAAI,CAACC,KAAL,CAAWV,IAAK,EAHnC;AAIE,MAAA,EAAE,EAAG,GAAEA,IAAK,IAAGS,IAAI,CAACC,KAAL,CAAWV,IAAK;AAJjC,OADF,CAhBJ;AAHJ,IADF;AAgCD,CApDD;;;AALEA,EAAAA,I;AACAC,EAAAA,Q;AACAiB,EAAAA,S;;AAyDFnB,eAAe,CAACoB,YAAhB,GAA+B;AAC7BD,EAAAA,SAAS,EAAE;AADkB,CAA/B;AAIA,eAAenB,eAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ReactElement, FC, ChangeEvent, useMemo } from 'react'\nimport { FieldArray, useFormikContext } from 'formik'\n\nimport CheckboxField from '../FormInput/CheckboxField'\n\ntype CheckboxesGroupTypes = {\n  name: string\n  children: any\n  groupType?: string\n}\n\nconst CheckboxesGroup: FC<CheckboxesGroupTypes> = ({ name, children }) => {\n  const { values, setValues } = useFormikContext()\n  const hasManyCheckboxes = Array.isArray(children)\n  const checkboxesNames: string[] = useMemo(\n    () =>\n      hasManyCheckboxes\n        ? children && children.map((item: any) => item.props.name)\n        : [children.props.name],\n    [hasManyCheckboxes, children]\n  )\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const fieldsToUpdate = checkboxesNames.reduce((acc, item) => {\n      acc[item] = e.target.value === 'true' ? false : true\n      return acc\n    }, {} as { [key: string]: boolean | undefined })\n\n    setValues({ ...(values as any), [name]: fieldsToUpdate })\n  }\n\n  return (\n    <FieldArray\n      name={name}\n      render={(): ReactElement => (\n        <>\n          <CheckboxField\n            id={`${name}.selectAll`}\n            name={`${name}.selectAll`}\n            label=\"Zaznacz wszystkie zgody\"\n            onChange={handleOnChange}\n            disableCollapse\n          />\n          {children && !hasManyCheckboxes && (\n            <CheckboxField\n              {...children.props}\n              name={`${name}.${children.props.name}`}\n            />\n          )}\n          {children &&\n            hasManyCheckboxes &&\n            children.map((item: any) => (\n              <CheckboxField\n                {...item.props}\n                key={item.props.name}\n                name={`${name}.${item.props.name}`}\n                id={`${name}.${item.props.name}`}\n              />\n            ))}\n        </>\n      )}\n    />\n  )\n}\n\nCheckboxesGroup.defaultProps = {\n  groupType: 'checkboxGroup',\n}\n\nexport default CheckboxesGroup\n"],"file":"index.js"}