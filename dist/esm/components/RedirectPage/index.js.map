{"version":3,"sources":["../../../../src/components/RedirectPage/index.tsx"],"names":["React","useCallback","useLayoutEffect","useState","styled","PageWrapper","div","props","backgroundImage","Wrapper","StyledHeader","h1","theme","redirectPageHeaderTextColor","RedirectText","h3","redirectPageRedirectTextColor","CounterText","span","redirectPageCounterTextColor","StyledLogo","img","StyledMainImg","RedirectPage","headerText","logoImg","mainImg","timeToRedirect","redirectUrl","counter","setCounter","decraseCounter","setTimeout","window","location","replace"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,WAApB,EAAiCC,eAAjC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAWA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAkC;;;;;IAKxDC,KAAD,IACAA,KAAK,CAACC,eAAN,IAA0B,yBAAwBD,KAAK,CAACC,eAAgB,IAAI;CANhF;AASA,MAAMC,OAAO,GAAGL,MAAM,CAACE,GAAI;;;CAA3B;AAKA,MAAMI,YAAY,GAAGN,MAAM,CAACO,EAAG;;;;;WAKnBJ,KAAD,IACPA,KAAK,CAACK,KAAN,CAAYC,2BAA4B;CAN5C;AASA,MAAMC,YAAY,GAAGV,MAAM,CAACW,EAAG;;;;;WAKnBR,KAAD,IACPA,KAAK,CAACK,KAAN,CAAYI,6BAA8B;CAN9C;AASA,MAAMC,WAAW,GAAGb,MAAM,CAACc,IAAK;WACpBX,KAAD,IACPA,KAAK,CAACK,KAAN,CAAYO,4BAA6B;CAF7C;AAKA,MAAMC,UAAU,GAAGhB,MAAM,CAACiB,GAAI;;CAA9B;AAIA,MAAMC,aAAa,GAAGlB,MAAM,CAACiB,GAAI;;CAAjC;;AAIA,MAAME,YAAwC,GAAG,CAAC;AAChDC,EAAAA,UAAU,GAAG,wEADmC;AAEhDhB,EAAAA,eAFgD;AAGhDiB,EAAAA,OAHgD;AAIhDC,EAAAA,OAJgD;AAKhDC,EAAAA,cAAc,GAAG,CAL+B;AAMhDC,EAAAA;AANgD,CAAD,KAO3C;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAACwB,cAAD,CAAtC;AACA,QAAMI,cAAc,GAAG9B,WAAW,CAAC,MAAY;AAC7C+B,IAAAA,UAAU,CAACA,UAAU,CAAC,MAAMF,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjB,EAA6C,IAA7C,CAAX,CAAV;AACD,GAFiC,EAE/B,CAACC,UAAD,CAF+B,CAAlC;AAIA5B,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAI2B,OAAO,GAAG,CAAd,EAAiB;AACfE,MAAAA,cAAc;AACd;AACD;;AAEDH,IAAAA,WAAW,IAAIK,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBP,WAAxB,CAAf;AACD,GAPc,EAOZ,CAACC,OAAD,EAAUE,cAAV,EAA0BH,WAA1B,CAPY,CAAf;AASA,sBACE,oBAAC,WAAD;AAAa,IAAA,eAAe,EAAEpB;AAA9B,kBACE,oBAAC,OAAD,QACGiB,OAAO,iBAAI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA;AAAjB,IADd,eAEE,oBAAC,YAAD,QAAeD,UAAf,CAFF,eAGE,oBAAC,YAAD,qDAC8B,oBAAC,WAAD,QAAcK,OAAd,MAD9B,CAHF,EAMGH,OAAO,iBAAI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA;AAApB,IANd,CADF,CADF;AAYD,CAlCD;;AAoCA,eAAeH,YAAf","sourcesContent":["import React, { FC, useCallback, useLayoutEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { RedirectPagePropsTypes } from '../../types'\n\ntype StyledProps = {\n  theme: {\n    redirectPageHeaderTextColor: string\n    redirectPageRedirectTextColor: string\n    redirectPageCounterTextColor: string\n  }\n}\n\nconst PageWrapper = styled.div<{ backgroundImage?: string }>`\n  font-family: 'Manrope', BlinkMacSystemFont, -apple-system, 'Segoe UI',\n    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  text-align: center;\n  ${(props): string | undefined =>\n    props.backgroundImage && `background-image: url(${props.backgroundImage});`}\n`\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`\n\nconst StyledHeader = styled.h1`\n  font-size: 45px;\n  font-weight: 900;\n  line-height: 64px;\n  margin: 0px 0px 45px 0px;\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageHeaderTextColor};\n`\n\nconst RedirectText = styled.h3`\n  font-size: 35px;\n  font-weight: 700;\n  line-height: 50px;\n  margin: 0px;\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageRedirectTextColor};\n`\n\nconst CounterText = styled.span`\n  color: ${(props: StyledProps): string =>\n    props.theme.redirectPageCounterTextColor};\n`\n\nconst StyledLogo = styled.img`\n  margin: 90px auto 45px;\n`\n\nconst StyledMainImg = styled.img`\n  margin: 45px auto 0px;\n`\n\nconst RedirectPage: FC<RedirectPagePropsTypes> = ({\n  headerText = 'Dziękujemy za przesłanie wniosku! \u000bSzukamy dla Ciebie idealnej oferty.',\n  backgroundImage,\n  logoImg,\n  mainImg,\n  timeToRedirect = 5,\n  redirectUrl,\n}) => {\n  const [counter, setCounter] = useState(timeToRedirect)\n  const decraseCounter = useCallback((): void => {\n    setTimeout(setTimeout(() => setCounter((counter) => counter - 1), 1000))\n  }, [setCounter])\n\n  useLayoutEffect(() => {\n    if (counter > 0) {\n      decraseCounter()\n      return\n    }\n\n    redirectUrl && window.location.replace(redirectUrl)\n  }, [counter, decraseCounter, redirectUrl])\n\n  return (\n    <PageWrapper backgroundImage={backgroundImage}>\n      <Wrapper>\n        {logoImg && <StyledLogo src={logoImg} />}\n        <StyledHeader>{headerText}</StyledHeader>\n        <RedirectText>\n          Zostaniesz przekierowany za <CounterText>{counter}s</CounterText>\n        </RedirectText>\n        {mainImg && <StyledMainImg src={mainImg} />}\n      </Wrapper>\n    </PageWrapper>\n  )\n}\n\nexport default RedirectPage\n"],"file":"index.js"}