{"version":3,"sources":["../../src/utils.ts"],"names":["React","FormContext","createContext","setFormValuesToCache","values","formId","window","sessionStorage","setItem","JSON","stringify","getFormValuesFromCache","id","parse","getItem","resetFormValueCache","encodeData","data","Object","keys","map","key","encodeURIComponent","join","sendDataToAwsSQS","queueUrl","fetch","method","headers","body","Action","MessageBody","handleSendDataToApi","apiUrl","agreements","rest","mappedAgreements","reduce","acc","push","Accept","formName"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA+B,OAA/B;AAGA,OAAO,MAAMC,WAQX,gBAAGD,KAAK,CAACE,aAAN,CAAoB,EAApB,CARE;AAUP,OAAO,MAAMC,oBAAoB,GAAG,CAClCC,MADkC,EAElCC,MAFkC,KAGzB;AACTA,EAAAA,MAAM,IACJC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,QAAOH,MAAO,EAA7C,EAAgDI,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAhD,CADF;AAED,CANM;AAQP,OAAO,MAAMO,sBAAsB,GACjCC,EADoC,IAGnCA,EAAE,IAAIH,IAAI,CAACI,KAAL,CAAWP,MAAM,CAACC,cAAP,CAAsBO,OAAtB,CAA+B,QAAOF,EAAG,EAAzC,CAAX,CAAP,IACA,EAJK;AAMP,OAAO,MAAMG,mBAAmB,GAAIH,EAAD,IACjCN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,QAAOI,EAAG,EAAzC,EAA4C,IAA5C,CADK;AAGP,OAAO,MAAMI,UAAwD,GACnEC,IADsE,IAEnE;AACH,SAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACJG,GADI,CAEFC,GAAD,IACEC,kBAAkB,CAACD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCC,kBAAkB,CAACL,IAAI,CAACI,GAAD,CAAL,CAHjD,EAKJE,IALI,CAKC,GALD,CAAP;AAMD,CATM;AAWP,OAAO,MAAMC,gBAII,GAAG,CAACpB,MAAD,EAASqB,QAAT,KAClBC,KAAK,CACHD,QAAQ,IACN,wEAFC,EAGH;AACEE,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFX;AAKEC,EAAAA,IAAI,EAAEb,UAAU,CAAC;AACfc,IAAAA,MAAM,EAAE,aADO;AAEfC,IAAAA,WAAW,EAAEtB,IAAI,CAACC,SAAL,CAAeN,MAAf;AAFE,GAAD;AALlB,CAHG,CALA;AAoBP,OAAO,MAAM4B,mBAKI,GAAG,CAAC5B,MAAD,EAAS6B,MAAT,EAAiB5B,MAAjB,KAA4B;AAC9C,QAAM;AAAE6B,IAAAA;AAAF,MAA0B9B,MAAhC;AAAA,QAAuB+B,IAAvB,4BAAgC/B,MAAhC,kBAD8C,CAE9C;;;AACA,QAAMgC,gBAAgB,GAAGlB,MAAM,CAACC,IAAP,CAAYe,UAAZ,EAAwBG,MAAxB,CAAoC,CAACC,GAAD,EAAMjB,GAAN,KAAc;AACzE,QAAIA,GAAG,KAAK,WAAR,IAAuBa,UAAU,CAACb,GAAD,CAArC,EAA4C;AAC1CiB,MAAAA,GAAG,CAACC,IAAJ,CAASlB,GAAT;AACD;;AACD,WAAOiB,GAAP;AACD,GALwB,EAKtB,EALsB,CAAzB;AAOA,SAAOZ,KAAK,CAAE,GAAEO,MAAO,UAAS5B,MAAO,OAA3B,EAAmC;AAC7CsB,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAE;AACPY,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFoC;AAM7CX,IAAAA,IAAI,EAAEpB,IAAI,CAACC,SAAL,CAAe;AACnB+B,MAAAA,QAAQ,EAAEpC,MADS;AAEnBY,MAAAA,IAAI,EAAEkB,IAFa;AAGnBD,MAAAA,UAAU,EAAEE;AAHO,KAAf;AANuC,GAAnC,CAAZ;AAYD,CA3BM","sourcesContent":["import React, { Context } from 'react'\nimport { FormValuesType } from './types'\n\nexport const FormContext: Context<{\n  id?: string\n  stepsLength?: number\n  currentStep?: number\n  stepsTitleList?: string[]\n  nextStep?: Function\n  prevStep?: Function\n  apiUrl?: string\n}> = React.createContext({})\n\nexport const setFormValuesToCache = (\n  values: { [key: string]: string | boolean | undefined },\n  formId?: string\n): void => {\n  formId &&\n    window.sessionStorage.setItem(`form-${formId}`, JSON.stringify(values))\n}\n\nexport const getFormValuesFromCache = (\n  id?: string\n): { [key: string]: string | boolean } =>\n  (id && JSON.parse(window.sessionStorage.getItem(`form-${id}`) as string)) ||\n  {}\n\nexport const resetFormValueCache = (id: string): void =>\n  window.sessionStorage.setItem(`form-${id}`, '{}')\n\nexport const encodeData: (data: FormValuesType) => string | undefined = (\n  data\n) => {\n  return Object.keys(data)\n    .map(\n      (key) =>\n        encodeURIComponent(key) + '=' + encodeURIComponent(data[key] as string)\n    )\n    .join('&')\n}\n\nexport const sendDataToAwsSQS: (\n  values: FormValuesType,\n  queueUrl?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => Promise<any> = (values, queueUrl) =>\n  fetch(\n    queueUrl ||\n      'https://sqs.eu-central-1.amazonaws.com/031738021372/finelf-users-queue',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: encodeData({\n        Action: 'SendMessage',\n        MessageBody: JSON.stringify(values),\n      }),\n    }\n  )\n\nexport const handleSendDataToApi: (\n  values: FormValuesType,\n  apiUrl: string,\n  formId: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => Promise<any> = (values, apiUrl, formId) => {\n  const { agreements, ...rest } = values\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mappedAgreements = Object.keys(agreements).reduce<any>((acc, key) => {\n    if (key !== 'selectAll' && agreements[key]) {\n      acc.push(key)\n    }\n    return acc\n  }, [])\n\n  return fetch(`${apiUrl}/forms/${formId}/data`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      formName: formId,\n      data: rest,\n      agreements: mappedAgreements,\n    }),\n  })\n}\n"],"file":"utils.js"}