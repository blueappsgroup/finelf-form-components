{"version":3,"sources":["../../../src/consts/theme.tsx"],"names":["colors","mainGrey","ligthGrey","grey","mediumGrey","darkGrey","errorRed","lightRed","mediumRed","white","black","theme","formBgColor","inputHeight","inputTextColor","inputPlaceHolderColor","inputErrorColor","inputErrorTextAlign","inputErrorFontSize","inputErrorBottom","inputBorderColor","inputBorderWidth","inputBorderStyle","inputBorderRadius","inputBgColor","inputBoxShadow","inputFontSize","inputFontWeight","inputFontStyle","inputLineHeight","inputPadding","styledRowFlexWrap","styledRowLabelPadding","styledSelectHeight","styledSelectTextColor","styledSelectPlaceHolderColor","styledSelectErrorColor","styledSelectErrorTextAlign","styledSelectBorderColor","styledSelectBorderWidth","styledSelectBorderStyle","styledSelectBorderRadius","styledSelectBgColor","styledSelectBoxShadow","styledSelectFontSize","styledSelectFontWeight","styledSelectFontStyle","styledSelectLineHeight","styledSelectVerticalPadding","styledSelectHorizontalPadding","styledSpanFontSize","styledSpanFontWeight","styledRowMarginBottom","checkboxLabelArrowColor","checkboxBgColor","checkboxBorderColor","checkboxBorderErrorColor","checkboxLabelTextColor","checkboxMarkColor","headerTextColor","headerBorderColor","subheaderBorderColor","buttonTextColor","buttonBgColor","buttonBorderColor","successTextColor","stepHeaderActiveColor","stepHeaderInActiveColor","stepHeaderActiveBorderColor","stepHeaderInActiveBorderColor","buttonSecondaryTextColor","buttonSecondaryBgColor","buttonSecondaryBorderColor","redirectPageHeaderTextColor","redirectPageRedirectTextColor","redirectPageCounterTextColor","successStatusTextColor","errorStatusTextColor","sliderHeight","sliderBorderRadius","sliderBgColor","sliderFillBgColor","sliderHandleBgColor","sliderHandleBorderColor","sliderHandleBoxShadow","sliderHandleBorderWidth","sliderHandleBorderStyle","sliderHandleBorderRadius","sliderHandleWidth","sliderHandleHeight","sliderHandleAfterWidth","sliderHandleAfterHeight","sliderHandleAfterBorderRadius","styledInputSuffixBgColor","styledInputSuffixTextColor","styledInputSuffixFontSize","styledInputSuffixFontWeight","styledInputSuffixBorderRadius","styledInputSuffixVerticalPadding","styledInputSuffixHorizontalPadding","styledInputPrefixPadding","ThemeProvider","children","customTheme"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport { ThemeProvider as MainThemeProvider } from 'styled-components'\nimport { CustomThemeType } from '../types'\n\nexport const colors = {\n  mainGrey: 'rgba(0, 0, 0, 0.7)',\n  ligthGrey: '#ecebed',\n  grey: '#B9BABD',\n  mediumGrey: '#7C7878',\n  darkGrey: '#0f0f0f',\n  errorRed: '#FF0000',\n  lightRed: '#e2070e',\n  mediumRed: '#f20f0f',\n  white: '#FFF',\n  black: '#000',\n}\n\nexport const theme = {\n  formBgColor: colors.white,\n  inputHeight: '63px',\n  inputTextColor: colors.mainGrey,\n  inputPlaceHolderColor: colors.mainGrey,\n  inputErrorColor: colors.errorRed,\n  inputErrorTextAlign: 'left',\n  inputErrorFontSize: '10px',\n  inputErrorBottom: '-12px',\n  inputBorderColor: colors.ligthGrey,\n  inputBorderWidth: '1px',\n  inputBorderStyle: 'solid',\n  inputBorderRadius: '6px',\n  inputBgColor: colors.white,\n  inputBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  inputFontSize: '14px',\n  inputFontWeight: '500',\n  inputFontStyle: 'normal',\n  inputLineHeight: '24px',\n  inputPadding: '0 20px',\n  styledRowFlexWrap: 'no-wrap',\n  styledRowLabelPadding: '10px',\n  styledSelectHeight: '63px',\n  styledSelectTextColor: colors.mainGrey,\n  styledSelectPlaceHolderColor: colors.mainGrey,\n  styledSelectErrorColor: colors.errorRed,\n  styledSelectErrorTextAlign: 'left',\n  styledSelectBorderColor: colors.ligthGrey,\n  styledSelectBorderWidth: '1px',\n  styledSelectBorderStyle: 'solid',\n  styledSelectBorderRadius: '6px',\n  styledSelectBgColor: colors.white,\n  styledSelectBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  styledSelectFontSize: '14px',\n  styledSelectFontWeight: '500',\n  styledSelectFontStyle: 'normal',\n  styledSelectLineHeight: '24px',\n  styledSelectVerticalPadding: '0px',\n  styledSelectHorizontalPadding: '20px',\n  styledSpanFontSize: '16px',\n  styledSpanFontWeight: 'bold',\n  styledRowMarginBottom: '12px',\n  checkboxLabelArrowColor: colors.mediumGrey,\n  checkboxBgColor: colors.white,\n  checkboxBorderColor: colors.black,\n  checkboxBorderErrorColor: colors.errorRed,\n  checkboxLabelTextColor: colors.darkGrey,\n  checkboxMarkColor: colors.lightRed,\n  headerTextColor: colors.black,\n  headerBorderColor: colors.errorRed,\n  subheaderBorderColor: colors.black,\n  buttonTextColor: colors.white,\n  buttonBgColor: colors.mediumRed,\n  buttonBorderColor: colors.mediumRed,\n  successTextColor: colors.black,\n  stepHeaderActiveColor: colors.mediumRed,\n  stepHeaderInActiveColor: colors.grey,\n  stepHeaderActiveBorderColor: colors.mediumRed,\n  stepHeaderInActiveBorderColor: colors.grey,\n  buttonSecondaryTextColor: colors.mediumRed,\n  buttonSecondaryBgColor: colors.white,\n  buttonSecondaryBorderColor: colors.mediumRed,\n  redirectPageHeaderTextColor: colors.black,\n  redirectPageRedirectTextColor: colors.black,\n  redirectPageCounterTextColor: colors.mediumRed,\n  successStatusTextColor: colors.black,\n  errorStatusTextColor: colors.errorRed,\n  sliderHeight: '12px',\n  sliderBorderRadius: '10px',\n  sliderBgColor: colors.mainGrey,\n  sliderFillBgColor: colors.mediumRed,\n  sliderHandleBgColor: colors.white,\n  sliderHandleBorderColor: colors.mainGrey,\n  sliderHandleBoxShadow: '0px 7px 64px rgba(194, 186, 186, 0.07)',\n  sliderHandleBorderWidth: '1px',\n  sliderHandleBorderStyle: 'solid',\n  sliderHandleBorderRadius: '50%',\n  sliderHandleWidth: '24px',\n  sliderHandleHeight: '24px',\n  sliderHandleAfterWidth: '7px',\n  sliderHandleAfterHeight: '7px',\n  sliderHandleAfterBorderRadius: '50%',\n  styledInputSuffixBgColor: colors.mediumRed,\n  styledInputSuffixTextColor: colors.white,\n  styledInputSuffixFontSize: '14px',\n  styledInputSuffixFontWeight: 'bold',\n  styledInputSuffixBorderRadius: '0 5px 5px 0',\n  styledInputSuffixVerticalPadding: '0px',\n  styledInputSuffixHorizontalPadding: '15px',\n  styledInputPrefixPadding: '0 15px',\n}\n\ntype ThemeProviderPops = {\n  children: ReactElement | ReactElement[]\n  customTheme?: CustomThemeType\n}\n\nexport const ThemeProvider: FC<ThemeProviderPops> = ({\n  children,\n  customTheme,\n}) => (\n  <MainThemeProvider theme={{ ...theme, ...customTheme }}>\n    {children}\n  </MainThemeProvider>\n)\n"],"file":"theme.js"}