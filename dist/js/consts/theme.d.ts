import { FC, ReactElement } from 'react';
import { CustomThemeType } from '../types';
export declare const colors: {
    mainGrey: string;
    ligthGrey: string;
    grey: string;
    mediumGrey: string;
    darkGrey: string;
    errorRed: string;
    lightRed: string;
    mediumRed: string;
    white: string;
    black: string;
};
export declare const theme: {
    formMaxWidth: string;
    formBgColor: string;
    inputHeight: string;
    inputTextColor: string;
    inputPlaceHolderColor: string;
    inputErrorColor: string;
    inputErrorTextAlign: string;
    inputErrorFontSize: string;
    inputErrorBottom: string;
    inputBorderColor: string;
    inputBorderWidth: string;
    inputBorderStyle: string;
    inputBorderRadius: string;
    inputBgColor: string;
    inputBoxShadow: string;
    inputFontSize: string;
    inputFontWeight: string;
    inputFontStyle: string;
    inputLineHeight: string;
    inputTextAlign: string;
    inputPadding: string;
    labelFontSize: string;
    styledRowFlexWrap: string;
    styledRowLabelPadding: string;
    styledRowLabelFontColor: string;
    styledSelectHeight: string;
    styledSelectTextColor: string;
    styledSelectPlaceHolderColor: string;
    styledSelectErrorColor: string;
    styledSelectErrorTextAlign: string;
    styledSelectBorderColor: string;
    styledSelectBorderWidth: string;
    styledSelectBorderStyle: string;
    styledSelectBorderRadius: string;
    styledSelectBgColor: string;
    styledSelectBoxShadow: string;
    styledSelectFontSize: string;
    styledSelectFontWeight: string;
    styledSelectFontStyle: string;
    styledSelectLineHeight: string;
    styledSelectVerticalPadding: string;
    styledSelectHorizontalPadding: string;
    styledSpanFontSize: string;
    styledSpanFontColor: string;
    styledSpanFontWeight: string;
    styledRowMarginBottom: string;
    checkboxLabelArrowColor: string;
    checkboxBgColor: string;
    checkboxBorderColor: string;
    checkboxBorderWidth: string;
    checkboxLabelFontSize: string;
    checkboxLinkColor: string;
    checkboxBorderErrorColor: string;
    checkboxLabelTextColor: string;
    checkboxMarkColor: string;
    headerTextColor: string;
    headerBorderColor: string;
    headerFontSize: string;
    headerMargin: string;
    subheaderBorderColor: string;
    subheaderFontSize: string;
    subheaderMargin: string;
    buttonTextColor: string;
    buttonBgColor: string;
    buttonBorderColor: string;
    successTextColor: string;
    stepHeaderActiveColor: string;
    stepHeaderInActiveColor: string;
    stepHeaderActiveBorderColor: string;
    stepHeaderInActiveBorderColor: string;
    buttonSecondaryTextColor: string;
    buttonSecondaryBgColor: string;
    buttonSecondaryBorderColor: string;
    redirectPageHeaderTextColor: string;
    redirectPageRedirectTextColor: string;
    redirectPageCounterTextColor: string;
    successStatusTextColor: string;
    errorStatusTextColor: string;
    sliderHeight: string;
    sliderInputHeight: string;
    sliderInputTextAlign: string;
    sliderBorderRadius: string;
    sliderBgColor: string;
    sliderFillBgColor: string;
    sliderHandleBgColor: string;
    sliderHandleBorderColor: string;
    sliderHandleBoxShadow: string;
    sliderHandleBorderWidth: string;
    sliderHandleBorderStyle: string;
    sliderHandleBorderRadius: string;
    sliderHandleWidth: string;
    sliderHandleHeight: string;
    sliderHandleAfterWidth: string;
    sliderHandleAfterHeight: string;
    sliderHandleAfterBorderRadius: string;
    styledInputSuffixBgColor: string;
    styledInputSuffixTextColor: string;
    styledInputSuffixFontSize: string;
    styledInputSuffixFontWeight: string;
    styledInputSuffixBorderRadius: string;
    styledInputPrefixPadding: string;
    marginBetweenRowChildren: string;
};
declare type ThemeProviderPops = {
    children: ReactElement | ReactElement[];
    customTheme?: CustomThemeType;
};
export declare const ThemeProvider: FC<ThemeProviderPops>;
export {};
