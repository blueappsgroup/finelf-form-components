{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["StyledErrorText","StyledError","Agreemnets","linksForReplace","name","requiredErorText","hasReadMore","FormContext","id","apiUrl","setInitialValues","initialValues","setFormStatus","errors","setErrors","agreements","setAgreements","error","setError","replaceLinkInAgreements","replacedAgreements","map","item","newContent","content","Object","keys","forEach","key","regxp","RegExp","replace","fetchAgreements","fetch","response","json","data","hasError","dataForInitialize","reduce","acc","values","required","push","formStatuses","agrrementsError","console","log","length","hasRequired","some","agreement","Array","isArray","groupType","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAMA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,eAAe,GAAG,+BAAOC,iBAAP,CAAH,4FAArB;;AAIA,IAAMC,UAAyC,GAAG,SAA5CA,UAA4C,OAK5C;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,uBAHJC,IAGI;AAAA,MAHJA,IAGI,0BAHG,YAGH;AAAA,mCAFJC,gBAEI;AAAA,MAFJA,gBAEI,sCAFe,wFAEf;AAAA,MADJC,WACI,QADJA,WACI;;AAAA,oBAOA,uBAAWC,kBAAX,CAPA;AAAA,MAEFC,EAFE,eAEFA,EAFE;AAAA,MAGFC,MAHE,eAGFA,MAHE;AAAA,MAIFC,gBAJE,eAIFA,gBAJE;AAAA,MAKFC,aALE,eAKFA,aALE;AAAA,MAMFC,aANE,eAMFA,aANE;;AAAA,0BAQ0B,+BAR1B;AAAA,MAQIC,MARJ,qBAQIA,MARJ;AAAA,MAQYC,SARZ,qBAQYA,SARZ;;AAAA,kBASgC,qBAA0B,EAA1B,CAThC;AAAA;AAAA,MASGC,UATH;AAAA,MASeC,aATf;;AAAA,mBAUsB,qBAAkB,KAAlB,CAVtB;AAAA;AAAA,MAUGC,KAVH;AAAA,MAUUC,QAVV;;AAWJ,MAAMC,uBAAuB,GAAG,wBAC9B,UAACJ,UAAD,EAAkD;AAChD,QAAMK,kBAAkB,GAAGL,UAAU,CAACM,GAAX,CAAe,UAACC,IAAD,EAAU;AAClD,UAAIC,UAAU,GAAGD,IAAI,CAACE,OAAtB;;AACA,UAAIrB,eAAJ,EAAqB;AACnBsB,QAAAA,MAAM,CAACC,IAAP,CAAYvB,eAAZ,EAA6BwB,OAA7B,CAAqC,UAACC,GAAD,EAAS;AAC5C,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,GAAX,EAAgB,GAAhB,CAAd;AACAL,UAAAA,UAAU,GAAGA,UAAU,CAACQ,OAAX,CAAmBF,KAAnB,EAA0B1B,eAAe,CAACyB,GAAD,CAAzC,CAAb;AAEA,iBAAOL,UAAP;AACD,SALD;AAMD;;AAED,6CAAYD,IAAZ;AAAkBE,QAAAA,OAAO,EAAED;AAA3B;AACD,KAZ0B,CAA3B;AAcA,WAAOH,kBAAP;AACD,GAjB6B,EAkB9B,CAACjB,eAAD,CAlB8B,CAAhC,CAXI,CA+BJ;;AACA,MAAM6B,eAAe,GAAG,8FAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAETC,KAAK,WAAIxB,MAAJ,oBAAoBD,EAApB,iBAFI;;AAAA;AAE1B0B,YAAAA,QAF0B;AAAA;AAAA,mBAGbA,QAAQ,CAACC,IAAT,EAHa;;AAAA;AAG1BC,YAAAA,IAH0B;AAK5BC,YAAAA,QAL4B,GAKjB,KALiB;AAM1BC,YAAAA,iBAN0B,GAMNF,IAAI,CAACG,MAAL,EACxB;AACA,sBAACC,GAAD,EAAWlB,IAAX,EAAmC;AACjCkB,cAAAA,GAAG,CAACC,MAAJ,CAAWnB,IAAI,CAACd,EAAhB,IAAsB,KAAtB;;AACA,kBAAIc,IAAI,CAACoB,QAAT,EAAmB;AACjBF,gBAAAA,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkB,UAAlB;;AACA,oBACE,CAACN,QAAD,KACC,CAAC1B,aAAD,IACC,CAACA,aAAa,CAACP,IAAD,CADf,IAEC,CAACO,aAAa,CAACP,IAAD,CAAb,CAAoBkB,IAAI,CAACd,EAAzB,CAHH,CADF,EAKE;AACA6B,kBAAAA,QAAQ,GAAG,IAAX;AACD;AACF,eAVD,MAUO;AACLG,gBAAAA,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkB,IAAlB;AACD;;AACD,qBAAOH,GAAP;AACD,aAlBuB,EAmBxB;AAAEC,cAAAA,MAAM,EAAE,EAAV;AAAcC,cAAAA,QAAQ,EAAE;AAAxB,aAnBwB,CANM;AA2BhC1B,YAAAA,aAAa,CAAEb,eAAe,IAAIgB,uBAAuB,CAACiB,IAAD,CAA3C,IAAsDA,IAAvD,CAAb;AACA1B,YAAAA,gBAAgB,IACdA,gBAAgB,mCAAIN,IAAJ,EAAWkC,iBAAiB,CAACG,MAA7B,GAAwC9B,aAAxC,EADlB;;AAEA,gBAAI0B,QAAJ,EAAc;AACZvB,cAAAA,SAAS,mCAAIV,IAAJ,EAAWkC,iBAAiB,CAACI,QAA7B,GAA0C7B,MAA1C,EAAT;AACD;;AAhC+B;AAAA;;AAAA;AAAA;AAAA;AAkChCD,YAAAA,aAAa,IAAIA,aAAa,CAACgC,mBAAaC,eAAd,CAA9B;AACAC,YAAAA,OAAO,CAACC,GAAR;;AAnCgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,IAqCrB,CACDtC,MADC,EAEDI,MAFC,EAGDL,EAHC,EAIDG,aAJC,EAKDR,eALC,EAMDC,IANC,EAODe,uBAPC,EAQDL,SARC,EASDF,aATC,EAUDF,gBAVC,CArCqB,CAAxB;AAkDA,8BAAgB,YAAM;AACpB,QAAIK,UAAU,CAACiC,MAAX,KAAsB,CAA1B,EAA6B;AAC3BhB,MAAAA,eAAe;AAChB;;AAED,QAAIjB,UAAU,CAACiC,MAAX,GAAoB,CAApB,IAAyB,CAAC/B,KAA9B,EAAqC;AACnC,UAAIgC,WAAW,GAAG,KAAlB;AACAlC,MAAAA,UAAU,CAACmC,IAAX,CAAgB,UAACC,SAAD,EAAe;AAC7B,YAAIA,SAAS,CAACT,QAAd,EAAwB;AACtBO,UAAAA,WAAW,GAAG,IAAd;AACA,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OAPD;;AASA,UAAIA,WAAW,KAAKhC,KAApB,EAA2B;AACzBC,QAAAA,QAAQ,CAAC+B,WAAD,CAAR;AACD;AACF;AACF,GApBD,EAoBG,CAAClC,UAAD,EAAaE,KAAb,EAAoBe,eAApB,CApBH;AAsBA,sBACE,4DACGoB,KAAK,CAACC,OAAN,CAActC,UAAd,KAA6BA,UAAU,CAACiC,MAAX,GAAoB,CAAjD,iBACC,yEACE,6BAAC,wBAAD;AAAiB,IAAA,IAAI,EAAE5C;AAAvB,KACGW,UAAU,CAACM,GAAX,CAAe,UAACC,IAAD;AAAA,wBACd,6BAAC,eAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACd,EADZ;AAEE,MAAA,IAAI,YAAKc,IAAI,CAACd,EAAV,CAFN;AAGE,MAAA,WAAW,EAAEc,IAAI,CAACE,OAHpB;AAIE,MAAA,QAAQ,EAAEF,IAAI,CAACoB,QAJjB;AAKE,MAAA,WAAW,EAAEpC;AALf,MADc;AAAA,GAAf,CADH,CADF,EAYGW,KAAK,iBAAI,6BAAC,eAAD,QAAkBZ,gBAAlB,CAZZ,CAFJ,CADF;AAoBD,CAjID;;;AAXEF,EAAAA,e;AACAC,EAAAA,I;AACAkD,EAAAA,S;AACAjD,EAAAA,gB;AACAC,EAAAA,W;;AA0IFJ,UAAU,CAACqD,YAAX,GAA0B;AACxBnD,EAAAA,IAAI,EAAE,YADkB;AAExBkD,EAAAA,SAAS,EAAE;AAFa,CAA1B;eAKepD,U","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { useFormikContext } from 'formik'\n\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\nimport { StyledError } from '../FormInput/base'\nimport { formStatuses } from '../../consts/form'\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n  groupType?: string\n  requiredErorText?: string\n  hasReadMore?: boolean\n}\n\nconst StyledErrorText = styled(StyledError)`\n  position: static;\n`\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n  requiredErorText = '* Zapoznanie się z treścią regulaminu serwisu oraz polityką prywatności jest wymagane.',\n  hasReadMore,\n}) => {\n  const {\n    id,\n    apiUrl,\n    setInitialValues,\n    initialValues,\n    setFormStatus,\n  } = useContext(FormContext)\n  const { errors, setErrors } = useFormikContext()\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const [error, setError] = useState<boolean>(false)\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach((key) => {\n            const regxp = new RegExp(key, 'g')\n            newContent = newContent.replace(regxp, linksForReplace[key])\n\n            return newContent\n          })\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    try {\n      const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n      const data = await response.json()\n\n      let hasError = false\n      const dataForInitialize = data.reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (acc: any, item: AgreementType) => {\n          acc.values[item.id] = false\n          if (item.required) {\n            acc.required.push('required')\n            if (\n              !hasError &&\n              (!initialValues ||\n                !initialValues[name] ||\n                !initialValues[name][item.id])\n            ) {\n              hasError = true\n            }\n          } else {\n            acc.required.push(null)\n          }\n          return acc\n        },\n        { values: {}, required: [] }\n      )\n      setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n      setInitialValues &&\n        setInitialValues({ [name]: dataForInitialize.values, ...initialValues })\n      if (hasError) {\n        setErrors({ [name]: dataForInitialize.required, ...errors })\n      }\n    } catch (e) {\n      setFormStatus && setFormStatus(formStatuses.agrrementsError)\n      console.log(e)\n    }\n  }, [\n    apiUrl,\n    errors,\n    id,\n    initialValues,\n    linksForReplace,\n    name,\n    replaceLinkInAgreements,\n    setErrors,\n    setFormStatus,\n    setInitialValues,\n  ])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n\n    if (agreements.length > 0 && !error) {\n      let hasRequired = false\n      agreements.some((agreement) => {\n        if (agreement.required) {\n          hasRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (hasRequired !== error) {\n        setError(hasRequired)\n      }\n    }\n  }, [agreements, error, fetchAgreements])\n\n  return (\n    <>\n      {Array.isArray(agreements) && agreements.length > 0 && (\n        <>\n          <CheckboxesGroup name={name}>\n            {agreements.map((item) => (\n              <CheckboxField\n                key={item.id}\n                name={`${item.id}`}\n                HTMLcontent={item.content}\n                required={item.required}\n                hasReadMore={hasReadMore}\n              />\n            ))}\n          </CheckboxesGroup>\n          {error && <StyledErrorText>{requiredErorText}</StyledErrorText>}\n        </>\n      )}\n    </>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n  groupType: 'checkboxGroup',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}