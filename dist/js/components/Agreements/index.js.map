{"version":3,"sources":["../../../../src/components/Agreements/index.tsx"],"names":["StyledErrorText","StyledError","Agreemnets","linksForReplace","name","requiredErorText","hasReadMore","FormContext","id","apiUrl","agreements","setAgreements","error","setError","replaceLinkInAgreements","replacedAgreements","map","item","newContent","content","Object","keys","forEach","key","regxp","RegExp","replace","fetchAgreements","fetch","response","json","data","console","log","length","hasRequired","some","agreement","required","Array","isArray","groupType","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport CheckboxesGroup from '../CheckboxesGroup'\nimport { CheckboxField } from '../'\nimport { FormContext } from '../../utils'\nimport { StyledError } from '../FormInput/base'\ntype AgreementType = {\n  id: string\n  content: string\n  required?: boolean\n}\n\ntype AgreementsPropTypes = {\n  linksForReplace?: { [key: string]: string }\n  name?: string\n  groupType?: string\n  requiredErorText?: string\n  hasReadMore?: boolean\n}\n\nconst StyledErrorText = styled(StyledError)`\n  position: static;\n`\n\nconst Agreemnets: React.FC<AgreementsPropTypes> = ({\n  linksForReplace,\n  name = 'agreements',\n  requiredErorText = '* Zapoznanie się z treścią regulaminu serwisu oraz polityką prywatności jest wymagane.',\n  hasReadMore,\n}) => {\n  const { id, apiUrl } = useContext(FormContext)\n  const [agreements, setAgreements] = useState<AgreementType[]>([])\n  const [error, setError] = useState<boolean>(false)\n  const replaceLinkInAgreements = useCallback(\n    (agreements: AgreementType[]): AgreementType[] => {\n      const replacedAgreements = agreements.map((item) => {\n        let newContent = item.content\n        if (linksForReplace) {\n          Object.keys(linksForReplace).forEach((key) => {\n            const regxp = new RegExp(key, 'g')\n            newContent = newContent.replace(regxp, linksForReplace[key])\n\n            return newContent\n          })\n        }\n\n        return { ...item, content: newContent }\n      })\n\n      return replacedAgreements\n    },\n    [linksForReplace]\n  )\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fetchAgreements = useCallback(async (): Promise<any> => {\n    try {\n      const response = await fetch(`${apiUrl}/forms/${id}/agreements`)\n      const data = await response.json()\n      setAgreements((linksForReplace && replaceLinkInAgreements(data)) || data)\n    } catch (e) {\n      console.log(e)\n    }\n  }, [linksForReplace, apiUrl, replaceLinkInAgreements, id])\n\n  useLayoutEffect(() => {\n    if (agreements.length === 0) {\n      fetchAgreements()\n    }\n\n    if (agreements.length > 0 && !error) {\n      let hasRequired = false\n      agreements.some((agreement) => {\n        if (agreement.required) {\n          hasRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (hasRequired !== error) {\n        setError(hasRequired)\n      }\n    }\n  }, [agreements, error, fetchAgreements])\n\n  return (\n    <>\n      {Array.isArray(agreements) && agreements.length > 0 && (\n        <>\n          <CheckboxesGroup name={name}>\n            {agreements.map((item) => (\n              <CheckboxField\n                key={item.id}\n                name={`${item.id}`}\n                HTMLcontent={item.content}\n                required={item.required}\n                hasReadMore={hasReadMore}\n              />\n            ))}\n          </CheckboxesGroup>\n          {error && <StyledErrorText>{requiredErorText}</StyledErrorText>}\n        </>\n      )}\n    </>\n  )\n}\n\nAgreemnets.defaultProps = {\n  name: 'agreements',\n  groupType: 'checkboxGroup',\n}\n\nexport default Agreemnets\n"],"file":"index.js"}