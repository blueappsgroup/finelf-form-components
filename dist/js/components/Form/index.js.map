{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["StyledForm","Form","props","theme","formMaxWidth","formBgColor","fontFamily","formPaddingMobile","formBoxShadow","device","tablet","formPadding","FormWrapper","children","onSubmit","customTheme","id","stepsLength","stepsTitles","hasRedirect","redirectUrl","timeToRedirect","redirectHeaderText","logoImg","redirectMainImg","redirectBgImg","sendDataToApi","apiUrl","transactionName","propertyNamesFromUrl","dataWithUserAgent","trasationIdValue","URLSearchParams","window","location","search","get","intialValuesFromUrl","length","redirectUrlPath","setRedirectUrlPath","trasaction_id","initialValues","setInitialValues","currentStep","setCurrentStep","fieldsForSkip","setFieldsForSkip","errorFromApi","setErrorFromApi","shouldRedirect","addFieldForSkip","key","handleSubmit","values","response","json","urlFromApi","statusFromApi","status","resetForm","setStatus","formStatuses","submited","console","log","error","handleReset","prevStep","nextStep","stepsTitleList"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useMemo, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled from 'styled-components'\n\nimport { ThemeProvider } from '../../consts/theme'\nimport { device } from '../../consts/sizes'\nimport { FormProps, FormValuesType } from '../../types'\nimport RedirectPage from '../RedirectPage'\nimport TransactionId from '../TransactionId'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n  handleSendDataToApi,\n  getFieldsValuesFromUrl,\n} from '../../utils'\nimport { formStatuses } from '../../consts/form'\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: ${(props): string => props.theme.formMaxWidth};\n  justify-self: center;\n  margin: 0 10px;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: ${(props): string => props.theme.fontFamily};\n  padding: ${(props): string => props.theme.formPaddingMobile};\n  border-radius: 6px;\n  box-shadow: ${(props): string => props.theme.formBoxShadow};\n\n  @media ${device.tablet} {\n    padding: ${(props): string => props.theme.formPadding};\n    margin: 0 auto;\n  }\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n  stepsLength,\n  stepsTitles,\n  hasRedirect,\n  redirectUrl,\n  timeToRedirect,\n  redirectHeaderText,\n  logoImg,\n  redirectMainImg,\n  redirectBgImg,\n  sendDataToApi,\n  apiUrl,\n  transactionName,\n  propertyNamesFromUrl,\n  dataWithUserAgent,\n}) => {\n  const trasationIdValue =\n    transactionName &&\n    new URLSearchParams(window.location.search).get(transactionName)\n  const intialValuesFromUrl = useMemo(\n    () =>\n      (propertyNamesFromUrl &&\n        propertyNamesFromUrl.length > 0 &&\n        getFieldsValuesFromUrl(propertyNamesFromUrl)) ||\n      {},\n    [propertyNamesFromUrl]\n  )\n  const [redirectUrlPath, setRedirectUrlPath] = useState(redirectUrl)\n  const [initialValues, setInitialValues] = useState({\n    ...intialValuesFromUrl,\n    ...getFormValuesFromCache(id),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    trasaction_id: trasationIdValue,\n  })\n  const [currentStep, setCurrentStep] = useState(0)\n  const [fieldsForSkip, setFieldsForSkip] = useState<string[]>([])\n  const [errorFromApi, setErrorFromApi] = useState<boolean>(false)\n  const shouldRedirect = !errorFromApi && hasRedirect\n  const addFieldForSkip = (key: string): void =>\n    setFieldsForSkip([...fieldsForSkip, key])\n\n  const handleSubmit = async (\n    values: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> => {\n    if (onSubmit) {\n      onSubmit(values, props)\n    }\n\n    try {\n      if (sendDataToApi && apiUrl) {\n        const response = await handleSendDataToApi(\n          values,\n          apiUrl,\n          id,\n          fieldsForSkip,\n          dataWithUserAgent\n        )\n        const {\n          redirectUrl: urlFromApi,\n          status: statusFromApi,\n        } = await response.json()\n\n        if (statusFromApi === false) {\n          setErrorFromApi(true)\n          return\n        }\n\n        urlFromApi && setRedirectUrlPath(urlFromApi)\n      }\n\n      props.resetForm()\n      props.setStatus(formStatuses.submited)\n    } catch (e) {\n      console.log(e)\n      props.setStatus(formStatuses.error)\n    }\n  }\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setInitialValues({} as any)\n  }\n\n  const prevStep: Function = () => setCurrentStep(currentStep - 1)\n\n  const nextStep: Function = () => setCurrentStep(currentStep + 1)\n\n  return (\n    <FormContext.Provider\n      value={{\n        id,\n        apiUrl,\n        stepsLength,\n        currentStep,\n        stepsTitleList: stepsTitles,\n        nextStep,\n        prevStep,\n        fieldsForSkip,\n        addFieldForSkip,\n        errorFromApi,\n      }}\n    >\n      <ThemeProvider customTheme={{ ...customTheme }}>\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n        >\n          {(props): ReactElement =>\n            (shouldRedirect && props.status === formStatuses.submited && (\n              <RedirectPage\n                redirectUrl={redirectUrlPath}\n                backgroundImage={redirectBgImg}\n                logoImg={logoImg}\n                headerText={redirectHeaderText}\n                timeToRedirect={timeToRedirect}\n                mainImg={redirectMainImg}\n              />\n            )) || (\n              <StyledForm id={id}>\n                <TransactionId />\n                {children}\n              </StyledForm>\n            )\n          }\n        </Formik>\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}