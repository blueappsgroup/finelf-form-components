{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":["StyledForm","Form","props","theme","formMaxWidth","formBgColor","fontFamily","formBoxShadow","FormWrapper","children","onSubmit","customTheme","id","stepsLength","stepsTitles","hasRedirect","redirectUrl","timeToRedirect","redirectHeaderText","logoImg","redirectMainImg","redirectBgImg","sendDataToApi","apiUrl","transactionName","propertyNamesFromUrl","dataWithUserAgent","sumitButtonText","trasationIdValue","URLSearchParams","window","location","search","get","intialValuesFromUrl","length","redirectUrlPath","setRedirectUrlPath","trasaction_id","initialValues","setInitialValues","currentStep","setCurrentStep","fieldsForSkip","setFieldsForSkip","errorFromApi","setErrorFromApi","formStatus","setFormStatus","shouldRedirect","showForm","formStatuses","submited","addFieldForSkip","key","handleReset","handleSubmit","_","valuesForSubmit","response","json","urlFromApi","statusFromApi","status","error","prevStep","nextStep","stepsTitleList","isValid","agrrementsError"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useMemo, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport styled from 'styled-components'\n\nimport { ThemeProvider } from '../../consts/theme'\nimport { FormProps, FormValuesType } from '../../types'\nimport RedirectPage from '../RedirectPage'\nimport {\n  FormContext,\n  getFormValuesFromCache,\n  resetFormValueCache,\n  handleSendDataToApi,\n  getFieldsValuesFromUrl,\n} from '../../utils'\nimport { formStatuses } from '../../consts/form'\nimport Button from '../Button'\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: ${(props): string => props.theme.formMaxWidth};\n  justify-self: center;\n  background: ${(props): string => props.theme.formBgColor};\n  font-family: ${(props): string => props.theme.fontFamily};\n  border-radius: 6px;\n  box-shadow: ${(props): string => props.theme.formBoxShadow};\n`\n\nconst FormWrapper: FC<FormProps> = ({\n  children,\n  onSubmit,\n  customTheme,\n  id,\n  stepsLength,\n  stepsTitles,\n  hasRedirect,\n  redirectUrl,\n  timeToRedirect,\n  redirectHeaderText,\n  logoImg,\n  redirectMainImg,\n  redirectBgImg,\n  sendDataToApi,\n  apiUrl,\n  transactionName,\n  propertyNamesFromUrl,\n  dataWithUserAgent,\n  sumitButtonText = 'WyÅ›lij',\n}) => {\n  const trasationIdValue =\n    transactionName &&\n    new URLSearchParams(window.location.search).get(transactionName)\n  const intialValuesFromUrl = useMemo(\n    () =>\n      (propertyNamesFromUrl &&\n        propertyNamesFromUrl.length > 0 &&\n        getFieldsValuesFromUrl(propertyNamesFromUrl)) ||\n      {},\n    [propertyNamesFromUrl]\n  )\n  const [redirectUrlPath, setRedirectUrlPath] = useState(redirectUrl)\n  const [initialValues, setInitialValues] = useState({\n    ...intialValuesFromUrl,\n    ...getFormValuesFromCache(id),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    trasaction_id: trasationIdValue,\n  })\n  const [currentStep, setCurrentStep] = useState(0)\n  const [fieldsForSkip, setFieldsForSkip] = useState<string[]>([])\n  const [errorFromApi, setErrorFromApi] = useState<boolean>(false)\n  const [formStatus, setFormStatus] = useState<string>()\n  const shouldRedirect = !errorFromApi && hasRedirect\n  const showForm = formStatus !== formStatuses.submited || !shouldRedirect\n  const addFieldForSkip = (key: string): void =>\n    setFieldsForSkip([...fieldsForSkip, key])\n\n  const handleReset = (): void => {\n    resetFormValueCache(id)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setInitialValues({\n      ...intialValuesFromUrl,\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      trasaction_id: trasationIdValue,\n    })\n  }\n  const handleSubmit = async (\n    _: FormValuesType,\n    props: {\n      resetForm: () => void\n      setStatus: (status: string) => void\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> => {\n    const valuesForSubmit = { ...initialValues, ...getFormValuesFromCache(id) }\n    if (onSubmit) {\n      onSubmit(valuesForSubmit, props)\n    }\n\n    try {\n      if (sendDataToApi && apiUrl) {\n        const response = await handleSendDataToApi(\n          valuesForSubmit,\n          apiUrl,\n          id,\n          fieldsForSkip,\n          dataWithUserAgent\n        )\n        const {\n          redirectUrl: urlFromApi,\n          status: statusFromApi,\n        } = await response.json()\n\n        if (statusFromApi === false) {\n          setErrorFromApi(true)\n          return\n        }\n\n        urlFromApi && setRedirectUrlPath(urlFromApi)\n      }\n\n      handleReset()\n\n      setFormStatus(formStatuses.submited)\n    } catch (e) {\n      setFormStatus(formStatuses.error)\n    }\n  }\n\n  const prevStep: Function = () => setCurrentStep(currentStep - 1)\n\n  const nextStep: Function = () => setCurrentStep(currentStep + 1)\n\n  return (\n    <FormContext.Provider\n      value={{\n        id,\n        apiUrl,\n        stepsLength,\n        currentStep,\n        stepsTitleList: stepsTitles,\n        nextStep,\n        prevStep,\n        fieldsForSkip,\n        addFieldForSkip,\n        errorFromApi,\n        initialValues,\n        setInitialValues,\n        handleSubmit,\n        formStatus,\n        setFormStatus,\n      }}\n    >\n      <ThemeProvider customTheme={{ ...customTheme }}>\n        {shouldRedirect && formStatus === formStatuses.submited && (\n          <RedirectPage\n            redirectUrl={redirectUrlPath}\n            backgroundImage={redirectBgImg}\n            logoImg={logoImg}\n            headerText={redirectHeaderText}\n            timeToRedirect={timeToRedirect}\n            mainImg={redirectMainImg}\n          />\n        )}\n        {!stepsLength && showForm && (\n          <Formik\n            validateOnMount\n            enableReinitialize\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            render={({ isValid }): ReactElement => (\n              <StyledForm id={id}>\n                {children}\n                {formStatus !== formStatuses.agrrementsError && (\n                  <Button\n                    disabled={!isValid}\n                    text={sumitButtonText}\n                    type=\"submit\"\n                  />\n                )}\n              </StyledForm>\n            )}\n          />\n        )}\n        {stepsLength && showForm && children}\n      </ThemeProvider>\n    </FormContext.Provider>\n  )\n}\n\nexport default FormWrapper\n"],"file":"index.js"}