{"version":3,"sources":["../../../../src/components/CheckboxesGroup/index.tsx"],"names":["CheckboxesGroup","name","children","values","setValues","hasManyCheckboxes","Array","isArray","checkboxesNames","map","item","props","handleOnChange","e","fieldsToUpdate","reduce","acc","target","value","groupType","defaultProps"],"mappings":";;;;;;;;;;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAQA,IAAMA,eAAyC,GAAG,SAA5CA,eAA4C,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,0BAC1C,+BAD0C;AAAA,MAChEC,MADgE,qBAChEA,MADgE;AAAA,MACxDC,SADwD,qBACxDA,SADwD;;AAExE,MAAMC,iBAAiB,GAAGC,KAAK,CAACC,OAAN,CAAcL,QAAd,CAA1B;AACA,MAAMM,eAAyB,GAAG,oBAChC;AAAA,WACEH,iBAAiB,GACbH,QAAQ,IAAIA,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACC,KAAL,CAAWV,IAA1B;AAAA,KAAb,CADC,GAEb,CAACC,QAAQ,CAACS,KAAT,CAAeV,IAAhB,CAHN;AAAA,GADgC,EAKhC,CAACI,iBAAD,EAAoBH,QAApB,CALgC,CAAlC;;AAQA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAA4C;AACjE,QAAMC,cAAc,GAAGN,eAAe,CAACO,MAAhB,CAAuB,UAACC,GAAD,EAAMN,IAAN,EAAe;AAC3DM,MAAAA,GAAG,CAACN,IAAD,CAAH,GAAYG,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,MAAnB,GAA4B,KAA5B,GAAoC,IAAhD;AACA,aAAOF,GAAP;AACD,KAHsB,EAGpB,EAHoB,CAAvB;AAKAZ,IAAAA,SAAS,iCAAOD,MAAP,2BAAwBF,IAAxB,EAA+Ba,cAA/B,GAAT;AACD,GAPD;;AASA,sBACE,6BAAC,kBAAD;AACE,IAAA,IAAI,EAAEb,IADR;AAEE,IAAA,MAAM,EAAE;AAAA,0BACN,yEACE,6BAAC,sBAAD;AACE,QAAA,EAAE,YAAKA,IAAL,eADJ;AAEE,QAAA,IAAI,YAAKA,IAAL,eAFN;AAGE,QAAA,KAAK,EAAC,yBAHR;AAIE,QAAA,QAAQ,EAAEW,cAJZ;AAKE,QAAA,eAAe;AALjB,QADF,EAQGV,QAAQ,IAAI,CAACG,iBAAb,iBACC,6BAAC,sBAAD,eACMH,QAAQ,CAACS,KADf;AAEE,QAAA,IAAI,YAAKV,IAAL,cAAaC,QAAQ,CAACS,KAAT,CAAeV,IAA5B;AAFN,SATJ,EAcGC,QAAQ,IACPG,iBADD,IAECH,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD;AAAA,4BACX,6BAAC,sBAAD,eACMA,IAAI,CAACC,KADX;AAEE,UAAA,GAAG,EAAED,IAAI,CAACC,KAAL,CAAWV,IAFlB;AAGE,UAAA,IAAI,YAAKA,IAAL,cAAaS,IAAI,CAACC,KAAL,CAAWV,IAAxB,CAHN;AAIE,UAAA,EAAE,YAAKA,IAAL,cAAaS,IAAI,CAACC,KAAL,CAAWV,IAAxB;AAJJ,WADW;AAAA,OAAb,CAhBJ,CADM;AAAA;AAFV,IADF;AAgCD,CApDD;;;AALEA,EAAAA,I;AACAC,EAAAA,Q;AACAiB,EAAAA,S;;AAyDFnB,eAAe,CAACoB,YAAhB,GAA+B;AAC7BD,EAAAA,SAAS,EAAE;AADkB,CAA/B;eAIenB,e","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ReactElement, FC, ChangeEvent, useMemo } from 'react'\nimport { FieldArray, useFormikContext } from 'formik'\n\nimport CheckboxField from '../FormInput/CheckboxField'\n\ntype CheckboxesGroupTypes = {\n  name: string\n  children: any\n  groupType?: string\n}\n\nconst CheckboxesGroup: FC<CheckboxesGroupTypes> = ({ name, children }) => {\n  const { values, setValues } = useFormikContext()\n  const hasManyCheckboxes = Array.isArray(children)\n  const checkboxesNames: string[] = useMemo(\n    () =>\n      hasManyCheckboxes\n        ? children && children.map((item: any) => item.props.name)\n        : [children.props.name],\n    [hasManyCheckboxes, children]\n  )\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const fieldsToUpdate = checkboxesNames.reduce((acc, item) => {\n      acc[item] = e.target.value === 'true' ? false : true\n      return acc\n    }, {} as { [key: string]: boolean | undefined })\n\n    setValues({ ...(values as any), [name]: fieldsToUpdate })\n  }\n\n  return (\n    <FieldArray\n      name={name}\n      render={(): ReactElement => (\n        <>\n          <CheckboxField\n            id={`${name}.selectAll`}\n            name={`${name}.selectAll`}\n            label=\"Zaznacz wszystkie zgody\"\n            onChange={handleOnChange}\n            disableCollapse\n          />\n          {children && !hasManyCheckboxes && (\n            <CheckboxField\n              {...children.props}\n              name={`${name}.${children.props.name}`}\n            />\n          )}\n          {children &&\n            hasManyCheckboxes &&\n            children.map((item: any) => (\n              <CheckboxField\n                {...item.props}\n                key={item.props.name}\n                name={`${name}.${item.props.name}`}\n                id={`${name}.${item.props.name}`}\n              />\n            ))}\n        </>\n      )}\n    />\n  )\n}\n\nCheckboxesGroup.defaultProps = {\n  groupType: 'checkboxGroup',\n}\n\nexport default CheckboxesGroup\n"],"file":"index.js"}