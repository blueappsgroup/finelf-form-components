{"version":3,"sources":["../../../../src/components/FormInput/validateHelpers.ts"],"names":["isEmpty","value","isNotValidLength","from","to","length","isNotValidPhoneNumber","test","isNotValidEmail","isNotValidNumberBetween1And10Digits","isNotLetter","isNotNumber","haveSpecialChars","isValidPesel","weights","controlNumber","parseInt","substring","sum","control","filter","weight","index","isNotValidZipCode","isValidNIP","nip","trimedNip","trim","forEach","isValidBankAccountNumber","accountNumber","slice","modifiedAccountNumber","concat","modifiedAccountNumberChunks","isValidIDCard","idNumber","toUpperCase","getLetterValue","letter","letterValues","findIndex","i","controlSum","isNotValidIDCard","isNotValidOption","options","hasOwnProperty"],"mappings":"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","sourcesContent":["export const isEmpty = (value: string): boolean => !value\n\nexport const isNotValidLength = (value: string, from = 2, to = 100): boolean =>\n  value.length < from || value.length > to\n\nexport const isNotValidPhoneNumber = (value: string): boolean =>\n  !/^(45|50|51|53|57|60|66|69|72|73|78|79|88)[0-9]{7}$/.test(value)\n\nexport const isNotValidEmail = (value: string): boolean =>\n  !/[a-zA-Z0-9_.+-]+@[a-zAZ0-9-]+\\.[a-zA-Z0-9-.]+$/.test(value)\n\nexport const isNotValidNumberBetween1And10Digits = (value: string): boolean =>\n  !/^[0-9]{1,10}$/.test(value)\n\nexport const isNotLetter = (value: string): boolean => !/[A-Za-z.]$/.test(value)\n\nexport const isNotNumber = (value: string): boolean => !/[0-9]$/.test(value)\n\nexport const haveSpecialChars = (value: string): boolean =>\n  !/^[A-Za-zżźćńółęąśŻŹĆĄŚĘŁÓŃ0-9 -]*$$/.test(value)\n\nexport const isValidPesel = (value: string): boolean => {\n  if (value.length === 11) {\n    const weights = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3]\n    const controlNumber = parseInt(value.substring(10, 11))\n    let sum = 0\n    let control = 10\n\n    weights.filter(\n      (weight, index) =>\n        (sum += parseInt(value.substring(index, index + 1)) * weight)\n    )\n    sum = sum % 10\n\n    if (sum === 0) {\n      control = 0\n    }\n\n    return control - sum === controlNumber\n  }\n\n  return false\n}\n\nexport const isNotValidZipCode = (value: string): boolean =>\n  !/^[0-9]{2}-[0-9]{3}$/.test(value)\n\nexport const isValidNIP = (nip: string): boolean => {\n  const trimedNip = nip.trim()\n  if (trimedNip.length === 10) {\n    const weights = [6, 5, 7, 2, 3, 4, 5, 6, 7]\n    const controlNumber = parseInt(trimedNip.substring(9, 10))\n    let sum = 0\n\n    weights.forEach(\n      (weight, index) =>\n        (sum += parseInt(trimedNip.substring(index, index + 1)) * weight)\n    )\n\n    return sum % 11 === controlNumber\n  }\n\n  return false\n}\n\nexport const isValidBankAccountNumber = (value: string): boolean => {\n  if (value.length === 26) {\n    const accountNumber = value.slice(2, 27)\n    const modifiedAccountNumber = accountNumber.concat(\n      '2521',\n      value[0],\n      value[1]\n    )\n\n    const modifiedAccountNumberChunks: any[] = [\n      modifiedAccountNumber.slice(0, 10),\n      modifiedAccountNumber.slice(10, 20),\n      modifiedAccountNumber.slice(20, 30),\n    ]\n\n    return (\n      ((((modifiedAccountNumberChunks[0] % 97) +\n        modifiedAccountNumberChunks[1]) %\n        97) +\n        modifiedAccountNumberChunks[2]) %\n        97 ===\n      1\n    )\n  }\n\n  return false\n}\n\nexport const isValidIDCard = (value: string): boolean => {\n  if (value.length === 9) {\n    const idNumber = value.toUpperCase()\n    const getLetterValue = (letter: string): number => {\n      const letterValues = [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        'A',\n        'B',\n        'C',\n        'D',\n        'E',\n        'F',\n        'G',\n        'H',\n        'I',\n        'J',\n        'K',\n        'L',\n        'M',\n        'N',\n        'O',\n        'P',\n        'Q',\n        'R',\n        'S',\n        'T',\n        'U',\n        'V',\n        'W',\n        'X',\n        'Y',\n        'Z',\n      ]\n\n      return letterValues.findIndex((value) => value === letter)\n    }\n\n    for (let i = 0; i < 3; i++) {\n      if (getLetterValue(idNumber[i]) < 10) return false\n    }\n\n    for (let i = 3; i < 9; i++) {\n      if (getLetterValue(idNumber[i]) < 0 || getLetterValue(idNumber[i]) > 9)\n        return false\n    }\n\n    const controlSum =\n      7 * getLetterValue(idNumber[0]) +\n      3 * getLetterValue(idNumber[1]) +\n      1 * getLetterValue(idNumber[2]) +\n      7 * getLetterValue(idNumber[4]) +\n      3 * getLetterValue(idNumber[5]) +\n      1 * getLetterValue(idNumber[6]) +\n      7 * getLetterValue(idNumber[7]) +\n      3 * getLetterValue(idNumber[8])\n\n    return controlSum % 10 === getLetterValue(idNumber[3])\n  }\n\n  return false\n}\n\nexport const isNotValidIDCard = (value: string): boolean =>\n  !/^[A-z]{3}[0-9]{6}$/.test(value)\n\nexport const isNotValidOption = (value: string, options: object): boolean =>\n  !options.hasOwnProperty(value)\n"],"file":"validateHelpers.js"}