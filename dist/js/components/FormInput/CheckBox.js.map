{"version":3,"sources":["../../../../src/components/FormInput/CheckBox.tsx"],"names":["StyledRow","styled","div","props","collapsed","theme","checkboxBorderWidth","checkboxLinkColor","StyledArrow","span","hasCollapse","checkboxLabelArrowColor","CheckboxContainer","Icon","svg","checkboxMarkColor","HiddenCheckbox","input","attrs","type","StyledCheckbox","checked","checkboxCheckedBgColor","checkboxBgColor","error","checkboxBorderErrorColor","checkboxBorderColor","required","StyledText","checkboxLabelFontSize","checkboxLabelTextColor","Checkbox","Wrapper","label","StyledReadMore","StyledContentWrapper","hasReadMore","CheckboxBase","field","form","touched","errors","values","targetRef","setCollapsed","setHasCollapse","FormContext","id","addFieldForSkip","handleOnMouseOut","showMoreCollapsed","setShowMoreCollapsed","htmlContentList","HTMLcontent","split","handleOnChange","e","onChange","onCollapseClick","showMoreCollapseToggle","current","offsetHeight","disableCollapse","skipFieldForApi","name","value","__html","showMoreText","showLessText","childrenBody"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\nimport React, {\n  ReactElement,\n  useState,\n  useLayoutEffect,\n  useRef,\n  useContext,\n  ChangeEvent,\n  useEffect,\n} from 'react'\nimport { FormikErrors } from 'formik'\nimport styled from 'styled-components'\n\nimport { FieldWrapProps } from '../../types'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype StyledProps = {\n  collapsed?: boolean\n  hasCollapse?: boolean\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error?: FormikErrors<any>\n  checked?: boolean\n  theme: { [k: string]: string }\n  required?: boolean\n  hasReadMore?: boolean\n}\n\nconst StyledRow = styled.div<StyledProps>`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 12px;\n  position: relative;\n  height: ${(props: StyledProps): string =>\n    props.collapsed\n      ? 'auto'\n      : 'calc(18px + 2*' + props.theme.checkboxBorderWidth + ')'};\n  overflow: ${(props: StyledProps): string =>\n    props.collapsed ? 'none' : 'hidden'};\n\n  a {\n    color: ${(props: StyledProps): string => props.theme.checkboxLinkColor};\n  }\n`\n\nconst StyledArrow = styled.span<StyledProps>`\n  display: ${(props: StyledProps): string =>\n    props.hasCollapse ? 'flex' : 'none'};\n  position: absolute;\n  right: 5px;\n  top: calc(\n    5px + 2 * ${(props: StyledProps): string => props.theme.checkboxBorderWidth}\n  );\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: ${(props: StyledProps): string =>\n    props.collapsed ? '0px 6px 9px 6px' : '9px 6px 0 6px'};\n  border-color: ${(props: StyledProps): string =>\n    props.collapsed\n      ? `transparent transparent ${props.theme.checkboxLabelArrowColor} transparent`\n      : `${props.theme.checkboxLabelArrowColor} transparent transparent transparent`};\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${(props: StyledProps): string => props.theme.checkboxMarkColor};\n  stroke-width: 2px;\n`\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div<StyledProps>`\n  display: inline-block;\n  position: relative;\n  width: 18px;\n  height: 18px;\n  background: ${(props): string =>\n    props.checked\n      ? props.theme.checkboxCheckedBgColor\n      : props.theme.checkboxBgColor};\n  border-radius: 3px;\n  border: ${(props): string => props.theme.checkboxBorderWidth} solid;\n  border-color: ${(props: StyledProps): string =>\n    props.error\n      ? props.theme.checkboxBorderErrorColor\n      : props.theme.checkboxBorderColor};\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${(props: StyledProps): string =>\n      props.checked ? 'visible' : 'hidden'};\n  }\n\n  &::after {\n    display: ${(props: StyledProps): string =>\n      props.required ? 'block' : 'none'};\n    position: absolute;\n    content: '*';\n    top: 0px;\n    right: -13px;\n    font-size: 15px;\n    color: ${(props: StyledProps): string =>\n      props.theme.checkboxBorderErrorColor};\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst StyledText = styled.span<any>`\n  display: inline;\n  font-style: normal;\n  font-weight: 500;\n  font-size: ${(props: StyledProps): string =>\n    props.theme.checkboxLabelFontSize};\n  line-height: calc(\n    16px + 2 *\n      ${(props: StyledProps): string => props.theme.checkboxBorderWidth}\n  );\n  color: ${(props: StyledProps): string => props.theme.checkboxLabelTextColor};\n  padding-left: 15px;\n  padding-right: 25px;\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Checkbox = ({ checked, error, ...props }: any): ReactElement => (\n  <CheckboxContainer>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked} error={error} required={props.required}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Wrapper = styled.label<any>`\n  display: flex;\n  line-height: 18px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst StyledReadMore = styled<any>(StyledText)`\n  color: ${(props: StyledProps): string => props.theme.checkboxBorderColor};\n  cursor: pointer;\n  padding: 0;\n  margin-left: -23px;\n`\n\nconst StyledContentWrapper = styled.div<StyledProps>`\n  padding-right: ${(props: StyledProps): string =>\n    props.hasReadMore ? '0px' : '25px'};\n`\n\nexport const CheckboxBase: (props: FieldWrapProps) => ReactElement = ({\n  field,\n  form: { touched, errors, values },\n  ...props\n}) => {\n  const targetRef = useRef<HTMLDivElement>(null)\n  const [collapsed, setCollapsed] = useState(false)\n  const [hasCollapse, setHasCollapse] = useState(false)\n  const { id, addFieldForSkip } = useContext(FormContext)\n  const handleOnMouseOut = (): void => {\n    setFormValuesToCache(values, id)\n  }\n  const [showMoreCollapsed, setShowMoreCollapsed] = useState(false)\n  const htmlContentList =\n    props.HTMLcontent && props.HTMLcontent.split('--MORE--')\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    props.onChange && props.onChange(e)\n    field.onChange && field.onChange(e)\n    setFormValuesToCache(values, id)\n  }\n\n  const onCollapseClick = (): void => setCollapsed(!collapsed)\n\n  const showMoreCollapseToggle = (): void =>\n    setShowMoreCollapsed(!showMoreCollapsed)\n\n  useLayoutEffect(() => {\n    if (\n      targetRef.current &&\n      targetRef.current.offsetHeight > 22 &&\n      !props.disableCollapse &&\n      !props.hasReadMore\n    ) {\n      setHasCollapse(true)\n    }\n  }, [props.disableCollapse, props.hasReadMore, targetRef])\n\n  useEffect(() => {\n    props.skipFieldForApi && addFieldForSkip && addFieldForSkip(field.name)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledRow\n      hasCollapse={hasCollapse && !props.disableCollapse && !props.hasReadMore}\n      collapsed={collapsed || props.disableCollapse || props.hasReadMore}\n    >\n      <Wrapper ref={targetRef} onMouseOut={handleOnMouseOut}>\n        <Checkbox\n          {...field}\n          {...props}\n          onChange={handleOnChange}\n          checked={field.value}\n          value={field.value || false}\n          error={\n            (touched[field.name] && errors[field.name]) as  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              | FormikErrors<any>\n              | undefined\n          }\n        />\n        {props.label && <StyledText>{props.label}</StyledText>}\n        <StyledContentWrapper hasReadMore={props.hasReadMore}>\n          {props.HTMLcontent && htmlContentList && (\n            <StyledText\n              dangerouslySetInnerHTML={{\n                __html: props.hasReadMore\n                  ? htmlContentList[0]\n                  : props.HTMLcontent,\n              }}\n            />\n          )}\n          {props.hasReadMore &&\n            htmlContentList &&\n            htmlContentList[1] &&\n            !showMoreCollapsed && (\n              <StyledReadMore onClick={showMoreCollapseToggle}>\n                {props.showMoreText}\n              </StyledReadMore>\n            )}\n          {props.hasReadMore &&\n            htmlContentList &&\n            htmlContentList[1] &&\n            showMoreCollapsed && (\n              <StyledText\n                dangerouslySetInnerHTML={{ __html: htmlContentList[1] }}\n              />\n            )}\n          {props.hasReadMore &&\n            htmlContentList &&\n            htmlContentList[1] &&\n            showMoreCollapsed && (\n              <StyledReadMore onClick={showMoreCollapseToggle}>\n                {props.showLessText}\n              </StyledReadMore>\n            )}\n        </StyledContentWrapper>\n        {props.childrenBody && <StyledText>{props.childrenBody}</StyledText>}\n      </Wrapper>\n      <StyledArrow\n        hasCollapse={hasCollapse}\n        collapsed={collapsed}\n        onClick={onCollapseClick}\n      />\n    </StyledRow>\n  )\n}\n\nexport default CheckboxBase\n"],"file":"CheckBox.js"}