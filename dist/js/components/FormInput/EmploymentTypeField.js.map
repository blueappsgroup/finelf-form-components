{"version":3,"sources":["../../../../src/components/FormInput/EmploymentTypeField.tsx"],"names":["options","fixed","temporary","self_employed","fixed_partial","government","unemployed","pension","agriculture","student","housewife","other","service_contract","conditionValueListForCompanyNameField","EmploymentTypeField","id","label","name","required","validate","showError","values","validateForm","fieldValue","BaseSelectField","includes","defaultProps"],"mappings":";;;;;;;;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;AARA;AAUA,IAAMA,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,sCADO;AAEdC,EAAAA,SAAS,EAAE,mCAFG;AAGdC,EAAAA,aAAa,EAAE,kBAHD;AAIdC,EAAAA,aAAa,EAAE,sDAJD;AAKdC,EAAAA,UAAU,EAAE,oBALE;AAMdC,EAAAA,UAAU,EAAE,YANE;AAOdC,EAAAA,OAAO,EAAE,iBAPK;AAQdC,EAAAA,WAAW,EAAE,oBARC;AASdC,EAAAA,OAAO,EAAE,SATK;AAUdC,EAAAA,SAAS,EAAE,kBAVG;AAWdC,EAAAA,KAAK,EAAE,MAXO;AAYdC,EAAAA,gBAAgB,EAAE;AAZJ,CAAhB;AAeA,IAAMC,qCAAqC,GAAG,CAC5C,OAD4C,EAE5C,WAF4C,EAG5C,eAH4C,EAI5C,YAJ4C,EAK5C,aAL4C,EAM5C,kBAN4C,CAA9C;;AASA,IAAMC,mBAAyC,GAAG,SAA5CA,mBAA4C,OAO5C;AAAA,MANJC,EAMI,QANJA,EAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,uBAJJC,IAII;AAAA,MAJJA,IAII,0BAJG,iBAIH;AAAA,2BAHJC,QAGI;AAAA,MAHJA,QAGI,8BAHO,KAGP;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,4BADJC,SACI;AAAA,MADJA,SACI,+BADQ,IACR;;AAAA,0BAC6B,+BAD7B;AAAA,MACIC,MADJ,qBACIA,MADJ;AAAA,MACYC,YADZ,qBACYA,YADZ;;AAEJ,MAAMC,UAAU,GAAGF,MAAM,CAACJ,IAAD,CAAzB;AACA,wBAAU,YAAM;AACdK,IAAAA,YAAY;AACb,GAFD,EAEG,CAACC,UAAD,EAAaD,YAAb,CAFH;AAIA,sBACE,yEACE,6BAAC,aAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,EAAE,EAAEL,EAHN;AAIE,IAAA,IAAI,EAAEE,IAJR;AAKE,IAAA,SAAS,EAAEO,qBALb;AAME,IAAA,KAAK,EAAER,KANT;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,OAAO,EAAEhB,OARX;AASE,IAAA,QAAQ,EACLmB,QAAQ,IAAIA,QAAQ,CAACD,QAAD,CAArB,IAAoC,8BAAeA,QAAf,EAAyBlB,OAAzB;AAVxC,IADF,EAcGiB,IAAI,IAAII,MAAM,CAACJ,IAAD,CAAN,KAAiB,eAAzB,iBACC,6BAAC,wBAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,IAAI,EAAC;AAA1B,IAfJ,EAiBGA,IAAI,IAAIJ,qCAAqC,CAACY,QAAtC,CAA+CJ,MAAM,CAACJ,IAAD,CAArD,CAAR,iBACC,6BAAC,yBAAD;AAAkB,IAAA,QAAQ,MAA1B;AAA2B,IAAA,IAAI,EAAC;AAAhC,IAlBJ,CADF;AAuBD,CArCD;;AAuCAH,mBAAmB,CAACY,YAApB,GAAmC;AACjCT,EAAAA,IAAI,EAAE;AAD2B,CAAnC;eAIeH,mB","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport React, { FC, useEffect } from 'react'\nimport { Field, useFormikContext } from 'formik'\n\nimport { SelectFieldProps } from '../../types'\nimport { BaseSelectField } from './base'\nimport { validateSelect } from './validate'\nimport CompanyTax from './CompanyTaxField'\nimport CompanyNameField from './CompanyNameField'\n\nconst options = {\n  fixed: 'umowa o pracę na czas nieokreślony',\n  temporary: 'umowa o pracę na czas określony',\n  self_employed: 'samozatrudnienie',\n  fixed_partial: 'umowa o pracę na czas nieokreślony (niepełny etat)',\n  government: 'stanowisko rządowe',\n  unemployed: 'bezrobotny',\n  pension: 'emeryt/rencista',\n  agriculture: 'gospodarstwo rolne',\n  student: 'student',\n  housewife: 'gospodyni domowa',\n  other: 'inne',\n  service_contract: 'umowa zlecenie / umowa o dzieło',\n}\n\nconst conditionValueListForCompanyNameField = [\n  'fixed',\n  'temporary',\n  'fixed_partial',\n  'government',\n  'agriculture',\n  'service_contract',\n]\n\nconst EmploymentTypeField: FC<SelectFieldProps> = ({\n  id,\n  label,\n  name = 'employment_type',\n  required = false,\n  validate,\n  showError = true,\n}) => {\n  const { values, validateForm } = useFormikContext<any>()\n  const fieldValue = values[name]\n  useEffect(() => {\n    validateForm()\n  }, [fieldValue, validateForm])\n\n  return (\n    <>\n      <Field\n        required={required}\n        showError={showError}\n        id={id}\n        name={name}\n        component={BaseSelectField}\n        label={label}\n        type=\"select\"\n        options={options}\n        validate={\n          (validate && validate(required)) || validateSelect(required, options)\n        }\n      />\n      {name && values[name] === 'self_employed' && (\n        <CompanyTax required name=\"company_tax_id\" />\n      )}\n      {name && conditionValueListForCompanyNameField.includes(values[name]) && (\n        <CompanyNameField required name=\"company_name\" />\n      )}\n    </>\n  )\n}\n\nEmploymentTypeField.defaultProps = {\n  name: 'employment_type',\n}\n\nexport default EmploymentTypeField\n"],"file":"EmploymentTypeField.js"}