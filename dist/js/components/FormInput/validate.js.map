{"version":3,"sources":["../../../../src/components/FormInput/validate.ts"],"names":["validateText","required","value","validateEmail","customErrorMsg","validateTelNumber","validateCheckbox","undefined","validatePesel","validateHouseNumber","validateCityName","validateZipCode","validateCompanyTax","validateBankAccountNumber","validateIDCardNumber","validateOtherLoanAmount"],"mappings":"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","sourcesContent":["import {\n  isEmpty,\n  isNotValidLength,\n  isNotValidPhoneNumber,\n  isNotValidEmail,\n  isNotLetter,\n  isNotNumber,\n  isValidPesel,\n  haveSpecialChars,\n  isNotValidZipCode,\n  isValidNIP,\n  isValidBankAccountNumber,\n  isValidIDCard,\n  isNotValidIDCard,\n  isNotValidOtherLoanAmount,\n} from './validateHelpers'\n\nexport const validateText: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (isNotLetter(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateEmail: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Niepoprawny adres email',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidEmail(value)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateTelNumber: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Niepoprawny numer telefonu',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidPhoneNumber(value)) {\n    return customErrorMsg\n  }\n}\n\nexport const validateCheckbox: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => (required && !value && 'required') || undefined\n\nexport const validatePesel: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n\n  if (!isValidPesel(value)) {\n    return 'Podany PESEL jest nieprawidłowy'\n  }\n}\n\nexport const validateHouseNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value, 1, 10)) {\n    return 'Podany numer mieszkania jest nieprawidłowy'\n  }\n}\n\nexport const validateCityName: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value)) {\n    return 'Pole musi zawierać między 2 - 100 znaków'\n  }\n\n  if (haveSpecialChars(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateZipCode: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidLength(value, 1, 10)) {\n    return 'Pole musi zawierać między 1 - 10 znaków'\n  }\n\n  if (isNotValidZipCode(value)) {\n    return 'Podane dane są nieprawidłowe'\n  }\n}\n\nexport const validateCompanyTax: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n\n  if (isNotValidLength(value, 10, 10)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n  if (!isValidNIP(value)) {\n    return 'Podany NIP jest nieprawidłowy'\n  }\n}\n\nexport const validateBankAccountNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n\n  if (isNotValidLength(value, 26, 26)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n  if (!isValidBankAccountNumber(value)) {\n    return 'Podany numer konta jest nieprawidłowy'\n  }\n}\n\nexport const validateIDCardNumber: (\n  required: boolean\n) => (value: string) => string | undefined = (required: boolean) => (\n  value: string\n): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidIDCard(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (!isValidIDCard(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n\n  if (isNotNumber(value)) {\n    return 'Podany numer dowodu jest nieprawidłowy'\n  }\n}\n\nexport const validateOtherLoanAmount: (\n  customErrorMsg: string | undefined,\n  required: boolean\n) => (value: string) => string | undefined = (\n  customErrorMsg = 'Podana kwota jest nieprawidłowa',\n  required: boolean\n) => (value: string): string | undefined => {\n  if (required && isEmpty(value)) {\n    return 'To pole jest wymagane'\n  }\n\n  if (isNotValidOtherLoanAmount(value)) {\n    return customErrorMsg\n  }\n}\n"],"file":"validate.js"}