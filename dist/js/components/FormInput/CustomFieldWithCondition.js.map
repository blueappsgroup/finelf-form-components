{"version":3,"sources":["../../../../src/components/FormInput/CustomFieldWithCondition.tsx"],"names":["CustomFieldWithCondition","props","values","errors","setErrors","setValues","setFieldTouched","FormContext","id","required","setRequired","visibleCondition","visible","setVisible","requiredCondition","isRequired","Object","keys","some","key","includes","name","isVisible","undefined","validate"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useEffect, useState } from 'react'\nimport { Field, useFormikContext } from 'formik'\nimport { FormContext, setFormValuesToCache } from '../../utils'\n\ntype Props = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  requiredCondition?: { [key: string]: any }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  visibleCondition?: { [key: string]: any }\n}\nconst CustomFieldWithCondition: FC<Props> = (props) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const {\n    values,\n    errors,\n    setErrors,\n    setValues,\n    setFieldTouched,\n  } = useFormikContext<any>()\n  const { id } = useContext(FormContext)\n  const [required, setRequired] = useState(props.required || false)\n  const [visible, setVisible] = useState<boolean>(\n    (props.visibleCondition && false) || true\n  )\n\n  useEffect(() => {\n    if (!props.required && props.requiredCondition) {\n      let isRequired = false\n\n      Object.keys(props.requiredCondition).some((key) => {\n        if (\n          props.requiredCondition &&\n          props.requiredCondition[key].includes(values[key])\n        ) {\n          isRequired = true\n          return true\n        }\n\n        return false\n      })\n\n      if (required !== isRequired) {\n        setRequired(isRequired)\n      }\n    }\n  }, [values, props.required, props.requiredCondition, required, props.name])\n\n  useEffect(() => {\n    if (props.visibleCondition) {\n      let isVisible = false\n\n      Object.keys(props.visibleCondition).some((key) => {\n        if (\n          props.visibleCondition &&\n          props.visibleCondition[key].includes(values[key])\n        ) {\n          isVisible = true\n\n          return true\n        }\n\n        return false\n      })\n\n      if (!isVisible && isVisible !== visible) {\n        setValues({ ...values, [props.name]: undefined }, false)\n        setErrors({ ...errors, [props.name]: undefined })\n        setFormValuesToCache({ ...values, [props.name]: undefined }, id)\n        setVisible(isVisible)\n      }\n\n      if (isVisible && isVisible !== visible) {\n        setVisible(isVisible)\n      }\n    }\n  }, [\n    values,\n    setValues,\n    props.visibleCondition,\n    props.name,\n    visible,\n    errors,\n    setErrors,\n    id,\n    required,\n    setFieldTouched,\n  ])\n\n  return (\n    <Field\n      {...props}\n      required={required && visible}\n      validate={props.validate(required && visible)}\n      visible={visible}\n    />\n  )\n}\n\nexport default CustomFieldWithCondition\n"],"file":"CustomFieldWithCondition.js"}